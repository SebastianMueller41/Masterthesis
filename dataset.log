2024-05-20 16:33:57,688 DEBUG:starting thread (client mode): 0x2da8dc0
2024-05-20 16:33:57,688 DEBUG:Local version/idstring: SSH-2.0-paramiko_3.4.0
2024-05-20 16:33:57,734 DEBUG:Remote version/idstring: SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.11
2024-05-20 16:33:57,734 INFO:Connected (version 2.0, client OpenSSH_8.2p1)
2024-05-20 16:33:57,763 DEBUG:=== Key exchange possibilities ===
2024-05-20 16:33:57,763 DEBUG:kex algos: curve25519-sha256, curve25519-sha256@libssh.org, ecdh-sha2-nistp256, ecdh-sha2-nistp384, ecdh-sha2-nistp521, diffie-hellman-group-exchange-sha256, diffie-hellman-group16-sha512, diffie-hellman-group18-sha512, diffie-hellman-group14-sha256, kex-strict-s-v00@openssh.com
2024-05-20 16:33:57,763 DEBUG:server key: rsa-sha2-512, rsa-sha2-256, ssh-rsa, ecdsa-sha2-nistp256, ssh-ed25519
2024-05-20 16:33:57,763 DEBUG:client encrypt: chacha20-poly1305@openssh.com, aes128-ctr, aes192-ctr, aes256-ctr, aes128-gcm@openssh.com, aes256-gcm@openssh.com
2024-05-20 16:33:57,763 DEBUG:server encrypt: chacha20-poly1305@openssh.com, aes128-ctr, aes192-ctr, aes256-ctr, aes128-gcm@openssh.com, aes256-gcm@openssh.com
2024-05-20 16:33:57,763 DEBUG:client mac: umac-64-etm@openssh.com, umac-128-etm@openssh.com, hmac-sha2-256-etm@openssh.com, hmac-sha2-512-etm@openssh.com, hmac-sha1-etm@openssh.com, umac-64@openssh.com, umac-128@openssh.com, hmac-sha2-256, hmac-sha2-512, hmac-sha1
2024-05-20 16:33:57,763 DEBUG:server mac: umac-64-etm@openssh.com, umac-128-etm@openssh.com, hmac-sha2-256-etm@openssh.com, hmac-sha2-512-etm@openssh.com, hmac-sha1-etm@openssh.com, umac-64@openssh.com, umac-128@openssh.com, hmac-sha2-256, hmac-sha2-512, hmac-sha1
2024-05-20 16:33:57,763 DEBUG:client compress: none, zlib@openssh.com
2024-05-20 16:33:57,763 DEBUG:server compress: none, zlib@openssh.com
2024-05-20 16:33:57,763 DEBUG:client lang: <none>
2024-05-20 16:33:57,763 DEBUG:server lang: <none>
2024-05-20 16:33:57,763 DEBUG:kex follows: False
2024-05-20 16:33:57,763 DEBUG:=== Key exchange agreements ===
2024-05-20 16:33:57,763 DEBUG:Strict kex mode: True
2024-05-20 16:33:57,763 DEBUG:Kex: curve25519-sha256@libssh.org
2024-05-20 16:33:57,763 DEBUG:HostKey: ssh-ed25519
2024-05-20 16:33:57,763 DEBUG:Cipher: aes128-ctr
2024-05-20 16:33:57,763 DEBUG:MAC: hmac-sha2-256
2024-05-20 16:33:57,763 DEBUG:Compression: none
2024-05-20 16:33:57,763 DEBUG:=== End of kex handshake ===
2024-05-20 16:33:57,818 DEBUG:Resetting outbound seqno after NEWKEYS due to strict mode
2024-05-20 16:33:57,819 DEBUG:kex engine KexCurve25519 specified hash_algo <built-in function openssl_sha256>
2024-05-20 16:33:57,819 DEBUG:Switch to new keys ...
2024-05-20 16:33:57,819 DEBUG:Resetting inbound seqno after NEWKEYS due to strict mode
2024-05-20 16:33:57,819 DEBUG:Attempting public-key auth...
2024-05-20 16:33:57,819 DEBUG:Got EXT_INFO: {'server-sig-algs': b'ssh-ed25519,sk-ssh-ed25519@openssh.com,ssh-rsa,rsa-sha2-256,rsa-sha2-512,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,sk-ecdsa-sha2-nistp256@openssh.com'}
2024-05-20 16:33:57,876 DEBUG:userauth is OK
2024-05-20 16:33:57,876 DEBUG:Finalizing pubkey algorithm for key of type 'ssh-rsa'
2024-05-20 16:33:57,876 DEBUG:Our pubkey algorithm list: ['rsa-sha2-512', 'rsa-sha2-256', 'ssh-rsa']
2024-05-20 16:33:57,876 DEBUG:Server-side algorithm list: ['ssh-ed25519', 'sk-ssh-ed25519@openssh.com', 'ssh-rsa', 'rsa-sha2-256', 'rsa-sha2-512', 'ssh-dss', 'ecdsa-sha2-nistp256', 'ecdsa-sha2-nistp384', 'ecdsa-sha2-nistp521', 'sk-ecdsa-sha2-nistp256@openssh.com']
2024-05-20 16:33:57,877 DEBUG:Agreed upon 'rsa-sha2-512' pubkey algorithm
2024-05-20 16:33:57,939 INFO:Authentication (publickey) successful!
2024-05-20 16:33:57,952 DEBUG:[chan 0] Max packet in: 32768 bytes
2024-05-20 16:33:58,492 DEBUG:Received global request "hostkeys-00@openssh.com"
2024-05-20 16:33:58,493 DEBUG:Rejecting "hostkeys-00@openssh.com" global request from server.
2024-05-20 16:33:58,493 DEBUG:Debug msg: b'/home/smueller/.ssh/authorized_keys:1: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding'
2024-05-20 16:33:58,523 DEBUG:[chan 0] Max packet out: 32768 bytes
2024-05-20 16:33:58,523 DEBUG:Secsh channel 0 opened.
2024-05-20 16:33:58,525 DEBUG:Building SSL context
2024-05-20 16:33:58,553 DEBUG:Switching to SSL
2024-05-20 16:33:58,670 DEBUG:SSL has been enabled
2024-05-20 16:33:58,670 DEBUG:Starting authorization phase
2024-05-20 16:33:58,670 DEBUG:The provided initial strategy is caching_sha2_password
2024-05-20 16:33:58,670 INFO:package: mysql.connector.plugins
2024-05-20 16:33:58,670 INFO:plugin_name: caching_sha2_password
2024-05-20 16:33:58,670 INFO:AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin
2024-05-20 16:33:58,700 DEBUG:Exchanging further packets
2024-05-20 16:33:58,730 DEBUG:caching_sha2_password completed succesfully
2024-05-20 16:33:58,992 DEBUG:Random Value: 6, Inconsistency Value: 1, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: A0 && !A1
2024-05-20 16:33:58,992 DEBUG:Random Value: 3, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A0 || A1
2024-05-20 16:33:58,992 DEBUG:Random Value: 2, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A1 || A2
2024-05-20 16:33:58,992 DEBUG:Random Value: 7, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A0 && !A1
2024-05-20 16:33:58,992 DEBUG:Random Value: 8, Inconsistency Value: 2, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: A1 && !A2
2024-05-20 16:33:58,992 DEBUG:Random Value: 1, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A0 || !A1
2024-05-20 16:33:58,992 DEBUG:Random Value: 4, Inconsistency Value: 1, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: A2 && !A1
2024-05-20 16:33:58,992 DEBUG:Random Value: 5, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A0
2024-05-20 16:33:58,996 DEBUG:[chan 0] EOF sent (0)
2024-05-20 16:33:59,024 DEBUG:[chan 0] EOF received (0)
2024-05-20 16:33:59,189 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A0 && !A1', '!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:33:59,189 DEBUG:Finding kernel for 8 elements of dataset = ['A0 && !A1', '!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:33:59,189 INFO:8 ELEMENTS: ['A0 && !A1', '!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:33:59,189 DEBUG:B_PRIME with 1 elements: ['A0 && !A1']
2024-05-20 16:33:59,208 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A0 && !A1'])
2024-05-20 16:33:59,208 INFO:Checking line: A0 && !A1 with index: 0
2024-05-20 16:33:59,208 DEBUG:Removing element: A0 && !A1
2024-05-20 16:33:59,208 DEBUG:B with 0 elements = []
2024-05-20 16:33:59,226 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-05-20 16:33:59,226 INFO:Kernel output with 1 elements: ['A0 && !A1']
2024-05-20 16:33:59,226 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:33:59,226 DEBUG:Adding node to priority queue with priority: 0, edge: None
2024-05-20 16:33:59,226 DEBUG:Expanding node with bbvalue: 0, edge: None
2024-05-20 16:33:59,226 DEBUG:Checking pruning: node bbvalue = 0, hitting_set_value = 0.0, boundary = inf
2024-05-20 16:33:59,226 DEBUG:Calculating bbvalue: current_node bbvalue = 0, element = A0 && !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 1.0
2024-05-20 16:33:59,226 DEBUG:Adding node to priority queue with priority: -1, edge: A0 && !A1
2024-05-20 16:33:59,226 DEBUG:Expanding node with bbvalue: 1.0, edge: A0 && !A1
2024-05-20 16:33:59,226 DEBUG:Checking pruning: node bbvalue = 1.0, hitting_set_value = 1.0, boundary = inf
2024-05-20 16:33:59,245 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:33:59,245 DEBUG:Finding kernel for 7 elements of dataset = ['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:33:59,245 INFO:7 ELEMENTS: ['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:33:59,245 DEBUG:B_PRIME with 1 elements: ['!A0 || A1']
2024-05-20 16:33:59,263 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1'])
2024-05-20 16:33:59,263 DEBUG:B_PRIME with 2 elements: ['!A0 || A1', '!A1 || A2']
2024-05-20 16:33:59,281 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2'])
2024-05-20 16:33:59,281 DEBUG:B_PRIME with 3 elements: ['!A0 || A1', '!A1 || A2', '!A0 && !A1']
2024-05-20 16:33:59,299 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1'])
2024-05-20 16:33:59,300 DEBUG:B_PRIME with 4 elements: ['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2']
2024-05-20 16:33:59,322 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2'])
2024-05-20 16:33:59,322 INFO:Checking line: !A0 || A1 with index: 0
2024-05-20 16:33:59,322 DEBUG:Removing element: !A0 || A1
2024-05-20 16:33:59,322 DEBUG:B with 3 elements = ['!A1 || A2', '!A0 && !A1', 'A1 && !A2']
2024-05-20 16:33:59,342 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1 || A2', '!A0 && !A1', 'A1 && !A2'])
2024-05-20 16:33:59,342 INFO:SHRINK: CN = TRUE, removing: !A0 || A1
2024-05-20 16:33:59,342 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1 || A2', '!A0 && !A1', 'A1 && !A2']
2024-05-20 16:33:59,342 INFO:Checking line: !A1 || A2 with index: 0
2024-05-20 16:33:59,342 DEBUG:Removing element: !A1 || A2
2024-05-20 16:33:59,342 DEBUG:B with 2 elements = ['!A0 && !A1', 'A1 && !A2']
2024-05-20 16:33:59,360 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 && !A1', 'A1 && !A2'])
2024-05-20 16:33:59,360 INFO:SHRINK: CN = TRUE, removing: !A1 || A2
2024-05-20 16:33:59,360 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A0 && !A1', 'A1 && !A2']
2024-05-20 16:33:59,360 INFO:Checking line: !A0 && !A1 with index: 0
2024-05-20 16:33:59,360 DEBUG:Removing element: !A0 && !A1
2024-05-20 16:33:59,360 DEBUG:B with 1 elements = ['A1 && !A2']
2024-05-20 16:33:59,378 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['A1 && !A2'])
2024-05-20 16:33:59,378 INFO:Checking line: A1 && !A2 with index: 1
2024-05-20 16:33:59,378 DEBUG:Removing element: A1 && !A2
2024-05-20 16:33:59,378 DEBUG:B with 1 elements = ['!A0 && !A1']
2024-05-20 16:33:59,396 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 && !A1'])
2024-05-20 16:33:59,396 INFO:Kernel output with 2 elements: ['!A0 && !A1', 'A1 && !A2']
2024-05-20 16:33:59,396 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:33:59,396 DEBUG:Calculating bbvalue: current_node bbvalue = 1.0, element = !A0 && !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 2.0
2024-05-20 16:33:59,396 DEBUG:Calculating bbvalue: current_node bbvalue = 1.0, element = A1 && !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 2.0
2024-05-20 16:33:59,396 DEBUG:Adding node to priority queue with priority: -2, edge: A1 && !A2
2024-05-20 16:33:59,396 DEBUG:Adding node to priority queue with priority: 0, edge: !A0 && !A1
2024-05-20 16:33:59,396 DEBUG:Expanding node with bbvalue: 2.0, edge: A1 && !A2
2024-05-20 16:33:59,397 DEBUG:Checking pruning: node bbvalue = 2.0, hitting_set_value = 1.5, boundary = inf
2024-05-20 16:33:59,415 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:33:59,415 DEBUG:Dataset does not entail A0&&!A0, kernel = empty
2024-05-20 16:33:59,415 DEBUG:Updated boundary: 1.5
2024-05-20 16:33:59,415 DEBUG:Expanding node with bbvalue: 2.0, edge: !A0 && !A1
2024-05-20 16:33:59,415 DEBUG:Checking pruning: node bbvalue = 2.0, hitting_set_value = 1.0, boundary = 1.5
2024-05-20 16:33:59,433 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:33:59,434 DEBUG:Finding kernel for 6 elements of dataset = ['!A0 || A1', '!A1 || A2', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:33:59,434 INFO:6 ELEMENTS: ['!A0 || A1', '!A1 || A2', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:33:59,434 DEBUG:B_PRIME with 1 elements: ['!A0 || A1']
2024-05-20 16:33:59,451 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1'])
2024-05-20 16:33:59,452 DEBUG:B_PRIME with 2 elements: ['!A0 || A1', '!A1 || A2']
2024-05-20 16:33:59,469 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2'])
2024-05-20 16:33:59,469 DEBUG:B_PRIME with 3 elements: ['!A0 || A1', '!A1 || A2', 'A1 && !A2']
2024-05-20 16:33:59,487 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', 'A1 && !A2'])
2024-05-20 16:33:59,487 INFO:Checking line: !A0 || A1 with index: 0
2024-05-20 16:33:59,487 DEBUG:Removing element: !A0 || A1
2024-05-20 16:33:59,487 DEBUG:B with 2 elements = ['!A1 || A2', 'A1 && !A2']
2024-05-20 16:33:59,505 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1 || A2', 'A1 && !A2'])
2024-05-20 16:33:59,505 INFO:SHRINK: CN = TRUE, removing: !A0 || A1
2024-05-20 16:33:59,505 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A1 || A2', 'A1 && !A2']
2024-05-20 16:33:59,505 INFO:Checking line: !A1 || A2 with index: 0
2024-05-20 16:33:59,505 DEBUG:Removing element: !A1 || A2
2024-05-20 16:33:59,505 DEBUG:B with 1 elements = ['A1 && !A2']
2024-05-20 16:33:59,522 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['A1 && !A2'])
2024-05-20 16:33:59,522 INFO:Checking line: A1 && !A2 with index: 1
2024-05-20 16:33:59,522 DEBUG:Removing element: A1 && !A2
2024-05-20 16:33:59,522 DEBUG:B with 1 elements = ['!A1 || A2']
2024-05-20 16:33:59,539 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A1 || A2'])
2024-05-20 16:33:59,539 INFO:Kernel output with 2 elements: ['!A1 || A2', 'A1 && !A2']
2024-05-20 16:33:59,539 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:33:59,540 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = !A1 || A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-05-20 16:33:59,540 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = A1 && !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-05-20 16:33:59,540 DEBUG:Adding node to priority queue with priority: -2, edge: A1 && !A2
2024-05-20 16:33:59,540 DEBUG:Adding node to priority queue with priority: 0, edge: !A1 || A2
2024-05-20 16:33:59,540 DEBUG:Expanding node with bbvalue: 3.0, edge: A1 && !A2
2024-05-20 16:33:59,540 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 1.5, boundary = 1.5
2024-05-20 16:33:59,540 DEBUG:Pruning node with bbvalue: 3.0, edge: A1 && !A2
2024-05-20 16:33:59,540 DEBUG:Expanding node with bbvalue: 3.0, edge: !A1 || A2
2024-05-20 16:33:59,540 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 1.0, boundary = 1.5
2024-05-20 16:33:59,557 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:33:59,557 DEBUG:Finding kernel for 5 elements of dataset = ['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:33:59,557 INFO:5 ELEMENTS: ['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:33:59,557 DEBUG:B_PRIME with 1 elements: ['!A0 || A1']
2024-05-20 16:33:59,575 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1'])
2024-05-20 16:33:59,575 DEBUG:B_PRIME with 2 elements: ['!A0 || A1', 'A1 && !A2']
2024-05-20 16:33:59,592 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', 'A1 && !A2'])
2024-05-20 16:33:59,592 DEBUG:B_PRIME with 3 elements: ['!A0 || A1', 'A1 && !A2', '!A0 || !A1']
2024-05-20 16:33:59,610 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', 'A1 && !A2', '!A0 || !A1'])
2024-05-20 16:33:59,610 DEBUG:B_PRIME with 4 elements: ['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1']
2024-05-20 16:33:59,627 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1'])
2024-05-20 16:33:59,627 INFO:Checking line: !A0 || A1 with index: 0
2024-05-20 16:33:59,627 DEBUG:Removing element: !A0 || A1
2024-05-20 16:33:59,627 DEBUG:B with 3 elements = ['A1 && !A2', '!A0 || !A1', 'A2 && !A1']
2024-05-20 16:33:59,645 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1 && !A2', '!A0 || !A1', 'A2 && !A1'])
2024-05-20 16:33:59,645 INFO:SHRINK: CN = TRUE, removing: !A0 || A1
2024-05-20 16:33:59,645 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['A1 && !A2', '!A0 || !A1', 'A2 && !A1']
2024-05-20 16:33:59,645 INFO:Checking line: A1 && !A2 with index: 0
2024-05-20 16:33:59,645 DEBUG:Removing element: A1 && !A2
2024-05-20 16:33:59,645 DEBUG:B with 2 elements = ['!A0 || !A1', 'A2 && !A1']
2024-05-20 16:33:59,662 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || !A1', 'A2 && !A1'])
2024-05-20 16:33:59,662 INFO:Checking line: !A0 || !A1 with index: 1
2024-05-20 16:33:59,662 DEBUG:Removing element: !A0 || !A1
2024-05-20 16:33:59,662 DEBUG:B with 2 elements = ['A1 && !A2', 'A2 && !A1']
2024-05-20 16:33:59,679 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1 && !A2', 'A2 && !A1'])
2024-05-20 16:33:59,680 INFO:SHRINK: CN = TRUE, removing: !A0 || !A1
2024-05-20 16:33:59,680 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['A1 && !A2', 'A2 && !A1']
2024-05-20 16:33:59,680 INFO:Checking line: A2 && !A1 with index: 1
2024-05-20 16:33:59,680 DEBUG:Removing element: A2 && !A1
2024-05-20 16:33:59,680 DEBUG:B with 1 elements = ['A1 && !A2']
2024-05-20 16:33:59,697 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['A1 && !A2'])
2024-05-20 16:33:59,697 INFO:Kernel output with 2 elements: ['A1 && !A2', 'A2 && !A1']
2024-05-20 16:33:59,697 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:33:59,697 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = A1 && !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-05-20 16:33:59,697 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = A2 && !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-05-20 16:33:59,697 DEBUG:Adding node to priority queue with priority: -2, edge: A1 && !A2
2024-05-20 16:33:59,697 DEBUG:Adding node to priority queue with priority: -1, edge: A2 && !A1
2024-05-20 16:33:59,697 DEBUG:Expanding node with bbvalue: 4.0, edge: A1 && !A2
2024-05-20 16:33:59,697 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 1.5, boundary = 1.5
2024-05-20 16:33:59,697 DEBUG:Pruning node with bbvalue: 4.0, edge: A1 && !A2
2024-05-20 16:33:59,697 DEBUG:Expanding node with bbvalue: 4.0, edge: A2 && !A1
2024-05-20 16:33:59,697 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 2.0, boundary = 1.5
2024-05-20 16:33:59,697 DEBUG:Pruning node with bbvalue: 4.0, edge: A2 && !A1
2024-05-20 16:36:28,786 DEBUG:starting thread (client mode): 0x4aada60
2024-05-20 16:36:28,786 DEBUG:Local version/idstring: SSH-2.0-paramiko_3.4.0
2024-05-20 16:36:28,837 DEBUG:Remote version/idstring: SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.11
2024-05-20 16:36:28,837 INFO:Connected (version 2.0, client OpenSSH_8.2p1)
2024-05-20 16:36:28,869 DEBUG:=== Key exchange possibilities ===
2024-05-20 16:36:28,869 DEBUG:kex algos: curve25519-sha256, curve25519-sha256@libssh.org, ecdh-sha2-nistp256, ecdh-sha2-nistp384, ecdh-sha2-nistp521, diffie-hellman-group-exchange-sha256, diffie-hellman-group16-sha512, diffie-hellman-group18-sha512, diffie-hellman-group14-sha256, kex-strict-s-v00@openssh.com
2024-05-20 16:36:28,869 DEBUG:server key: rsa-sha2-512, rsa-sha2-256, ssh-rsa, ecdsa-sha2-nistp256, ssh-ed25519
2024-05-20 16:36:28,869 DEBUG:client encrypt: chacha20-poly1305@openssh.com, aes128-ctr, aes192-ctr, aes256-ctr, aes128-gcm@openssh.com, aes256-gcm@openssh.com
2024-05-20 16:36:28,869 DEBUG:server encrypt: chacha20-poly1305@openssh.com, aes128-ctr, aes192-ctr, aes256-ctr, aes128-gcm@openssh.com, aes256-gcm@openssh.com
2024-05-20 16:36:28,869 DEBUG:client mac: umac-64-etm@openssh.com, umac-128-etm@openssh.com, hmac-sha2-256-etm@openssh.com, hmac-sha2-512-etm@openssh.com, hmac-sha1-etm@openssh.com, umac-64@openssh.com, umac-128@openssh.com, hmac-sha2-256, hmac-sha2-512, hmac-sha1
2024-05-20 16:36:28,869 DEBUG:server mac: umac-64-etm@openssh.com, umac-128-etm@openssh.com, hmac-sha2-256-etm@openssh.com, hmac-sha2-512-etm@openssh.com, hmac-sha1-etm@openssh.com, umac-64@openssh.com, umac-128@openssh.com, hmac-sha2-256, hmac-sha2-512, hmac-sha1
2024-05-20 16:36:28,869 DEBUG:client compress: none, zlib@openssh.com
2024-05-20 16:36:28,869 DEBUG:server compress: none, zlib@openssh.com
2024-05-20 16:36:28,869 DEBUG:client lang: <none>
2024-05-20 16:36:28,869 DEBUG:server lang: <none>
2024-05-20 16:36:28,869 DEBUG:kex follows: False
2024-05-20 16:36:28,869 DEBUG:=== Key exchange agreements ===
2024-05-20 16:36:28,869 DEBUG:Strict kex mode: True
2024-05-20 16:36:28,869 DEBUG:Kex: curve25519-sha256@libssh.org
2024-05-20 16:36:28,869 DEBUG:HostKey: ssh-ed25519
2024-05-20 16:36:28,869 DEBUG:Cipher: aes128-ctr
2024-05-20 16:36:28,869 DEBUG:MAC: hmac-sha2-256
2024-05-20 16:36:28,869 DEBUG:Compression: none
2024-05-20 16:36:28,869 DEBUG:=== End of kex handshake ===
2024-05-20 16:36:28,924 DEBUG:Resetting outbound seqno after NEWKEYS due to strict mode
2024-05-20 16:36:28,925 DEBUG:kex engine KexCurve25519 specified hash_algo <built-in function openssl_sha256>
2024-05-20 16:36:28,925 DEBUG:Switch to new keys ...
2024-05-20 16:36:28,925 DEBUG:Resetting inbound seqno after NEWKEYS due to strict mode
2024-05-20 16:36:28,925 DEBUG:Attempting public-key auth...
2024-05-20 16:36:28,925 DEBUG:Got EXT_INFO: {'server-sig-algs': b'ssh-ed25519,sk-ssh-ed25519@openssh.com,ssh-rsa,rsa-sha2-256,rsa-sha2-512,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,sk-ecdsa-sha2-nistp256@openssh.com'}
2024-05-20 16:36:28,986 DEBUG:userauth is OK
2024-05-20 16:36:28,986 DEBUG:Finalizing pubkey algorithm for key of type 'ssh-rsa'
2024-05-20 16:36:28,986 DEBUG:Our pubkey algorithm list: ['rsa-sha2-512', 'rsa-sha2-256', 'ssh-rsa']
2024-05-20 16:36:28,986 DEBUG:Server-side algorithm list: ['ssh-ed25519', 'sk-ssh-ed25519@openssh.com', 'ssh-rsa', 'rsa-sha2-256', 'rsa-sha2-512', 'ssh-dss', 'ecdsa-sha2-nistp256', 'ecdsa-sha2-nistp384', 'ecdsa-sha2-nistp521', 'sk-ecdsa-sha2-nistp256@openssh.com']
2024-05-20 16:36:28,986 DEBUG:Agreed upon 'rsa-sha2-512' pubkey algorithm
2024-05-20 16:36:29,049 INFO:Authentication (publickey) successful!
2024-05-20 16:36:29,061 DEBUG:[chan 0] Max packet in: 32768 bytes
2024-05-20 16:36:29,642 DEBUG:Received global request "hostkeys-00@openssh.com"
2024-05-20 16:36:29,642 DEBUG:Rejecting "hostkeys-00@openssh.com" global request from server.
2024-05-20 16:36:29,643 DEBUG:Debug msg: b'/home/smueller/.ssh/authorized_keys:1: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding'
2024-05-20 16:36:29,677 DEBUG:[chan 0] Max packet out: 32768 bytes
2024-05-20 16:36:29,677 DEBUG:Secsh channel 0 opened.
2024-05-20 16:36:29,680 DEBUG:Building SSL context
2024-05-20 16:36:29,709 DEBUG:Switching to SSL
2024-05-20 16:36:29,833 DEBUG:SSL has been enabled
2024-05-20 16:36:29,834 DEBUG:Starting authorization phase
2024-05-20 16:36:29,834 DEBUG:The provided initial strategy is caching_sha2_password
2024-05-20 16:36:29,834 INFO:package: mysql.connector.plugins
2024-05-20 16:36:29,834 INFO:plugin_name: caching_sha2_password
2024-05-20 16:36:29,834 INFO:AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin
2024-05-20 16:36:29,882 DEBUG:Exchanging further packets
2024-05-20 16:36:29,909 DEBUG:caching_sha2_password completed succesfully
2024-05-20 16:36:30,169 DEBUG:Random Value: 6, Inconsistency Value: 1, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: A0 && !A1
2024-05-20 16:36:30,169 DEBUG:Random Value: 3, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A0 || A1
2024-05-20 16:36:30,169 DEBUG:Random Value: 2, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A1 || A2
2024-05-20 16:36:30,169 DEBUG:Random Value: 7, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A0 && !A1
2024-05-20 16:36:30,169 DEBUG:Random Value: 8, Inconsistency Value: 2, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: A1 && !A2
2024-05-20 16:36:30,169 DEBUG:Random Value: 1, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A0 || !A1
2024-05-20 16:36:30,169 DEBUG:Random Value: 4, Inconsistency Value: 1, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: A2 && !A1
2024-05-20 16:36:30,170 DEBUG:Random Value: 5, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A0
2024-05-20 16:36:30,173 INFO:Alpha: A0&&!A0
2024-05-20 16:36:30,174 DEBUG:[chan 0] EOF sent (0)
2024-05-20 16:36:30,221 DEBUG:[chan 0] EOF received (0)
2024-05-20 16:36:30,370 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A0 && !A1', '!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:36:30,370 DEBUG:Finding kernel for 8 elements of dataset = ['A0 && !A1', '!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:36:30,370 INFO:8 ELEMENTS: ['A0 && !A1', '!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:36:30,370 DEBUG:B_PRIME with 1 elements: ['A0 && !A1']
2024-05-20 16:36:30,388 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A0 && !A1'])
2024-05-20 16:36:30,388 INFO:Checking line: A0 && !A1 with index: 0
2024-05-20 16:36:30,388 DEBUG:Removing element: A0 && !A1
2024-05-20 16:36:30,389 DEBUG:B with 0 elements = []
2024-05-20 16:36:30,406 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-05-20 16:36:30,406 INFO:Kernel output with 1 elements: ['A0 && !A1']
2024-05-20 16:36:30,406 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:36:30,406 DEBUG:Adding node to priority queue with priority: 0, edge: None
2024-05-20 16:36:30,406 DEBUG:Expanding node with bbvalue: 0, edge: None
2024-05-20 16:36:30,406 DEBUG:Checking pruning: node bbvalue = 0, hitting_set_value = 0.0, boundary = inf
2024-05-20 16:36:30,406 DEBUG:Calculating bbvalue: current_node bbvalue = 0, element = A0 && !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 1.0
2024-05-20 16:36:30,406 DEBUG:Adding node to priority queue with priority: -1, edge: A0 && !A1
2024-05-20 16:36:30,406 DEBUG:Expanding node with bbvalue: 1.0, edge: A0 && !A1
2024-05-20 16:36:30,406 DEBUG:Checking pruning: node bbvalue = 1.0, hitting_set_value = 1.0, boundary = inf
2024-05-20 16:36:30,423 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:36:30,423 DEBUG:Finding kernel for 7 elements of dataset = ['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:36:30,423 INFO:7 ELEMENTS: ['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:36:30,423 DEBUG:B_PRIME with 1 elements: ['!A0 || A1']
2024-05-20 16:36:30,441 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1'])
2024-05-20 16:36:30,441 DEBUG:B_PRIME with 2 elements: ['!A0 || A1', '!A1 || A2']
2024-05-20 16:36:30,458 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2'])
2024-05-20 16:36:30,458 DEBUG:B_PRIME with 3 elements: ['!A0 || A1', '!A1 || A2', '!A0 && !A1']
2024-05-20 16:36:30,475 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1'])
2024-05-20 16:36:30,475 DEBUG:B_PRIME with 4 elements: ['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2']
2024-05-20 16:36:30,498 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2'])
2024-05-20 16:36:30,498 INFO:Checking line: !A0 || A1 with index: 0
2024-05-20 16:36:30,498 DEBUG:Removing element: !A0 || A1
2024-05-20 16:36:30,498 DEBUG:B with 3 elements = ['!A1 || A2', '!A0 && !A1', 'A1 && !A2']
2024-05-20 16:36:30,515 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1 || A2', '!A0 && !A1', 'A1 && !A2'])
2024-05-20 16:36:30,516 INFO:SHRINK: CN = TRUE, removing: !A0 || A1
2024-05-20 16:36:30,516 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1 || A2', '!A0 && !A1', 'A1 && !A2']
2024-05-20 16:36:30,516 INFO:Checking line: !A1 || A2 with index: 0
2024-05-20 16:36:30,516 DEBUG:Removing element: !A1 || A2
2024-05-20 16:36:30,516 DEBUG:B with 2 elements = ['!A0 && !A1', 'A1 && !A2']
2024-05-20 16:36:30,533 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 && !A1', 'A1 && !A2'])
2024-05-20 16:36:30,534 INFO:SHRINK: CN = TRUE, removing: !A1 || A2
2024-05-20 16:36:30,534 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A0 && !A1', 'A1 && !A2']
2024-05-20 16:36:30,534 INFO:Checking line: !A0 && !A1 with index: 0
2024-05-20 16:36:30,534 DEBUG:Removing element: !A0 && !A1
2024-05-20 16:36:30,534 DEBUG:B with 1 elements = ['A1 && !A2']
2024-05-20 16:36:30,551 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['A1 && !A2'])
2024-05-20 16:36:30,551 INFO:Checking line: A1 && !A2 with index: 1
2024-05-20 16:36:30,551 DEBUG:Removing element: A1 && !A2
2024-05-20 16:36:30,551 DEBUG:B with 1 elements = ['!A0 && !A1']
2024-05-20 16:36:30,569 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 && !A1'])
2024-05-20 16:36:30,569 INFO:Kernel output with 2 elements: ['!A0 && !A1', 'A1 && !A2']
2024-05-20 16:36:30,569 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:36:30,569 DEBUG:Calculating bbvalue: current_node bbvalue = 1.0, element = !A0 && !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 2.0
2024-05-20 16:36:30,569 DEBUG:Calculating bbvalue: current_node bbvalue = 1.0, element = A1 && !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 2.0
2024-05-20 16:36:30,569 DEBUG:Adding node to priority queue with priority: -2, edge: A1 && !A2
2024-05-20 16:36:30,569 DEBUG:Adding node to priority queue with priority: 0, edge: !A0 && !A1
2024-05-20 16:36:30,569 DEBUG:Expanding node with bbvalue: 2.0, edge: A1 && !A2
2024-05-20 16:36:30,570 DEBUG:Checking pruning: node bbvalue = 2.0, hitting_set_value = 1.5, boundary = inf
2024-05-20 16:36:30,587 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:36:30,587 DEBUG:Dataset does not entail A0&&!A0, kernel = empty
2024-05-20 16:36:30,587 DEBUG:Updated boundary: 1.5
2024-05-20 16:36:30,587 DEBUG:Expanding node with bbvalue: 2.0, edge: !A0 && !A1
2024-05-20 16:36:30,587 DEBUG:Checking pruning: node bbvalue = 2.0, hitting_set_value = 1.0, boundary = 1.5
2024-05-20 16:36:30,605 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:36:30,605 DEBUG:Finding kernel for 6 elements of dataset = ['!A0 || A1', '!A1 || A2', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:36:30,605 INFO:6 ELEMENTS: ['!A0 || A1', '!A1 || A2', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:36:30,605 DEBUG:B_PRIME with 1 elements: ['!A0 || A1']
2024-05-20 16:36:30,622 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1'])
2024-05-20 16:36:30,623 DEBUG:B_PRIME with 2 elements: ['!A0 || A1', '!A1 || A2']
2024-05-20 16:36:30,641 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2'])
2024-05-20 16:36:30,641 DEBUG:B_PRIME with 3 elements: ['!A0 || A1', '!A1 || A2', 'A1 && !A2']
2024-05-20 16:36:30,658 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', 'A1 && !A2'])
2024-05-20 16:36:30,659 INFO:Checking line: !A0 || A1 with index: 0
2024-05-20 16:36:30,659 DEBUG:Removing element: !A0 || A1
2024-05-20 16:36:30,659 DEBUG:B with 2 elements = ['!A1 || A2', 'A1 && !A2']
2024-05-20 16:36:30,676 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1 || A2', 'A1 && !A2'])
2024-05-20 16:36:30,676 INFO:SHRINK: CN = TRUE, removing: !A0 || A1
2024-05-20 16:36:30,676 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A1 || A2', 'A1 && !A2']
2024-05-20 16:36:30,676 INFO:Checking line: !A1 || A2 with index: 0
2024-05-20 16:36:30,676 DEBUG:Removing element: !A1 || A2
2024-05-20 16:36:30,676 DEBUG:B with 1 elements = ['A1 && !A2']
2024-05-20 16:36:30,693 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['A1 && !A2'])
2024-05-20 16:36:30,694 INFO:Checking line: A1 && !A2 with index: 1
2024-05-20 16:36:30,694 DEBUG:Removing element: A1 && !A2
2024-05-20 16:36:30,694 DEBUG:B with 1 elements = ['!A1 || A2']
2024-05-20 16:36:30,711 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A1 || A2'])
2024-05-20 16:36:30,711 INFO:Kernel output with 2 elements: ['!A1 || A2', 'A1 && !A2']
2024-05-20 16:36:30,711 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:36:30,711 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = !A1 || A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-05-20 16:36:30,711 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = A1 && !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-05-20 16:36:30,711 DEBUG:Adding node to priority queue with priority: -2, edge: A1 && !A2
2024-05-20 16:36:30,711 DEBUG:Adding node to priority queue with priority: 0, edge: !A1 || A2
2024-05-20 16:36:30,712 DEBUG:Expanding node with bbvalue: 3.0, edge: A1 && !A2
2024-05-20 16:36:30,712 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 1.5, boundary = 1.5
2024-05-20 16:36:30,712 DEBUG:Pruning node with bbvalue: 3.0, edge: A1 && !A2
2024-05-20 16:36:30,712 DEBUG:Expanding node with bbvalue: 3.0, edge: !A1 || A2
2024-05-20 16:36:30,712 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 1.0, boundary = 1.5
2024-05-20 16:36:30,729 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:36:30,729 DEBUG:Finding kernel for 5 elements of dataset = ['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:36:30,729 INFO:5 ELEMENTS: ['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:36:30,729 DEBUG:B_PRIME with 1 elements: ['!A0 || A1']
2024-05-20 16:36:30,746 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1'])
2024-05-20 16:36:30,747 DEBUG:B_PRIME with 2 elements: ['!A0 || A1', 'A1 && !A2']
2024-05-20 16:36:30,764 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', 'A1 && !A2'])
2024-05-20 16:36:30,764 DEBUG:B_PRIME with 3 elements: ['!A0 || A1', 'A1 && !A2', '!A0 || !A1']
2024-05-20 16:36:30,783 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', 'A1 && !A2', '!A0 || !A1'])
2024-05-20 16:36:30,783 DEBUG:B_PRIME with 4 elements: ['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1']
2024-05-20 16:36:30,801 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1'])
2024-05-20 16:36:30,801 INFO:Checking line: !A0 || A1 with index: 0
2024-05-20 16:36:30,801 DEBUG:Removing element: !A0 || A1
2024-05-20 16:36:30,801 DEBUG:B with 3 elements = ['A1 && !A2', '!A0 || !A1', 'A2 && !A1']
2024-05-20 16:36:30,819 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1 && !A2', '!A0 || !A1', 'A2 && !A1'])
2024-05-20 16:36:30,819 INFO:SHRINK: CN = TRUE, removing: !A0 || A1
2024-05-20 16:36:30,819 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['A1 && !A2', '!A0 || !A1', 'A2 && !A1']
2024-05-20 16:36:30,819 INFO:Checking line: A1 && !A2 with index: 0
2024-05-20 16:36:30,819 DEBUG:Removing element: A1 && !A2
2024-05-20 16:36:30,819 DEBUG:B with 2 elements = ['!A0 || !A1', 'A2 && !A1']
2024-05-20 16:36:30,836 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || !A1', 'A2 && !A1'])
2024-05-20 16:36:30,837 INFO:Checking line: !A0 || !A1 with index: 1
2024-05-20 16:36:30,837 DEBUG:Removing element: !A0 || !A1
2024-05-20 16:36:30,837 DEBUG:B with 2 elements = ['A1 && !A2', 'A2 && !A1']
2024-05-20 16:36:30,854 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1 && !A2', 'A2 && !A1'])
2024-05-20 16:36:30,854 INFO:SHRINK: CN = TRUE, removing: !A0 || !A1
2024-05-20 16:36:30,854 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['A1 && !A2', 'A2 && !A1']
2024-05-20 16:36:30,854 INFO:Checking line: A2 && !A1 with index: 1
2024-05-20 16:36:30,854 DEBUG:Removing element: A2 && !A1
2024-05-20 16:36:30,854 DEBUG:B with 1 elements = ['A1 && !A2']
2024-05-20 16:36:30,872 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['A1 && !A2'])
2024-05-20 16:36:30,872 INFO:Kernel output with 2 elements: ['A1 && !A2', 'A2 && !A1']
2024-05-20 16:36:30,872 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:36:30,872 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = A1 && !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-05-20 16:36:30,872 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = A2 && !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-05-20 16:36:30,872 DEBUG:Adding node to priority queue with priority: -2, edge: A1 && !A2
2024-05-20 16:36:30,872 DEBUG:Adding node to priority queue with priority: -1, edge: A2 && !A1
2024-05-20 16:36:30,872 DEBUG:Expanding node with bbvalue: 4.0, edge: A1 && !A2
2024-05-20 16:36:30,872 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 1.5, boundary = 1.5
2024-05-20 16:36:30,872 DEBUG:Pruning node with bbvalue: 4.0, edge: A1 && !A2
2024-05-20 16:36:30,872 DEBUG:Expanding node with bbvalue: 4.0, edge: A2 && !A1
2024-05-20 16:36:30,872 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 2.0, boundary = 1.5
2024-05-20 16:36:30,872 DEBUG:Pruning node with bbvalue: 4.0, edge: A2 && !A1
2024-05-20 16:36:30,873 INFO:Execution time: 2.294844150543213s, Memory Used: 36864000 KB, Strategy: 3, Kernel_Remainder: kernel, Sliding Window size: 1, Divide and conquer: False, Kernels: 5, Branches: 7, Tree depth: 4, Pruned branches: 3, Boundary: 1.5
2024-05-20 16:36:30,873 INFO:Optimal hitting set: ['A1 && !A2', 'A0 && !A1']
2024-05-20 16:37:17,222 DEBUG:starting thread (client mode): 0x668dd60
2024-05-20 16:37:17,223 DEBUG:Local version/idstring: SSH-2.0-paramiko_3.4.0
2024-05-20 16:37:17,268 DEBUG:Remote version/idstring: SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.11
2024-05-20 16:37:17,268 INFO:Connected (version 2.0, client OpenSSH_8.2p1)
2024-05-20 16:37:17,301 DEBUG:=== Key exchange possibilities ===
2024-05-20 16:37:17,301 DEBUG:kex algos: curve25519-sha256, curve25519-sha256@libssh.org, ecdh-sha2-nistp256, ecdh-sha2-nistp384, ecdh-sha2-nistp521, diffie-hellman-group-exchange-sha256, diffie-hellman-group16-sha512, diffie-hellman-group18-sha512, diffie-hellman-group14-sha256, kex-strict-s-v00@openssh.com
2024-05-20 16:37:17,301 DEBUG:server key: rsa-sha2-512, rsa-sha2-256, ssh-rsa, ecdsa-sha2-nistp256, ssh-ed25519
2024-05-20 16:37:17,301 DEBUG:client encrypt: chacha20-poly1305@openssh.com, aes128-ctr, aes192-ctr, aes256-ctr, aes128-gcm@openssh.com, aes256-gcm@openssh.com
2024-05-20 16:37:17,301 DEBUG:server encrypt: chacha20-poly1305@openssh.com, aes128-ctr, aes192-ctr, aes256-ctr, aes128-gcm@openssh.com, aes256-gcm@openssh.com
2024-05-20 16:37:17,301 DEBUG:client mac: umac-64-etm@openssh.com, umac-128-etm@openssh.com, hmac-sha2-256-etm@openssh.com, hmac-sha2-512-etm@openssh.com, hmac-sha1-etm@openssh.com, umac-64@openssh.com, umac-128@openssh.com, hmac-sha2-256, hmac-sha2-512, hmac-sha1
2024-05-20 16:37:17,301 DEBUG:server mac: umac-64-etm@openssh.com, umac-128-etm@openssh.com, hmac-sha2-256-etm@openssh.com, hmac-sha2-512-etm@openssh.com, hmac-sha1-etm@openssh.com, umac-64@openssh.com, umac-128@openssh.com, hmac-sha2-256, hmac-sha2-512, hmac-sha1
2024-05-20 16:37:17,301 DEBUG:client compress: none, zlib@openssh.com
2024-05-20 16:37:17,301 DEBUG:server compress: none, zlib@openssh.com
2024-05-20 16:37:17,301 DEBUG:client lang: <none>
2024-05-20 16:37:17,301 DEBUG:server lang: <none>
2024-05-20 16:37:17,301 DEBUG:kex follows: False
2024-05-20 16:37:17,301 DEBUG:=== Key exchange agreements ===
2024-05-20 16:37:17,301 DEBUG:Strict kex mode: True
2024-05-20 16:37:17,301 DEBUG:Kex: curve25519-sha256@libssh.org
2024-05-20 16:37:17,302 DEBUG:HostKey: ssh-ed25519
2024-05-20 16:37:17,302 DEBUG:Cipher: aes128-ctr
2024-05-20 16:37:17,302 DEBUG:MAC: hmac-sha2-256
2024-05-20 16:37:17,302 DEBUG:Compression: none
2024-05-20 16:37:17,302 DEBUG:=== End of kex handshake ===
2024-05-20 16:37:17,352 DEBUG:Resetting outbound seqno after NEWKEYS due to strict mode
2024-05-20 16:37:17,352 DEBUG:kex engine KexCurve25519 specified hash_algo <built-in function openssl_sha256>
2024-05-20 16:37:17,352 DEBUG:Switch to new keys ...
2024-05-20 16:37:17,353 DEBUG:Resetting inbound seqno after NEWKEYS due to strict mode
2024-05-20 16:37:17,353 DEBUG:Attempting public-key auth...
2024-05-20 16:37:17,353 DEBUG:Got EXT_INFO: {'server-sig-algs': b'ssh-ed25519,sk-ssh-ed25519@openssh.com,ssh-rsa,rsa-sha2-256,rsa-sha2-512,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,sk-ecdsa-sha2-nistp256@openssh.com'}
2024-05-20 16:37:17,418 DEBUG:userauth is OK
2024-05-20 16:37:17,418 DEBUG:Finalizing pubkey algorithm for key of type 'ssh-rsa'
2024-05-20 16:37:17,419 DEBUG:Our pubkey algorithm list: ['rsa-sha2-512', 'rsa-sha2-256', 'ssh-rsa']
2024-05-20 16:37:17,419 DEBUG:Server-side algorithm list: ['ssh-ed25519', 'sk-ssh-ed25519@openssh.com', 'ssh-rsa', 'rsa-sha2-256', 'rsa-sha2-512', 'ssh-dss', 'ecdsa-sha2-nistp256', 'ecdsa-sha2-nistp384', 'ecdsa-sha2-nistp521', 'sk-ecdsa-sha2-nistp256@openssh.com']
2024-05-20 16:37:17,419 DEBUG:Agreed upon 'rsa-sha2-512' pubkey algorithm
2024-05-20 16:37:17,480 INFO:Authentication (publickey) successful!
2024-05-20 16:37:17,493 DEBUG:[chan 0] Max packet in: 32768 bytes
2024-05-20 16:37:17,975 DEBUG:Received global request "hostkeys-00@openssh.com"
2024-05-20 16:37:17,976 DEBUG:Rejecting "hostkeys-00@openssh.com" global request from server.
2024-05-20 16:37:17,976 DEBUG:Debug msg: b'/home/smueller/.ssh/authorized_keys:1: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding'
2024-05-20 16:37:18,005 DEBUG:[chan 0] Max packet out: 32768 bytes
2024-05-20 16:37:18,005 DEBUG:Secsh channel 0 opened.
2024-05-20 16:37:18,007 DEBUG:Building SSL context
2024-05-20 16:37:18,033 DEBUG:Switching to SSL
2024-05-20 16:37:18,154 DEBUG:SSL has been enabled
2024-05-20 16:37:18,154 DEBUG:Starting authorization phase
2024-05-20 16:37:18,154 DEBUG:The provided initial strategy is caching_sha2_password
2024-05-20 16:37:18,155 INFO:package: mysql.connector.plugins
2024-05-20 16:37:18,155 INFO:plugin_name: caching_sha2_password
2024-05-20 16:37:18,155 INFO:AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin
2024-05-20 16:37:18,187 DEBUG:Exchanging further packets
2024-05-20 16:37:18,215 DEBUG:caching_sha2_password completed succesfully
2024-05-20 16:37:18,512 DEBUG:Random Value: 6, Inconsistency Value: 1, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: A0 && !A1
2024-05-20 16:37:18,512 DEBUG:Random Value: 3, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A0 || A1
2024-05-20 16:37:18,513 DEBUG:Random Value: 2, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A1 || A2
2024-05-20 16:37:18,513 DEBUG:Random Value: 7, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A0 && !A1
2024-05-20 16:37:18,513 DEBUG:Random Value: 8, Inconsistency Value: 2, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: A1 && !A2
2024-05-20 16:37:18,513 DEBUG:Random Value: 1, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A0 || !A1
2024-05-20 16:37:18,513 DEBUG:Random Value: 4, Inconsistency Value: 1, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: A2 && !A1
2024-05-20 16:37:18,513 DEBUG:Random Value: 5, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A0
2024-05-20 16:37:18,517 INFO:Alpha: A0&&!A0
2024-05-20 16:37:18,517 DEBUG:[chan 0] EOF sent (0)
2024-05-20 16:37:18,565 DEBUG:[chan 0] EOF received (0)
2024-05-20 16:37:18,590 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A0 && !A1', '!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:37:18,591 DEBUG:Finding kernel for 8 elements of dataset = ['A0 && !A1', '!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:37:18,591 INFO:8 ELEMENTS: ['A0 && !A1', '!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:37:18,591 DEBUG:B_PRIME with 1 elements: ['A0 && !A1']
2024-05-20 16:37:18,611 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A0 && !A1'])
2024-05-20 16:37:18,612 INFO:Checking line: A0 && !A1 with index: 0
2024-05-20 16:37:18,612 DEBUG:Removing element: A0 && !A1
2024-05-20 16:37:18,612 DEBUG:B with 0 elements = []
2024-05-20 16:37:18,631 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-05-20 16:37:18,632 INFO:Kernel output with 1 elements: ['A0 && !A1']
2024-05-20 16:37:18,632 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:37:18,632 DEBUG:Adding node to priority queue with priority: 0, edge: None
2024-05-20 16:37:18,632 DEBUG:Expanding node with bbvalue: 0, edge: None
2024-05-20 16:37:18,632 DEBUG:Checking pruning: node bbvalue = 0, hitting_set_value = 0.0, boundary = inf
2024-05-20 16:37:18,632 DEBUG:Calculating bbvalue: current_node bbvalue = 0, element = A0 && !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 1.0
2024-05-20 16:37:18,632 DEBUG:Adding node to priority queue with priority: -1, edge: A0 && !A1
2024-05-20 16:37:18,632 DEBUG:Expanding node with bbvalue: 1.0, edge: A0 && !A1
2024-05-20 16:37:18,632 DEBUG:Checking pruning: node bbvalue = 1.0, hitting_set_value = 1.0, boundary = inf
2024-05-20 16:37:18,650 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:37:18,650 DEBUG:Finding kernel for 7 elements of dataset = ['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:37:18,650 INFO:7 ELEMENTS: ['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:37:18,650 DEBUG:B_PRIME with 1 elements: ['!A0 || A1']
2024-05-20 16:37:18,668 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1'])
2024-05-20 16:37:18,668 DEBUG:B_PRIME with 2 elements: ['!A0 || A1', '!A1 || A2']
2024-05-20 16:37:18,686 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2'])
2024-05-20 16:37:18,686 DEBUG:B_PRIME with 3 elements: ['!A0 || A1', '!A1 || A2', '!A0 && !A1']
2024-05-20 16:37:18,704 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1'])
2024-05-20 16:37:18,704 DEBUG:B_PRIME with 4 elements: ['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2']
2024-05-20 16:37:18,727 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2'])
2024-05-20 16:37:18,727 INFO:Checking line: !A0 || A1 with index: 0
2024-05-20 16:37:18,727 DEBUG:Removing element: !A0 || A1
2024-05-20 16:37:18,727 DEBUG:B with 3 elements = ['!A1 || A2', '!A0 && !A1', 'A1 && !A2']
2024-05-20 16:37:18,744 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1 || A2', '!A0 && !A1', 'A1 && !A2'])
2024-05-20 16:37:18,744 INFO:SHRINK: CN = TRUE, removing: !A0 || A1
2024-05-20 16:37:18,744 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1 || A2', '!A0 && !A1', 'A1 && !A2']
2024-05-20 16:37:18,744 INFO:Checking line: !A1 || A2 with index: 0
2024-05-20 16:37:18,744 DEBUG:Removing element: !A1 || A2
2024-05-20 16:37:18,744 DEBUG:B with 2 elements = ['!A0 && !A1', 'A1 && !A2']
2024-05-20 16:37:18,761 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 && !A1', 'A1 && !A2'])
2024-05-20 16:37:18,762 INFO:SHRINK: CN = TRUE, removing: !A1 || A2
2024-05-20 16:37:18,762 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A0 && !A1', 'A1 && !A2']
2024-05-20 16:37:18,762 INFO:Checking line: !A0 && !A1 with index: 0
2024-05-20 16:37:18,762 DEBUG:Removing element: !A0 && !A1
2024-05-20 16:37:18,762 DEBUG:B with 1 elements = ['A1 && !A2']
2024-05-20 16:37:18,779 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['A1 && !A2'])
2024-05-20 16:37:18,779 INFO:Checking line: A1 && !A2 with index: 1
2024-05-20 16:37:18,779 DEBUG:Removing element: A1 && !A2
2024-05-20 16:37:18,779 DEBUG:B with 1 elements = ['!A0 && !A1']
2024-05-20 16:37:18,796 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 && !A1'])
2024-05-20 16:37:18,796 INFO:Kernel output with 2 elements: ['!A0 && !A1', 'A1 && !A2']
2024-05-20 16:37:18,796 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:37:18,796 DEBUG:Calculating bbvalue: current_node bbvalue = 1.0, element = !A0 && !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 2.0
2024-05-20 16:37:18,796 DEBUG:Calculating bbvalue: current_node bbvalue = 1.0, element = A1 && !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 2.0
2024-05-20 16:37:18,796 DEBUG:Adding node to priority queue with priority: -2, edge: A1 && !A2
2024-05-20 16:37:18,796 DEBUG:Adding node to priority queue with priority: 0, edge: !A0 && !A1
2024-05-20 16:37:18,796 DEBUG:Expanding node with bbvalue: 2.0, edge: A1 && !A2
2024-05-20 16:37:18,796 DEBUG:Checking pruning: node bbvalue = 2.0, hitting_set_value = 1.5, boundary = inf
2024-05-20 16:37:18,813 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:37:18,814 DEBUG:Dataset does not entail A0&&!A0, kernel = empty
2024-05-20 16:37:18,814 DEBUG:Updated boundary: 1.5
2024-05-20 16:37:18,814 DEBUG:Expanding node with bbvalue: 2.0, edge: !A0 && !A1
2024-05-20 16:37:18,814 DEBUG:Checking pruning: node bbvalue = 2.0, hitting_set_value = 1.0, boundary = 1.5
2024-05-20 16:37:18,831 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:37:18,831 DEBUG:Finding kernel for 6 elements of dataset = ['!A0 || A1', '!A1 || A2', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:37:18,831 INFO:6 ELEMENTS: ['!A0 || A1', '!A1 || A2', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:37:18,831 DEBUG:B_PRIME with 1 elements: ['!A0 || A1']
2024-05-20 16:37:18,849 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1'])
2024-05-20 16:37:18,849 DEBUG:B_PRIME with 2 elements: ['!A0 || A1', '!A1 || A2']
2024-05-20 16:37:18,866 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2'])
2024-05-20 16:37:18,866 DEBUG:B_PRIME with 3 elements: ['!A0 || A1', '!A1 || A2', 'A1 && !A2']
2024-05-20 16:37:18,884 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', 'A1 && !A2'])
2024-05-20 16:37:18,884 INFO:Checking line: !A0 || A1 with index: 0
2024-05-20 16:37:18,884 DEBUG:Removing element: !A0 || A1
2024-05-20 16:37:18,884 DEBUG:B with 2 elements = ['!A1 || A2', 'A1 && !A2']
2024-05-20 16:37:18,901 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1 || A2', 'A1 && !A2'])
2024-05-20 16:37:18,901 INFO:SHRINK: CN = TRUE, removing: !A0 || A1
2024-05-20 16:37:18,901 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A1 || A2', 'A1 && !A2']
2024-05-20 16:37:18,901 INFO:Checking line: !A1 || A2 with index: 0
2024-05-20 16:37:18,901 DEBUG:Removing element: !A1 || A2
2024-05-20 16:37:18,901 DEBUG:B with 1 elements = ['A1 && !A2']
2024-05-20 16:37:18,919 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['A1 && !A2'])
2024-05-20 16:37:18,919 INFO:Checking line: A1 && !A2 with index: 1
2024-05-20 16:37:18,919 DEBUG:Removing element: A1 && !A2
2024-05-20 16:37:18,919 DEBUG:B with 1 elements = ['!A1 || A2']
2024-05-20 16:37:18,936 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A1 || A2'])
2024-05-20 16:37:18,936 INFO:Kernel output with 2 elements: ['!A1 || A2', 'A1 && !A2']
2024-05-20 16:37:18,936 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:37:18,936 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = !A1 || A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-05-20 16:37:18,936 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = A1 && !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-05-20 16:37:18,936 DEBUG:Adding node to priority queue with priority: -2, edge: A1 && !A2
2024-05-20 16:37:18,936 DEBUG:Adding node to priority queue with priority: 0, edge: !A1 || A2
2024-05-20 16:37:18,937 DEBUG:Expanding node with bbvalue: 3.0, edge: A1 && !A2
2024-05-20 16:37:18,937 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 1.5, boundary = 1.5
2024-05-20 16:37:18,937 DEBUG:Pruning node with bbvalue: 3.0, edge: A1 && !A2
2024-05-20 16:37:18,937 DEBUG:Expanding node with bbvalue: 3.0, edge: !A1 || A2
2024-05-20 16:37:18,937 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 1.0, boundary = 1.5
2024-05-20 16:37:18,954 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:37:18,954 DEBUG:Finding kernel for 5 elements of dataset = ['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:37:18,954 INFO:5 ELEMENTS: ['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:37:18,954 DEBUG:B_PRIME with 1 elements: ['!A0 || A1']
2024-05-20 16:37:18,971 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1'])
2024-05-20 16:37:18,971 DEBUG:B_PRIME with 2 elements: ['!A0 || A1', 'A1 && !A2']
2024-05-20 16:37:18,989 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', 'A1 && !A2'])
2024-05-20 16:37:18,989 DEBUG:B_PRIME with 3 elements: ['!A0 || A1', 'A1 && !A2', '!A0 || !A1']
2024-05-20 16:37:19,006 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', 'A1 && !A2', '!A0 || !A1'])
2024-05-20 16:37:19,006 DEBUG:B_PRIME with 4 elements: ['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1']
2024-05-20 16:37:19,023 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1'])
2024-05-20 16:37:19,023 INFO:Checking line: !A0 || A1 with index: 0
2024-05-20 16:37:19,023 DEBUG:Removing element: !A0 || A1
2024-05-20 16:37:19,023 DEBUG:B with 3 elements = ['A1 && !A2', '!A0 || !A1', 'A2 && !A1']
2024-05-20 16:37:19,041 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1 && !A2', '!A0 || !A1', 'A2 && !A1'])
2024-05-20 16:37:19,041 INFO:SHRINK: CN = TRUE, removing: !A0 || A1
2024-05-20 16:37:19,041 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['A1 && !A2', '!A0 || !A1', 'A2 && !A1']
2024-05-20 16:37:19,041 INFO:Checking line: A1 && !A2 with index: 0
2024-05-20 16:37:19,041 DEBUG:Removing element: A1 && !A2
2024-05-20 16:37:19,041 DEBUG:B with 2 elements = ['!A0 || !A1', 'A2 && !A1']
2024-05-20 16:37:19,058 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || !A1', 'A2 && !A1'])
2024-05-20 16:37:19,058 INFO:Checking line: !A0 || !A1 with index: 1
2024-05-20 16:37:19,058 DEBUG:Removing element: !A0 || !A1
2024-05-20 16:37:19,058 DEBUG:B with 2 elements = ['A1 && !A2', 'A2 && !A1']
2024-05-20 16:37:19,075 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1 && !A2', 'A2 && !A1'])
2024-05-20 16:37:19,076 INFO:SHRINK: CN = TRUE, removing: !A0 || !A1
2024-05-20 16:37:19,076 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['A1 && !A2', 'A2 && !A1']
2024-05-20 16:37:19,076 INFO:Checking line: A2 && !A1 with index: 1
2024-05-20 16:37:19,076 DEBUG:Removing element: A2 && !A1
2024-05-20 16:37:19,076 DEBUG:B with 1 elements = ['A1 && !A2']
2024-05-20 16:37:19,093 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['A1 && !A2'])
2024-05-20 16:37:19,093 INFO:Kernel output with 2 elements: ['A1 && !A2', 'A2 && !A1']
2024-05-20 16:37:19,093 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:37:19,093 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = A1 && !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-05-20 16:37:19,093 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = A2 && !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-05-20 16:37:19,093 DEBUG:Adding node to priority queue with priority: -2, edge: A1 && !A2
2024-05-20 16:37:19,093 DEBUG:Adding node to priority queue with priority: -1, edge: A2 && !A1
2024-05-20 16:37:19,093 DEBUG:Expanding node with bbvalue: 4.0, edge: A1 && !A2
2024-05-20 16:37:19,093 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 1.5, boundary = 1.5
2024-05-20 16:37:19,093 DEBUG:Pruning node with bbvalue: 4.0, edge: A1 && !A2
2024-05-20 16:37:19,093 DEBUG:Expanding node with bbvalue: 4.0, edge: A2 && !A1
2024-05-20 16:37:19,093 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 2.0, boundary = 1.5
2024-05-20 16:37:19,093 DEBUG:Pruning node with bbvalue: 4.0, edge: A2 && !A1
2024-05-20 16:37:19,094 INFO:Execution time: 2.076956272125244s, Memory Used: 36290560 KB, Strategy: 3, Kernel_Remainder: kernel, Sliding Window size: 1, Divide and conquer: False, Kernels: 5, Branches: 7, Tree depth: 4, Pruned branches: 3, Boundary: 1.5
2024-05-20 16:37:19,094 INFO:Optimal hitting set: ['A1 && !A2', 'A0 && !A1']
2024-05-20 16:37:42,151 DEBUG:starting thread (client mode): 0x4ae1d60
2024-05-20 16:37:42,151 DEBUG:Local version/idstring: SSH-2.0-paramiko_3.4.0
2024-05-20 16:37:42,198 DEBUG:Remote version/idstring: SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.11
2024-05-20 16:37:42,199 INFO:Connected (version 2.0, client OpenSSH_8.2p1)
2024-05-20 16:37:42,267 DEBUG:=== Key exchange possibilities ===
2024-05-20 16:37:42,267 DEBUG:kex algos: curve25519-sha256, curve25519-sha256@libssh.org, ecdh-sha2-nistp256, ecdh-sha2-nistp384, ecdh-sha2-nistp521, diffie-hellman-group-exchange-sha256, diffie-hellman-group16-sha512, diffie-hellman-group18-sha512, diffie-hellman-group14-sha256, kex-strict-s-v00@openssh.com
2024-05-20 16:37:42,267 DEBUG:server key: rsa-sha2-512, rsa-sha2-256, ssh-rsa, ecdsa-sha2-nistp256, ssh-ed25519
2024-05-20 16:37:42,267 DEBUG:client encrypt: chacha20-poly1305@openssh.com, aes128-ctr, aes192-ctr, aes256-ctr, aes128-gcm@openssh.com, aes256-gcm@openssh.com
2024-05-20 16:37:42,267 DEBUG:server encrypt: chacha20-poly1305@openssh.com, aes128-ctr, aes192-ctr, aes256-ctr, aes128-gcm@openssh.com, aes256-gcm@openssh.com
2024-05-20 16:37:42,267 DEBUG:client mac: umac-64-etm@openssh.com, umac-128-etm@openssh.com, hmac-sha2-256-etm@openssh.com, hmac-sha2-512-etm@openssh.com, hmac-sha1-etm@openssh.com, umac-64@openssh.com, umac-128@openssh.com, hmac-sha2-256, hmac-sha2-512, hmac-sha1
2024-05-20 16:37:42,267 DEBUG:server mac: umac-64-etm@openssh.com, umac-128-etm@openssh.com, hmac-sha2-256-etm@openssh.com, hmac-sha2-512-etm@openssh.com, hmac-sha1-etm@openssh.com, umac-64@openssh.com, umac-128@openssh.com, hmac-sha2-256, hmac-sha2-512, hmac-sha1
2024-05-20 16:37:42,267 DEBUG:client compress: none, zlib@openssh.com
2024-05-20 16:37:42,267 DEBUG:server compress: none, zlib@openssh.com
2024-05-20 16:37:42,267 DEBUG:client lang: <none>
2024-05-20 16:37:42,267 DEBUG:server lang: <none>
2024-05-20 16:37:42,267 DEBUG:kex follows: False
2024-05-20 16:37:42,267 DEBUG:=== Key exchange agreements ===
2024-05-20 16:37:42,267 DEBUG:Strict kex mode: True
2024-05-20 16:37:42,267 DEBUG:Kex: curve25519-sha256@libssh.org
2024-05-20 16:37:42,267 DEBUG:HostKey: ssh-ed25519
2024-05-20 16:37:42,268 DEBUG:Cipher: aes128-ctr
2024-05-20 16:37:42,268 DEBUG:MAC: hmac-sha2-256
2024-05-20 16:37:42,268 DEBUG:Compression: none
2024-05-20 16:37:42,268 DEBUG:=== End of kex handshake ===
2024-05-20 16:37:42,336 DEBUG:Resetting outbound seqno after NEWKEYS due to strict mode
2024-05-20 16:37:42,336 DEBUG:kex engine KexCurve25519 specified hash_algo <built-in function openssl_sha256>
2024-05-20 16:37:42,337 DEBUG:Switch to new keys ...
2024-05-20 16:37:42,337 DEBUG:Resetting inbound seqno after NEWKEYS due to strict mode
2024-05-20 16:37:42,337 DEBUG:Attempting public-key auth...
2024-05-20 16:37:42,338 DEBUG:Got EXT_INFO: {'server-sig-algs': b'ssh-ed25519,sk-ssh-ed25519@openssh.com,ssh-rsa,rsa-sha2-256,rsa-sha2-512,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,sk-ecdsa-sha2-nistp256@openssh.com'}
2024-05-20 16:37:42,398 DEBUG:userauth is OK
2024-05-20 16:37:42,399 DEBUG:Finalizing pubkey algorithm for key of type 'ssh-rsa'
2024-05-20 16:37:42,399 DEBUG:Our pubkey algorithm list: ['rsa-sha2-512', 'rsa-sha2-256', 'ssh-rsa']
2024-05-20 16:37:42,399 DEBUG:Server-side algorithm list: ['ssh-ed25519', 'sk-ssh-ed25519@openssh.com', 'ssh-rsa', 'rsa-sha2-256', 'rsa-sha2-512', 'ssh-dss', 'ecdsa-sha2-nistp256', 'ecdsa-sha2-nistp384', 'ecdsa-sha2-nistp521', 'sk-ecdsa-sha2-nistp256@openssh.com']
2024-05-20 16:37:42,399 DEBUG:Agreed upon 'rsa-sha2-512' pubkey algorithm
2024-05-20 16:37:42,465 INFO:Authentication (publickey) successful!
2024-05-20 16:37:42,477 DEBUG:[chan 0] Max packet in: 32768 bytes
2024-05-20 16:37:42,915 DEBUG:Received global request "hostkeys-00@openssh.com"
2024-05-20 16:37:42,916 DEBUG:Rejecting "hostkeys-00@openssh.com" global request from server.
2024-05-20 16:37:42,916 DEBUG:Debug msg: b'/home/smueller/.ssh/authorized_keys:1: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding'
2024-05-20 16:37:42,944 DEBUG:[chan 0] Max packet out: 32768 bytes
2024-05-20 16:37:42,944 DEBUG:Secsh channel 0 opened.
2024-05-20 16:37:42,946 DEBUG:Building SSL context
2024-05-20 16:37:42,971 DEBUG:Switching to SSL
2024-05-20 16:37:43,082 DEBUG:SSL has been enabled
2024-05-20 16:37:43,082 DEBUG:Starting authorization phase
2024-05-20 16:37:43,082 DEBUG:The provided initial strategy is caching_sha2_password
2024-05-20 16:37:43,083 INFO:package: mysql.connector.plugins
2024-05-20 16:37:43,083 INFO:plugin_name: caching_sha2_password
2024-05-20 16:37:43,083 INFO:AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin
2024-05-20 16:37:43,114 DEBUG:Exchanging further packets
2024-05-20 16:37:43,143 DEBUG:caching_sha2_password completed succesfully
2024-05-20 16:37:43,410 DEBUG:Random Value: 6, Inconsistency Value: 1, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: A0 && !A1
2024-05-20 16:37:43,410 DEBUG:Random Value: 3, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A0 || A1
2024-05-20 16:37:43,410 DEBUG:Random Value: 2, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A1 || A2
2024-05-20 16:37:43,410 DEBUG:Random Value: 7, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A0 && !A1
2024-05-20 16:37:43,410 DEBUG:Random Value: 8, Inconsistency Value: 2, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: A1 && !A2
2024-05-20 16:37:43,410 DEBUG:Random Value: 1, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A0 || !A1
2024-05-20 16:37:43,410 DEBUG:Random Value: 4, Inconsistency Value: 1, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: A2 && !A1
2024-05-20 16:37:43,410 DEBUG:Random Value: 5, Inconsistency Value: 0, Filename: data/Test_Datasets/test_UNSAT2.txt, Value: !A0
2024-05-20 16:37:43,413 INFO:Alpha: A0&&!A0
2024-05-20 16:37:43,413 DEBUG:[chan 0] EOF sent (0)
2024-05-20 16:37:43,451 DEBUG:[chan 0] EOF received (0)
2024-05-20 16:37:43,471 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A0 && !A1', '!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:37:43,472 DEBUG:Finding kernel for 8 elements of dataset = ['A0 && !A1', '!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:37:43,472 INFO:8 ELEMENTS: ['A0 && !A1', '!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:37:43,472 DEBUG:B_PRIME with 1 elements: ['A0 && !A1']
2024-05-20 16:37:43,493 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A0 && !A1'])
2024-05-20 16:37:43,493 INFO:Checking line: A0 && !A1 with index: 0
2024-05-20 16:37:43,493 DEBUG:Removing element: A0 && !A1
2024-05-20 16:37:43,493 DEBUG:B with 0 elements = []
2024-05-20 16:37:43,512 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-05-20 16:37:43,512 INFO:Kernel output with 1 elements: ['A0 && !A1']
2024-05-20 16:37:43,512 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:37:43,512 DEBUG:Adding node to priority queue with priority: 0, edge: None
2024-05-20 16:37:43,512 DEBUG:Expanding node with bbvalue: 0, edge: None
2024-05-20 16:37:43,512 DEBUG:Checking pruning: node bbvalue = 0, hitting_set_value = 0.0, boundary = inf
2024-05-20 16:37:43,512 DEBUG:Calculating bbvalue: current_node bbvalue = 0, element = A0 && !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 1.0
2024-05-20 16:37:43,512 DEBUG:Adding node to priority queue with priority: -1, edge: A0 && !A1
2024-05-20 16:37:43,513 DEBUG:Expanding node with bbvalue: 1.0, edge: A0 && !A1
2024-05-20 16:37:43,513 DEBUG:Checking pruning: node bbvalue = 1.0, hitting_set_value = 1.0, boundary = inf
2024-05-20 16:37:43,531 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:37:43,531 DEBUG:Finding kernel for 7 elements of dataset = ['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:37:43,531 INFO:7 ELEMENTS: ['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:37:43,531 DEBUG:B_PRIME with 1 elements: ['!A0 || A1']
2024-05-20 16:37:43,549 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1'])
2024-05-20 16:37:43,549 DEBUG:B_PRIME with 2 elements: ['!A0 || A1', '!A1 || A2']
2024-05-20 16:37:43,566 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2'])
2024-05-20 16:37:43,566 DEBUG:B_PRIME with 3 elements: ['!A0 || A1', '!A1 || A2', '!A0 && !A1']
2024-05-20 16:37:43,584 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1'])
2024-05-20 16:37:43,584 DEBUG:B_PRIME with 4 elements: ['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2']
2024-05-20 16:37:43,607 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2'])
2024-05-20 16:37:43,607 INFO:Checking line: !A0 || A1 with index: 0
2024-05-20 16:37:43,607 DEBUG:Removing element: !A0 || A1
2024-05-20 16:37:43,607 DEBUG:B with 3 elements = ['!A1 || A2', '!A0 && !A1', 'A1 && !A2']
2024-05-20 16:37:43,625 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1 || A2', '!A0 && !A1', 'A1 && !A2'])
2024-05-20 16:37:43,625 INFO:SHRINK: CN = TRUE, removing: !A0 || A1
2024-05-20 16:37:43,625 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1 || A2', '!A0 && !A1', 'A1 && !A2']
2024-05-20 16:37:43,625 INFO:Checking line: !A1 || A2 with index: 0
2024-05-20 16:37:43,625 DEBUG:Removing element: !A1 || A2
2024-05-20 16:37:43,625 DEBUG:B with 2 elements = ['!A0 && !A1', 'A1 && !A2']
2024-05-20 16:37:43,643 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 && !A1', 'A1 && !A2'])
2024-05-20 16:37:43,643 INFO:SHRINK: CN = TRUE, removing: !A1 || A2
2024-05-20 16:37:43,643 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A0 && !A1', 'A1 && !A2']
2024-05-20 16:37:43,643 INFO:Checking line: !A0 && !A1 with index: 0
2024-05-20 16:37:43,643 DEBUG:Removing element: !A0 && !A1
2024-05-20 16:37:43,643 DEBUG:B with 1 elements = ['A1 && !A2']
2024-05-20 16:37:43,661 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['A1 && !A2'])
2024-05-20 16:37:43,661 INFO:Checking line: A1 && !A2 with index: 1
2024-05-20 16:37:43,661 DEBUG:Removing element: A1 && !A2
2024-05-20 16:37:43,661 DEBUG:B with 1 elements = ['!A0 && !A1']
2024-05-20 16:37:43,691 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 && !A1'])
2024-05-20 16:37:43,691 INFO:Kernel output with 2 elements: ['!A0 && !A1', 'A1 && !A2']
2024-05-20 16:37:43,691 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:37:43,691 DEBUG:Calculating bbvalue: current_node bbvalue = 1.0, element = !A0 && !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 2.0
2024-05-20 16:37:43,691 DEBUG:Calculating bbvalue: current_node bbvalue = 1.0, element = A1 && !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 2.0
2024-05-20 16:37:43,691 DEBUG:Adding node to priority queue with priority: -2, edge: A1 && !A2
2024-05-20 16:37:43,691 DEBUG:Adding node to priority queue with priority: 0, edge: !A0 && !A1
2024-05-20 16:37:43,691 DEBUG:Expanding node with bbvalue: 2.0, edge: A1 && !A2
2024-05-20 16:37:43,691 DEBUG:Checking pruning: node bbvalue = 2.0, hitting_set_value = 1.5, boundary = inf
2024-05-20 16:37:43,711 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:37:43,711 DEBUG:Dataset does not entail A0&&!A0, kernel = empty
2024-05-20 16:37:43,711 DEBUG:Updated boundary: 1.5
2024-05-20 16:37:43,712 DEBUG:Expanding node with bbvalue: 2.0, edge: !A0 && !A1
2024-05-20 16:37:43,712 DEBUG:Checking pruning: node bbvalue = 2.0, hitting_set_value = 1.0, boundary = 1.5
2024-05-20 16:37:43,730 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:37:43,730 DEBUG:Finding kernel for 6 elements of dataset = ['!A0 || A1', '!A1 || A2', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:37:43,730 INFO:6 ELEMENTS: ['!A0 || A1', '!A1 || A2', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:37:43,730 DEBUG:B_PRIME with 1 elements: ['!A0 || A1']
2024-05-20 16:37:43,748 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1'])
2024-05-20 16:37:43,748 DEBUG:B_PRIME with 2 elements: ['!A0 || A1', '!A1 || A2']
2024-05-20 16:37:43,766 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2'])
2024-05-20 16:37:43,767 DEBUG:B_PRIME with 3 elements: ['!A0 || A1', '!A1 || A2', 'A1 && !A2']
2024-05-20 16:37:43,784 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', 'A1 && !A2'])
2024-05-20 16:37:43,784 INFO:Checking line: !A0 || A1 with index: 0
2024-05-20 16:37:43,784 DEBUG:Removing element: !A0 || A1
2024-05-20 16:37:43,785 DEBUG:B with 2 elements = ['!A1 || A2', 'A1 && !A2']
2024-05-20 16:37:43,802 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1 || A2', 'A1 && !A2'])
2024-05-20 16:37:43,802 INFO:SHRINK: CN = TRUE, removing: !A0 || A1
2024-05-20 16:37:43,802 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A1 || A2', 'A1 && !A2']
2024-05-20 16:37:43,802 INFO:Checking line: !A1 || A2 with index: 0
2024-05-20 16:37:43,802 DEBUG:Removing element: !A1 || A2
2024-05-20 16:37:43,802 DEBUG:B with 1 elements = ['A1 && !A2']
2024-05-20 16:37:43,820 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['A1 && !A2'])
2024-05-20 16:37:43,821 INFO:Checking line: A1 && !A2 with index: 1
2024-05-20 16:37:43,821 DEBUG:Removing element: A1 && !A2
2024-05-20 16:37:43,821 DEBUG:B with 1 elements = ['!A1 || A2']
2024-05-20 16:37:43,839 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A1 || A2'])
2024-05-20 16:37:43,839 INFO:Kernel output with 2 elements: ['!A1 || A2', 'A1 && !A2']
2024-05-20 16:37:43,839 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:37:43,839 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = !A1 || A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-05-20 16:37:43,839 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = A1 && !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-05-20 16:37:43,839 DEBUG:Adding node to priority queue with priority: -2, edge: A1 && !A2
2024-05-20 16:37:43,839 DEBUG:Adding node to priority queue with priority: 0, edge: !A1 || A2
2024-05-20 16:37:43,839 DEBUG:Expanding node with bbvalue: 3.0, edge: A1 && !A2
2024-05-20 16:37:43,839 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 1.5, boundary = 1.5
2024-05-20 16:37:43,839 DEBUG:Pruning node with bbvalue: 3.0, edge: A1 && !A2
2024-05-20 16:37:43,839 DEBUG:Expanding node with bbvalue: 3.0, edge: !A1 || A2
2024-05-20 16:37:43,839 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 1.0, boundary = 1.5
2024-05-20 16:37:43,857 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:37:43,857 DEBUG:Finding kernel for 5 elements of dataset = ['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:37:43,857 INFO:5 ELEMENTS: ['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:37:43,857 DEBUG:B_PRIME with 1 elements: ['!A0 || A1']
2024-05-20 16:37:43,874 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1'])
2024-05-20 16:37:43,874 DEBUG:B_PRIME with 2 elements: ['!A0 || A1', 'A1 && !A2']
2024-05-20 16:37:43,891 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', 'A1 && !A2'])
2024-05-20 16:37:43,891 DEBUG:B_PRIME with 3 elements: ['!A0 || A1', 'A1 && !A2', '!A0 || !A1']
2024-05-20 16:37:43,908 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', 'A1 && !A2', '!A0 || !A1'])
2024-05-20 16:37:43,908 DEBUG:B_PRIME with 4 elements: ['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1']
2024-05-20 16:37:43,925 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1'])
2024-05-20 16:37:43,925 INFO:Checking line: !A0 || A1 with index: 0
2024-05-20 16:37:43,925 DEBUG:Removing element: !A0 || A1
2024-05-20 16:37:43,925 DEBUG:B with 3 elements = ['A1 && !A2', '!A0 || !A1', 'A2 && !A1']
2024-05-20 16:37:43,942 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1 && !A2', '!A0 || !A1', 'A2 && !A1'])
2024-05-20 16:37:43,943 INFO:SHRINK: CN = TRUE, removing: !A0 || A1
2024-05-20 16:37:43,943 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['A1 && !A2', '!A0 || !A1', 'A2 && !A1']
2024-05-20 16:37:43,943 INFO:Checking line: A1 && !A2 with index: 0
2024-05-20 16:37:43,943 DEBUG:Removing element: A1 && !A2
2024-05-20 16:37:43,943 DEBUG:B with 2 elements = ['!A0 || !A1', 'A2 && !A1']
2024-05-20 16:37:43,962 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || !A1', 'A2 && !A1'])
2024-05-20 16:37:43,962 INFO:Checking line: !A0 || !A1 with index: 1
2024-05-20 16:37:43,962 DEBUG:Removing element: !A0 || !A1
2024-05-20 16:37:43,962 DEBUG:B with 2 elements = ['A1 && !A2', 'A2 && !A1']
2024-05-20 16:37:43,980 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1 && !A2', 'A2 && !A1'])
2024-05-20 16:37:43,980 INFO:SHRINK: CN = TRUE, removing: !A0 || !A1
2024-05-20 16:37:43,980 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['A1 && !A2', 'A2 && !A1']
2024-05-20 16:37:43,980 INFO:Checking line: A2 && !A1 with index: 1
2024-05-20 16:37:43,980 DEBUG:Removing element: A2 && !A1
2024-05-20 16:37:43,980 DEBUG:B with 1 elements = ['A1 && !A2']
2024-05-20 16:37:43,997 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['A1 && !A2'])
2024-05-20 16:37:43,997 INFO:Kernel output with 2 elements: ['A1 && !A2', 'A2 && !A1']
2024-05-20 16:37:43,997 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:37:43,997 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = A1 && !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-05-20 16:37:43,997 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = A2 && !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-05-20 16:37:43,997 DEBUG:Adding node to priority queue with priority: -2, edge: A1 && !A2
2024-05-20 16:37:43,997 DEBUG:Adding node to priority queue with priority: -1, edge: A2 && !A1
2024-05-20 16:37:43,998 DEBUG:Expanding node with bbvalue: 4.0, edge: A1 && !A2
2024-05-20 16:37:43,998 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 1.5, boundary = 1.5
2024-05-20 16:37:43,998 DEBUG:Pruning node with bbvalue: 4.0, edge: A1 && !A2
2024-05-20 16:37:43,998 DEBUG:Expanding node with bbvalue: 4.0, edge: A2 && !A1
2024-05-20 16:37:43,998 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 2.0, boundary = 1.5
2024-05-20 16:37:43,998 DEBUG:Pruning node with bbvalue: 4.0, edge: A2 && !A1
2024-05-20 16:37:43,998 INFO:Execution time: 0.5854167938232422s, Memory Used: 36831232 KB, Strategy: 3, Kernel_Remainder: kernel, Sliding Window size: 1, Divide and conquer: False, Kernels: 5, Branches: 7, Tree depth: 4, Pruned branches: 3, Boundary: 1.5
2024-05-20 16:37:43,998 INFO:Optimal hitting set: ['A1 && !A2', 'A0 && !A1']
