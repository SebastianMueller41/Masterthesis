2024-06-10 21:04:56,875 DEBUG:starting thread (client mode): 0x64cdeb0
2024-06-10 21:04:56,875 DEBUG:Local version/idstring: SSH-2.0-paramiko_3.4.0
2024-06-10 21:04:56,919 DEBUG:Remote version/idstring: SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.11
2024-06-10 21:04:56,919 INFO:Connected (version 2.0, client OpenSSH_8.2p1)
2024-06-10 21:04:56,951 DEBUG:=== Key exchange possibilities ===
2024-06-10 21:04:56,951 DEBUG:kex algos: curve25519-sha256, curve25519-sha256@libssh.org, ecdh-sha2-nistp256, ecdh-sha2-nistp384, ecdh-sha2-nistp521, diffie-hellman-group-exchange-sha256, diffie-hellman-group16-sha512, diffie-hellman-group18-sha512, diffie-hellman-group14-sha256, kex-strict-s-v00@openssh.com
2024-06-10 21:04:56,951 DEBUG:server key: rsa-sha2-512, rsa-sha2-256, ssh-rsa, ecdsa-sha2-nistp256, ssh-ed25519
2024-06-10 21:04:56,951 DEBUG:client encrypt: chacha20-poly1305@openssh.com, aes128-ctr, aes192-ctr, aes256-ctr, aes128-gcm@openssh.com, aes256-gcm@openssh.com
2024-06-10 21:04:56,951 DEBUG:server encrypt: chacha20-poly1305@openssh.com, aes128-ctr, aes192-ctr, aes256-ctr, aes128-gcm@openssh.com, aes256-gcm@openssh.com
2024-06-10 21:04:56,951 DEBUG:client mac: umac-64-etm@openssh.com, umac-128-etm@openssh.com, hmac-sha2-256-etm@openssh.com, hmac-sha2-512-etm@openssh.com, hmac-sha1-etm@openssh.com, umac-64@openssh.com, umac-128@openssh.com, hmac-sha2-256, hmac-sha2-512, hmac-sha1
2024-06-10 21:04:56,951 DEBUG:server mac: umac-64-etm@openssh.com, umac-128-etm@openssh.com, hmac-sha2-256-etm@openssh.com, hmac-sha2-512-etm@openssh.com, hmac-sha1-etm@openssh.com, umac-64@openssh.com, umac-128@openssh.com, hmac-sha2-256, hmac-sha2-512, hmac-sha1
2024-06-10 21:04:56,951 DEBUG:client compress: none, zlib@openssh.com
2024-06-10 21:04:56,951 DEBUG:server compress: none, zlib@openssh.com
2024-06-10 21:04:56,951 DEBUG:client lang: <none>
2024-06-10 21:04:56,951 DEBUG:server lang: <none>
2024-06-10 21:04:56,951 DEBUG:kex follows: False
2024-06-10 21:04:56,951 DEBUG:=== Key exchange agreements ===
2024-06-10 21:04:56,951 DEBUG:Strict kex mode: True
2024-06-10 21:04:56,951 DEBUG:Kex: curve25519-sha256@libssh.org
2024-06-10 21:04:56,951 DEBUG:HostKey: ssh-ed25519
2024-06-10 21:04:56,951 DEBUG:Cipher: aes128-ctr
2024-06-10 21:04:56,951 DEBUG:MAC: hmac-sha2-256
2024-06-10 21:04:56,951 DEBUG:Compression: none
2024-06-10 21:04:56,951 DEBUG:=== End of kex handshake ===
2024-06-10 21:04:57,000 DEBUG:Resetting outbound seqno after NEWKEYS due to strict mode
2024-06-10 21:04:57,000 DEBUG:kex engine KexCurve25519 specified hash_algo <built-in function openssl_sha256>
2024-06-10 21:04:57,000 DEBUG:Switch to new keys ...
2024-06-10 21:04:57,001 DEBUG:Resetting inbound seqno after NEWKEYS due to strict mode
2024-06-10 21:04:57,001 DEBUG:Attempting public-key auth...
2024-06-10 21:04:57,001 DEBUG:Got EXT_INFO: {'server-sig-algs': b'ssh-ed25519,sk-ssh-ed25519@openssh.com,ssh-rsa,rsa-sha2-256,rsa-sha2-512,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,sk-ecdsa-sha2-nistp256@openssh.com'}
2024-06-10 21:04:57,052 DEBUG:userauth is OK
2024-06-10 21:04:57,052 DEBUG:Finalizing pubkey algorithm for key of type 'ssh-rsa'
2024-06-10 21:04:57,052 DEBUG:Our pubkey algorithm list: ['rsa-sha2-512', 'rsa-sha2-256', 'ssh-rsa']
2024-06-10 21:04:57,053 DEBUG:Server-side algorithm list: ['ssh-ed25519', 'sk-ssh-ed25519@openssh.com', 'ssh-rsa', 'rsa-sha2-256', 'rsa-sha2-512', 'ssh-dss', 'ecdsa-sha2-nistp256', 'ecdsa-sha2-nistp384', 'ecdsa-sha2-nistp521', 'sk-ecdsa-sha2-nistp256@openssh.com']
2024-06-10 21:04:57,053 DEBUG:Agreed upon 'rsa-sha2-512' pubkey algorithm
2024-06-10 21:04:57,115 INFO:Authentication (publickey) successful!
2024-06-10 21:04:57,131 DEBUG:[chan 0] Max packet in: 32768 bytes
2024-06-10 21:04:57,587 DEBUG:Received global request "hostkeys-00@openssh.com"
2024-06-10 21:04:57,587 DEBUG:Rejecting "hostkeys-00@openssh.com" global request from server.
2024-06-10 21:04:57,587 DEBUG:Debug msg: b'/home/smueller/.ssh/authorized_keys:1: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding'
2024-06-10 21:04:57,617 DEBUG:[chan 0] Max packet out: 32768 bytes
2024-06-10 21:04:57,617 DEBUG:Secsh channel 0 opened.
2024-06-10 21:04:57,619 DEBUG:Building SSL context
2024-06-10 21:04:57,642 DEBUG:Switching to SSL
2024-06-10 21:04:57,766 DEBUG:SSL has been enabled
2024-06-10 21:04:57,767 DEBUG:Starting authorization phase
2024-06-10 21:04:57,767 DEBUG:The provided initial strategy is caching_sha2_password
2024-06-10 21:04:57,767 INFO:package: mysql.connector.plugins
2024-06-10 21:04:57,767 INFO:plugin_name: caching_sha2_password
2024-06-10 21:04:57,767 INFO:AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin
2024-06-10 21:04:57,802 DEBUG:Exchanging further packets
2024-06-10 21:04:57,833 DEBUG:caching_sha2_password completed succesfully
2024-06-10 21:04:58,108 DEBUG:Random Value: 7, Inconsistency Value: 0, Filename: data/SRS/Dataset_A/sig3_5_15/srs_0.txt, Value: !(!A1&&A2)
2024-06-10 21:04:58,108 DEBUG:Random Value: 2, Inconsistency Value: 0, Filename: data/SRS/Dataset_A/sig3_5_15/srs_0.txt, Value: !(A0||A1)
2024-06-10 21:04:58,108 DEBUG:Random Value: 1, Inconsistency Value: 0, Filename: data/SRS/Dataset_A/sig3_5_15/srs_0.txt, Value: A1||((A2&&A0)&&A1)
2024-06-10 21:04:58,108 DEBUG:Random Value: 10, Inconsistency Value: 0, Filename: data/SRS/Dataset_A/sig3_5_15/srs_0.txt, Value: (A1||(A1&&A0))||A2
2024-06-10 21:04:58,108 DEBUG:Random Value: 4, Inconsistency Value: 0, Filename: data/SRS/Dataset_A/sig3_5_15/srs_0.txt, Value: !A0
2024-06-10 21:04:58,108 DEBUG:Random Value: 6, Inconsistency Value: 0, Filename: data/SRS/Dataset_A/sig3_5_15/srs_0.txt, Value: !A1
2024-06-10 21:04:58,108 DEBUG:Random Value: 5, Inconsistency Value: 1, Filename: data/SRS/Dataset_A/sig3_5_15/srs_0.txt, Value: !A2
2024-06-10 21:04:58,108 DEBUG:Random Value: 9, Inconsistency Value: 0, Filename: data/SRS/Dataset_A/sig3_5_15/srs_0.txt, Value: !A1&&(A2||A0)
2024-06-10 21:04:58,108 DEBUG:Random Value: 3, Inconsistency Value: 0, Filename: data/SRS/Dataset_A/sig3_5_15/srs_0.txt, Value: A1&&A0
2024-06-10 21:04:58,108 DEBUG:Random Value: 8, Inconsistency Value: 1, Filename: data/SRS/Dataset_A/sig3_5_15/srs_0.txt, Value: (A1||A1)&&(A2&&A0)
2024-06-10 21:04:58,109 INFO:Alpha: A0&&!A0
2024-06-10 21:04:58,110 DEBUG:[chan 0] EOF sent (0)
2024-06-10 21:04:58,145 DEBUG:[chan 0] EOF received (0)
2024-06-10 21:04:58,174 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!(A0||A1)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:04:58,174 DEBUG:Finding kernel for 10 elements of dataset = ['!(!A1&&A2)', '!(A0||A1)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:58,174 INFO:10 ELEMENTS: ['!(!A1&&A2)', '!(A0||A1)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:58,174 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:04:58,197 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:04:58,197 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '!(A0||A1)']
2024-06-10 21:04:58,222 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)'])
2024-06-10 21:04:58,224 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '!(A0||A1)', 'A1||((A2&&A0)&&A1)']
2024-06-10 21:04:58,246 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!(A0||A1)', 'A1||((A2&&A0)&&A1)'])
2024-06-10 21:04:58,246 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:04:58,246 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:04:58,247 DEBUG:B with 2 elements = ['!(A0||A1)', 'A1||((A2&&A0)&&A1)']
2024-06-10 21:04:58,269 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', 'A1||((A2&&A0)&&A1)'])
2024-06-10 21:04:58,270 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:04:58,270 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!(A0||A1)', 'A1||((A2&&A0)&&A1)']
2024-06-10 21:04:58,270 INFO:Checking line: !(A0||A1) with index: 0
2024-06-10 21:04:58,270 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:04:58,270 DEBUG:B with 1 elements = ['A1||((A2&&A0)&&A1)']
2024-06-10 21:04:58,297 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['A1||((A2&&A0)&&A1)'])
2024-06-10 21:04:58,297 INFO:Checking line: A1||((A2&&A0)&&A1) with index: 1
2024-06-10 21:04:58,297 DEBUG:Removing element: A1||((A2&&A0)&&A1)
2024-06-10 21:04:58,297 DEBUG:B with 1 elements = ['!(A0||A1)']
2024-06-10 21:04:58,319 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)'])
2024-06-10 21:04:58,319 INFO:Kernel output with 2 elements: ['!(A0||A1)', 'A1||((A2&&A0)&&A1)']
2024-06-10 21:04:58,319 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:04:58,319 DEBUG:Adding node to priority queue with priority: 0, edge: None
2024-06-10 21:04:58,319 DEBUG:Expanding node with bbvalue: 0, edge: None
2024-06-10 21:04:58,319 DEBUG:Checking pruning: node bbvalue = 0, hitting_set_value = 0.0, boundary = inf
2024-06-10 21:04:58,319 DEBUG:Calculating bbvalue: current_node bbvalue = 0, element = !(A0||A1), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 1.0
2024-06-10 21:04:58,319 DEBUG:Calculating bbvalue: current_node bbvalue = 0, element = A1||((A2&&A0)&&A1), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 1.0
2024-06-10 21:04:58,319 DEBUG:Adding node to priority queue with priority: 0, edge: !(A0||A1)
2024-06-10 21:04:58,319 DEBUG:Adding node to priority queue with priority: 0, edge: A1||((A2&&A0)&&A1)
2024-06-10 21:04:58,319 DEBUG:Expanding node with bbvalue: 1.0, edge: !(A0||A1)
2024-06-10 21:04:58,319 DEBUG:Checking pruning: node bbvalue = 1.0, hitting_set_value = 0.0, boundary = inf
2024-06-10 21:04:58,347 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:04:58,347 DEBUG:Finding kernel for 9 elements of dataset = ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:58,347 INFO:9 ELEMENTS: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:58,347 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:04:58,368 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:04:58,369 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)']
2024-06-10 21:04:58,400 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)'])
2024-06-10 21:04:58,400 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2']
2024-06-10 21:04:58,420 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:04:58,421 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:04:58,440 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:04:58,440 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1']
2024-06-10 21:04:58,458 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1'])
2024-06-10 21:04:58,458 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:04:58,458 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:04:58,458 DEBUG:B with 4 elements = ['A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1']
2024-06-10 21:04:58,476 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1'])
2024-06-10 21:04:58,476 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:04:58,476 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1']
2024-06-10 21:04:58,476 INFO:Checking line: A1||((A2&&A0)&&A1) with index: 0
2024-06-10 21:04:58,476 DEBUG:Removing element: A1||((A2&&A0)&&A1)
2024-06-10 21:04:58,476 DEBUG:B with 3 elements = ['(A1||(A1&&A0))||A2', '!A0', '!A1']
2024-06-10 21:04:58,493 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A1'])
2024-06-10 21:04:58,494 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 1
2024-06-10 21:04:58,494 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:04:58,494 DEBUG:B with 3 elements = ['A1||((A2&&A0)&&A1)', '!A0', '!A1']
2024-06-10 21:04:58,513 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1||((A2&&A0)&&A1)', '!A0', '!A1'])
2024-06-10 21:04:58,513 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:04:58,513 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['A1||((A2&&A0)&&A1)', '!A0', '!A1']
2024-06-10 21:04:58,513 INFO:Checking line: !A0 with index: 1
2024-06-10 21:04:58,513 DEBUG:Removing element: !A0
2024-06-10 21:04:58,513 DEBUG:B with 2 elements = ['A1||((A2&&A0)&&A1)', '!A1']
2024-06-10 21:04:58,533 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1||((A2&&A0)&&A1)', '!A1'])
2024-06-10 21:04:58,533 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:04:58,533 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['A1||((A2&&A0)&&A1)', '!A1']
2024-06-10 21:04:58,533 INFO:Checking line: !A1 with index: 1
2024-06-10 21:04:58,533 DEBUG:Removing element: !A1
2024-06-10 21:04:58,533 DEBUG:B with 1 elements = ['A1||((A2&&A0)&&A1)']
2024-06-10 21:04:58,552 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['A1||((A2&&A0)&&A1)'])
2024-06-10 21:04:58,552 INFO:Kernel output with 2 elements: ['A1||((A2&&A0)&&A1)', '!A1']
2024-06-10 21:04:58,552 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:04:58,552 DEBUG:Calculating bbvalue: current_node bbvalue = 1.0, element = A1||((A2&&A0)&&A1), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 2.0
2024-06-10 21:04:58,552 DEBUG:Calculating bbvalue: current_node bbvalue = 1.0, element = !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 2.0
2024-06-10 21:04:58,552 DEBUG:Adding node to priority queue with priority: 0, edge: A1||((A2&&A0)&&A1)
2024-06-10 21:04:58,552 DEBUG:Adding node to priority queue with priority: 0, edge: !A1
2024-06-10 21:04:58,552 DEBUG:Expanding node with bbvalue: 1.0, edge: A1||((A2&&A0)&&A1)
2024-06-10 21:04:58,552 DEBUG:Checking pruning: node bbvalue = 1.0, hitting_set_value = 0.0, boundary = inf
2024-06-10 21:04:58,570 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:04:58,570 DEBUG:Finding kernel for 9 elements of dataset = ['!(!A1&&A2)', '!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:58,570 INFO:9 ELEMENTS: ['!(!A1&&A2)', '!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:58,570 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:04:58,588 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:04:58,588 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '!(A0||A1)']
2024-06-10 21:04:58,605 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)'])
2024-06-10 21:04:58,606 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '!(A0||A1)', '(A1||(A1&&A0))||A2']
2024-06-10 21:04:58,623 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!(A0||A1)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:04:58,623 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:04:58,623 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:04:58,624 DEBUG:B with 2 elements = ['!(A0||A1)', '(A1||(A1&&A0))||A2']
2024-06-10 21:04:58,641 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:04:58,642 INFO:Checking line: !(A0||A1) with index: 1
2024-06-10 21:04:58,642 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:04:58,642 DEBUG:B with 2 elements = ['!(!A1&&A2)', '(A1||(A1&&A0))||A2']
2024-06-10 21:04:58,659 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:04:58,660 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 2
2024-06-10 21:04:58,660 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:04:58,660 DEBUG:B with 2 elements = ['!(!A1&&A2)', '!(A0||A1)']
2024-06-10 21:04:58,677 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)'])
2024-06-10 21:04:58,677 INFO:Kernel output with 3 elements: ['!(!A1&&A2)', '!(A0||A1)', '(A1||(A1&&A0))||A2']
2024-06-10 21:04:58,677 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:04:58,677 DEBUG:Calculating bbvalue: current_node bbvalue = 1.0, element = !(!A1&&A2), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 2.0
2024-06-10 21:04:58,677 DEBUG:Calculating bbvalue: current_node bbvalue = 1.0, element = !(A0||A1), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 2.0
2024-06-10 21:04:58,677 DEBUG:Calculating bbvalue: current_node bbvalue = 1.0, element = (A1||(A1&&A0))||A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 2.0
2024-06-10 21:04:58,677 DEBUG:Adding node to priority queue with priority: 0, edge: !(!A1&&A2)
2024-06-10 21:04:58,677 DEBUG:Adding node to priority queue with priority: 0, edge: !(A0||A1)
2024-06-10 21:04:58,677 DEBUG:Adding node to priority queue with priority: 0, edge: (A1||(A1&&A0))||A2
2024-06-10 21:04:58,677 DEBUG:Expanding node with bbvalue: 2.0, edge: A1||((A2&&A0)&&A1)
2024-06-10 21:04:58,678 DEBUG:Checking pruning: node bbvalue = 2.0, hitting_set_value = 0.0, boundary = inf
2024-06-10 21:04:58,695 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:04:58,695 DEBUG:Finding kernel for 8 elements of dataset = ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:58,695 INFO:8 ELEMENTS: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:58,695 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:04:58,713 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:04:58,717 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2']
2024-06-10 21:04:58,736 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:04:58,736 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:04:58,754 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:04:58,754 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A1']
2024-06-10 21:04:58,772 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A1'])
2024-06-10 21:04:58,772 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:04:58,772 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:04:58,772 DEBUG:B with 3 elements = ['(A1||(A1&&A0))||A2', '!A0', '!A1']
2024-06-10 21:04:58,800 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A1'])
2024-06-10 21:04:58,802 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 1
2024-06-10 21:04:58,802 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:04:58,802 DEBUG:B with 3 elements = ['!(!A1&&A2)', '!A0', '!A1']
2024-06-10 21:04:58,826 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0', '!A1'])
2024-06-10 21:04:58,826 INFO:Checking line: !A0 with index: 2
2024-06-10 21:04:58,826 DEBUG:Removing element: !A0
2024-06-10 21:04:58,827 DEBUG:B with 3 elements = ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A1']
2024-06-10 21:04:58,845 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A1'])
2024-06-10 21:04:58,845 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:04:58,845 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A1']
2024-06-10 21:04:58,845 INFO:Checking line: !A1 with index: 2
2024-06-10 21:04:58,845 DEBUG:Removing element: !A1
2024-06-10 21:04:58,845 DEBUG:B with 2 elements = ['!(!A1&&A2)', '(A1||(A1&&A0))||A2']
2024-06-10 21:04:58,863 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:04:58,863 INFO:Kernel output with 3 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A1']
2024-06-10 21:04:58,863 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:04:58,863 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = !(!A1&&A2), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-06-10 21:04:58,863 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = (A1||(A1&&A0))||A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-06-10 21:04:58,863 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-06-10 21:04:58,863 DEBUG:Adding node to priority queue with priority: 0, edge: !(!A1&&A2)
2024-06-10 21:04:58,863 DEBUG:Adding node to priority queue with priority: 0, edge: (A1||(A1&&A0))||A2
2024-06-10 21:04:58,863 DEBUG:Adding node to priority queue with priority: 0, edge: !A1
2024-06-10 21:04:58,863 DEBUG:Expanding node with bbvalue: 2.0, edge: !(!A1&&A2)
2024-06-10 21:04:58,863 DEBUG:Checking pruning: node bbvalue = 2.0, hitting_set_value = 0.0, boundary = inf
2024-06-10 21:04:58,881 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:04:58,881 DEBUG:Finding kernel for 8 elements of dataset = ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:58,881 INFO:8 ELEMENTS: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:58,881 DEBUG:B_PRIME with 1 elements: ['!(A0||A1)']
2024-06-10 21:04:58,900 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)'])
2024-06-10 21:04:58,900 DEBUG:B_PRIME with 2 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2']
2024-06-10 21:04:58,918 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:04:58,918 DEBUG:B_PRIME with 3 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:04:58,936 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:04:58,936 DEBUG:B_PRIME with 4 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1']
2024-06-10 21:04:58,954 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1'])
2024-06-10 21:04:58,954 DEBUG:B_PRIME with 5 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2']
2024-06-10 21:04:58,973 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2'])
2024-06-10 21:04:58,974 INFO:Checking line: !(A0||A1) with index: 0
2024-06-10 21:04:58,974 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:04:58,974 DEBUG:B with 4 elements = ['(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2']
2024-06-10 21:04:58,991 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2'])
2024-06-10 21:04:58,991 INFO:SHRINK: CN = TRUE, removing: !(A0||A1)
2024-06-10 21:04:58,991 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2']
2024-06-10 21:04:58,992 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:04:58,992 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:04:58,992 DEBUG:B with 3 elements = ['!A0', '!A1', '!A2']
2024-06-10 21:04:59,009 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0', '!A1', '!A2'])
2024-06-10 21:04:59,010 INFO:Checking line: !A0 with index: 1
2024-06-10 21:04:59,010 DEBUG:Removing element: !A0
2024-06-10 21:04:59,010 DEBUG:B with 3 elements = ['(A1||(A1&&A0))||A2', '!A1', '!A2']
2024-06-10 21:04:59,027 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A1', '!A2'])
2024-06-10 21:04:59,027 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:04:59,027 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['(A1||(A1&&A0))||A2', '!A1', '!A2']
2024-06-10 21:04:59,027 INFO:Checking line: !A1 with index: 1
2024-06-10 21:04:59,027 DEBUG:Removing element: !A1
2024-06-10 21:04:59,027 DEBUG:B with 2 elements = ['(A1||(A1&&A0))||A2', '!A2']
2024-06-10 21:04:59,045 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A2'])
2024-06-10 21:04:59,045 INFO:Checking line: !A2 with index: 2
2024-06-10 21:04:59,045 DEBUG:Removing element: !A2
2024-06-10 21:04:59,045 DEBUG:B with 2 elements = ['(A1||(A1&&A0))||A2', '!A1']
2024-06-10 21:04:59,062 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A1'])
2024-06-10 21:04:59,062 INFO:Kernel output with 3 elements: ['(A1||(A1&&A0))||A2', '!A1', '!A2']
2024-06-10 21:04:59,062 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:04:59,062 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = (A1||(A1&&A0))||A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-06-10 21:04:59,062 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-06-10 21:04:59,062 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-06-10 21:04:59,062 DEBUG:Adding node to priority queue with priority: -1, edge: !A2
2024-06-10 21:04:59,062 DEBUG:Adding node to priority queue with priority: 0, edge: (A1||(A1&&A0))||A2
2024-06-10 21:04:59,062 DEBUG:Adding node to priority queue with priority: 0, edge: !A1
2024-06-10 21:04:59,063 DEBUG:Expanding node with bbvalue: 3.0, edge: !A2
2024-06-10 21:04:59,063 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 1.0, boundary = inf
2024-06-10 21:04:59,081 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:04:59,081 DEBUG:Finding kernel for 7 elements of dataset = ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:59,081 INFO:7 ELEMENTS: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:59,081 DEBUG:B_PRIME with 1 elements: ['!(A0||A1)']
2024-06-10 21:04:59,098 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)'])
2024-06-10 21:04:59,098 DEBUG:B_PRIME with 2 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2']
2024-06-10 21:04:59,116 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:04:59,116 DEBUG:B_PRIME with 3 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:04:59,133 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:04:59,133 DEBUG:B_PRIME with 4 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1']
2024-06-10 21:04:59,151 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1'])
2024-06-10 21:04:59,151 DEBUG:B_PRIME with 5 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A1&&(A2||A0)']
2024-06-10 21:04:59,169 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A1&&(A2||A0)'])
2024-06-10 21:04:59,169 DEBUG:B_PRIME with 6 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:04:59,186 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A1&&(A2||A0)', 'A1&&A0'])
2024-06-10 21:04:59,187 INFO:Checking line: !(A0||A1) with index: 0
2024-06-10 21:04:59,187 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:04:59,187 DEBUG:B with 5 elements = ['(A1||(A1&&A0))||A2', '!A0', '!A1', '!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:04:59,204 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A1', '!A1&&(A2||A0)', 'A1&&A0'])
2024-06-10 21:04:59,204 INFO:SHRINK: CN = TRUE, removing: !(A0||A1)
2024-06-10 21:04:59,204 DEBUG:CONTINUE SHRINKING WITH 5 elements : ['(A1||(A1&&A0))||A2', '!A0', '!A1', '!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:04:59,204 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:04:59,204 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:04:59,204 DEBUG:B with 4 elements = ['!A0', '!A1', '!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:04:59,227 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A1&&(A2||A0)', 'A1&&A0'])
2024-06-10 21:04:59,227 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:04:59,227 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['!A0', '!A1', '!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:04:59,227 INFO:Checking line: !A0 with index: 0
2024-06-10 21:04:59,227 DEBUG:Removing element: !A0
2024-06-10 21:04:59,227 DEBUG:B with 3 elements = ['!A1', '!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:04:59,244 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '!A1&&(A2||A0)', 'A1&&A0'])
2024-06-10 21:04:59,244 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:04:59,244 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1', '!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:04:59,244 INFO:Checking line: !A1 with index: 0
2024-06-10 21:04:59,244 DEBUG:Removing element: !A1
2024-06-10 21:04:59,244 DEBUG:B with 2 elements = ['!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:04:59,262 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1&&(A2||A0)', 'A1&&A0'])
2024-06-10 21:04:59,262 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:04:59,262 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:04:59,262 INFO:Checking line: !A1&&(A2||A0) with index: 0
2024-06-10 21:04:59,262 DEBUG:Removing element: !A1&&(A2||A0)
2024-06-10 21:04:59,262 DEBUG:B with 1 elements = ['A1&&A0']
2024-06-10 21:04:59,279 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1&&A0'])
2024-06-10 21:04:59,279 INFO:SHRINK: CN = TRUE, removing: !A1&&(A2||A0)
2024-06-10 21:04:59,279 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['A1&&A0']
2024-06-10 21:04:59,279 INFO:Checking line: A1&&A0 with index: 0
2024-06-10 21:04:59,279 DEBUG:Removing element: A1&&A0
2024-06-10 21:04:59,279 DEBUG:B with 0 elements = []
2024-06-10 21:04:59,296 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:04:59,296 INFO:Kernel output with 1 elements: ['A1&&A0']
2024-06-10 21:04:59,296 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:04:59,296 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = A1&&A0, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:04:59,297 DEBUG:Adding node to priority queue with priority: 0, edge: A1&&A0
2024-06-10 21:04:59,297 DEBUG:Expanding node with bbvalue: 2.0, edge: (A1||(A1&&A0))||A2
2024-06-10 21:04:59,297 DEBUG:Checking pruning: node bbvalue = 2.0, hitting_set_value = 0.0, boundary = inf
2024-06-10 21:04:59,315 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:04:59,315 DEBUG:Finding kernel for 8 elements of dataset = ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:59,315 INFO:8 ELEMENTS: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:59,315 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:04:59,333 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:04:59,333 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '!(A0||A1)']
2024-06-10 21:04:59,351 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)'])
2024-06-10 21:04:59,351 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0']
2024-06-10 21:04:59,368 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0'])
2024-06-10 21:04:59,368 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1']
2024-06-10 21:04:59,386 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1'])
2024-06-10 21:04:59,387 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2']
2024-06-10 21:04:59,405 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2'])
2024-06-10 21:04:59,405 DEBUG:B_PRIME with 6 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:04:59,423 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:04:59,423 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:04:59,423 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:04:59,423 DEBUG:B with 5 elements = ['!(A0||A1)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:04:59,441 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:04:59,441 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:04:59,441 DEBUG:CONTINUE SHRINKING WITH 5 elements : ['!(A0||A1)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:04:59,441 INFO:Checking line: !(A0||A1) with index: 0
2024-06-10 21:04:59,441 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:04:59,441 DEBUG:B with 4 elements = ['!A0', '!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:04:59,459 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:04:59,459 INFO:SHRINK: CN = TRUE, removing: !(A0||A1)
2024-06-10 21:04:59,459 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['!A0', '!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:04:59,459 INFO:Checking line: !A0 with index: 0
2024-06-10 21:04:59,459 DEBUG:Removing element: !A0
2024-06-10 21:04:59,459 DEBUG:B with 3 elements = ['!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:04:59,476 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:04:59,477 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:04:59,477 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:04:59,477 INFO:Checking line: !A1 with index: 0
2024-06-10 21:04:59,477 DEBUG:Removing element: !A1
2024-06-10 21:04:59,477 DEBUG:B with 2 elements = ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:04:59,494 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '!A1&&(A2||A0)'])
2024-06-10 21:04:59,494 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:04:59,494 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:04:59,494 INFO:Checking line: !A2 with index: 0
2024-06-10 21:04:59,494 DEBUG:Removing element: !A2
2024-06-10 21:04:59,494 DEBUG:B with 1 elements = ['!A1&&(A2||A0)']
2024-06-10 21:04:59,512 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A1&&(A2||A0)'])
2024-06-10 21:04:59,512 INFO:Checking line: !A1&&(A2||A0) with index: 1
2024-06-10 21:04:59,512 DEBUG:Removing element: !A1&&(A2||A0)
2024-06-10 21:04:59,512 DEBUG:B with 1 elements = ['!A2']
2024-06-10 21:04:59,547 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A2'])
2024-06-10 21:04:59,547 INFO:Kernel output with 2 elements: ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:04:59,547 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:04:59,547 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-06-10 21:04:59,547 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = !A1&&(A2||A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-06-10 21:04:59,547 DEBUG:Adding node to priority queue with priority: -1, edge: !A2
2024-06-10 21:04:59,547 DEBUG:Adding node to priority queue with priority: 0, edge: !A1&&(A2||A0)
2024-06-10 21:04:59,548 DEBUG:Expanding node with bbvalue: 3.0, edge: !A2
2024-06-10 21:04:59,548 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 1.0, boundary = inf
2024-06-10 21:04:59,568 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:04:59,568 DEBUG:Finding kernel for 7 elements of dataset = ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:59,568 INFO:7 ELEMENTS: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:59,569 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:04:59,586 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:04:59,587 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '!(A0||A1)']
2024-06-10 21:04:59,604 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)'])
2024-06-10 21:04:59,604 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0']
2024-06-10 21:04:59,622 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0'])
2024-06-10 21:04:59,622 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1']
2024-06-10 21:04:59,644 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1'])
2024-06-10 21:04:59,644 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A1&&(A2||A0)']
2024-06-10 21:04:59,662 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A1&&(A2||A0)'])
2024-06-10 21:04:59,662 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:04:59,662 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:04:59,662 DEBUG:B with 4 elements = ['!(A0||A1)', '!A0', '!A1', '!A1&&(A2||A0)']
2024-06-10 21:04:59,680 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '!A0', '!A1', '!A1&&(A2||A0)'])
2024-06-10 21:04:59,680 INFO:Checking line: !(A0||A1) with index: 1
2024-06-10 21:04:59,680 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:04:59,680 DEBUG:B with 4 elements = ['!(!A1&&A2)', '!A0', '!A1', '!A1&&(A2||A0)']
2024-06-10 21:04:59,697 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!A0', '!A1', '!A1&&(A2||A0)'])
2024-06-10 21:04:59,697 INFO:SHRINK: CN = TRUE, removing: !(A0||A1)
2024-06-10 21:04:59,697 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['!(!A1&&A2)', '!A0', '!A1', '!A1&&(A2||A0)']
2024-06-10 21:04:59,697 INFO:Checking line: !A0 with index: 1
2024-06-10 21:04:59,697 DEBUG:Removing element: !A0
2024-06-10 21:04:59,697 DEBUG:B with 3 elements = ['!(!A1&&A2)', '!A1', '!A1&&(A2||A0)']
2024-06-10 21:04:59,714 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!A1', '!A1&&(A2||A0)'])
2024-06-10 21:04:59,714 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:04:59,714 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!(!A1&&A2)', '!A1', '!A1&&(A2||A0)']
2024-06-10 21:04:59,715 INFO:Checking line: !A1 with index: 1
2024-06-10 21:04:59,715 DEBUG:Removing element: !A1
2024-06-10 21:04:59,715 DEBUG:B with 2 elements = ['!(!A1&&A2)', '!A1&&(A2||A0)']
2024-06-10 21:04:59,736 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!A1&&(A2||A0)'])
2024-06-10 21:04:59,736 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:04:59,736 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!(!A1&&A2)', '!A1&&(A2||A0)']
2024-06-10 21:04:59,736 INFO:Checking line: !A1&&(A2||A0) with index: 1
2024-06-10 21:04:59,736 DEBUG:Removing element: !A1&&(A2||A0)
2024-06-10 21:04:59,736 DEBUG:B with 1 elements = ['!(!A1&&A2)']
2024-06-10 21:04:59,755 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:04:59,755 INFO:Kernel output with 2 elements: ['!(!A1&&A2)', '!A1&&(A2||A0)']
2024-06-10 21:04:59,755 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:04:59,755 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = !(!A1&&A2), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:04:59,755 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = !A1&&(A2||A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:04:59,755 DEBUG:Adding node to priority queue with priority: 0, edge: !(!A1&&A2)
2024-06-10 21:04:59,755 DEBUG:Adding node to priority queue with priority: 0, edge: !A1&&(A2||A0)
2024-06-10 21:04:59,756 DEBUG:Expanding node with bbvalue: 3.0, edge: !A1
2024-06-10 21:04:59,756 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 0.0, boundary = inf
2024-06-10 21:04:59,778 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:04:59,778 DEBUG:Finding kernel for 7 elements of dataset = ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:59,778 INFO:7 ELEMENTS: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:59,778 DEBUG:B_PRIME with 1 elements: ['!(A0||A1)']
2024-06-10 21:04:59,796 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)'])
2024-06-10 21:04:59,796 DEBUG:B_PRIME with 2 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2']
2024-06-10 21:04:59,814 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:04:59,814 DEBUG:B_PRIME with 3 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:04:59,831 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:04:59,831 DEBUG:B_PRIME with 4 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:04:59,850 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:04:59,850 INFO:Checking line: !(A0||A1) with index: 0
2024-06-10 21:04:59,850 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:04:59,850 DEBUG:B with 3 elements = ['(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:04:59,867 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:04:59,867 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 1
2024-06-10 21:04:59,867 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:04:59,867 DEBUG:B with 3 elements = ['!(A0||A1)', '!A0', '!A2']
2024-06-10 21:04:59,885 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '!A0', '!A2'])
2024-06-10 21:04:59,885 INFO:Checking line: !A0 with index: 2
2024-06-10 21:04:59,885 DEBUG:Removing element: !A0
2024-06-10 21:04:59,885 DEBUG:B with 3 elements = ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A2']
2024-06-10 21:04:59,903 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A2'])
2024-06-10 21:04:59,903 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:04:59,903 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A2']
2024-06-10 21:04:59,903 INFO:Checking line: !A2 with index: 2
2024-06-10 21:04:59,903 DEBUG:Removing element: !A2
2024-06-10 21:04:59,903 DEBUG:B with 2 elements = ['!(A0||A1)', '(A1||(A1&&A0))||A2']
2024-06-10 21:04:59,921 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:04:59,921 INFO:Kernel output with 3 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A2']
2024-06-10 21:04:59,921 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:04:59,921 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = !(A0||A1), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:04:59,921 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = (A1||(A1&&A0))||A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:04:59,921 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:04:59,921 DEBUG:Adding node to priority queue with priority: -1, edge: !A2
2024-06-10 21:04:59,921 DEBUG:Adding node to priority queue with priority: 0, edge: !(A0||A1)
2024-06-10 21:04:59,921 DEBUG:Adding node to priority queue with priority: 0, edge: (A1||(A1&&A0))||A2
2024-06-10 21:04:59,922 DEBUG:Expanding node with bbvalue: 4.0, edge: !A2
2024-06-10 21:04:59,922 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 1.0, boundary = inf
2024-06-10 21:04:59,940 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:04:59,940 DEBUG:Finding kernel for 6 elements of dataset = ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:59,940 INFO:6 ELEMENTS: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:04:59,940 DEBUG:B_PRIME with 1 elements: ['!(A0||A1)']
2024-06-10 21:04:59,957 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)'])
2024-06-10 21:04:59,957 DEBUG:B_PRIME with 2 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2']
2024-06-10 21:04:59,975 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:04:59,975 DEBUG:B_PRIME with 3 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:04:59,992 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:04:59,993 DEBUG:B_PRIME with 4 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)']
2024-06-10 21:05:00,011 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)'])
2024-06-10 21:05:00,011 DEBUG:B_PRIME with 5 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:05:00,028 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)', 'A1&&A0'])
2024-06-10 21:05:00,028 INFO:Checking line: !(A0||A1) with index: 0
2024-06-10 21:05:00,028 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:05:00,028 DEBUG:B with 4 elements = ['(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:05:00,051 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)', 'A1&&A0'])
2024-06-10 21:05:00,051 INFO:SHRINK: CN = TRUE, removing: !(A0||A1)
2024-06-10 21:05:00,051 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:05:00,051 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:00,051 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:00,051 DEBUG:B with 3 elements = ['!A0', '!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:05:00,068 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1&&(A2||A0)', 'A1&&A0'])
2024-06-10 21:05:00,068 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:00,068 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:05:00,068 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:00,069 DEBUG:Removing element: !A0
2024-06-10 21:05:00,069 DEBUG:B with 2 elements = ['!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:05:00,086 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1&&(A2||A0)', 'A1&&A0'])
2024-06-10 21:05:00,086 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:00,086 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:05:00,086 INFO:Checking line: !A1&&(A2||A0) with index: 0
2024-06-10 21:05:00,086 DEBUG:Removing element: !A1&&(A2||A0)
2024-06-10 21:05:00,086 DEBUG:B with 1 elements = ['A1&&A0']
2024-06-10 21:05:00,104 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1&&A0'])
2024-06-10 21:05:00,104 INFO:SHRINK: CN = TRUE, removing: !A1&&(A2||A0)
2024-06-10 21:05:00,104 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['A1&&A0']
2024-06-10 21:05:00,104 INFO:Checking line: A1&&A0 with index: 0
2024-06-10 21:05:00,105 DEBUG:Removing element: A1&&A0
2024-06-10 21:05:00,105 DEBUG:B with 0 elements = []
2024-06-10 21:05:00,122 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:00,122 INFO:Kernel output with 1 elements: ['A1&&A0']
2024-06-10 21:05:00,122 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:00,122 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = A1&&A0, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:00,122 DEBUG:Adding node to priority queue with priority: 0, edge: A1&&A0
2024-06-10 21:05:00,123 DEBUG:Expanding node with bbvalue: 3.0, edge: !A1&&(A2||A0)
2024-06-10 21:05:00,123 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 0.0, boundary = inf
2024-06-10 21:05:00,141 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:00,142 DEBUG:Finding kernel for 7 elements of dataset = ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:00,142 INFO:7 ELEMENTS: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:00,142 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:00,158 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:00,159 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '!(A0||A1)']
2024-06-10 21:05:00,176 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)'])
2024-06-10 21:05:00,176 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0']
2024-06-10 21:05:00,194 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0'])
2024-06-10 21:05:00,194 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1']
2024-06-10 21:05:00,211 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1'])
2024-06-10 21:05:00,211 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2']
2024-06-10 21:05:00,229 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2'])
2024-06-10 21:05:00,229 DEBUG:B_PRIME with 6 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:00,247 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2', 'A1&&A0'])
2024-06-10 21:05:00,247 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:00,247 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:00,247 DEBUG:B with 5 elements = ['!(A0||A1)', '!A0', '!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:00,265 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '!A0', '!A1', '!A2', 'A1&&A0'])
2024-06-10 21:05:00,265 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:05:00,265 DEBUG:CONTINUE SHRINKING WITH 5 elements : ['!(A0||A1)', '!A0', '!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:00,265 INFO:Checking line: !(A0||A1) with index: 0
2024-06-10 21:05:00,265 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:05:00,265 DEBUG:B with 4 elements = ['!A0', '!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:00,282 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', 'A1&&A0'])
2024-06-10 21:05:00,282 INFO:SHRINK: CN = TRUE, removing: !(A0||A1)
2024-06-10 21:05:00,282 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['!A0', '!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:00,282 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:00,282 DEBUG:Removing element: !A0
2024-06-10 21:05:00,282 DEBUG:B with 3 elements = ['!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:00,300 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '!A2', 'A1&&A0'])
2024-06-10 21:05:00,300 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:00,300 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:00,300 INFO:Checking line: !A1 with index: 0
2024-06-10 21:05:00,300 DEBUG:Removing element: !A1
2024-06-10 21:05:00,300 DEBUG:B with 2 elements = ['!A2', 'A1&&A0']
2024-06-10 21:05:00,317 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', 'A1&&A0'])
2024-06-10 21:05:00,318 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:05:00,318 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', 'A1&&A0']
2024-06-10 21:05:00,318 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:00,318 DEBUG:Removing element: !A2
2024-06-10 21:05:00,318 DEBUG:B with 1 elements = ['A1&&A0']
2024-06-10 21:05:00,335 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1&&A0'])
2024-06-10 21:05:00,335 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:00,335 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['A1&&A0']
2024-06-10 21:05:00,335 INFO:Checking line: A1&&A0 with index: 0
2024-06-10 21:05:00,335 DEBUG:Removing element: A1&&A0
2024-06-10 21:05:00,335 DEBUG:B with 0 elements = []
2024-06-10 21:05:00,352 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:00,353 INFO:Kernel output with 1 elements: ['A1&&A0']
2024-06-10 21:05:00,353 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:00,353 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = A1&&A0, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:05:00,353 DEBUG:Adding node to priority queue with priority: 0, edge: A1&&A0
2024-06-10 21:05:00,354 DEBUG:Expanding node with bbvalue: 4.0, edge: !A1&&(A2||A0)
2024-06-10 21:05:00,354 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 1.0, boundary = inf
2024-06-10 21:05:00,371 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:00,371 DEBUG:Finding kernel for 6 elements of dataset = ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:00,371 INFO:6 ELEMENTS: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:00,371 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:00,389 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:00,389 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '!(A0||A1)']
2024-06-10 21:05:00,406 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)'])
2024-06-10 21:05:00,406 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0']
2024-06-10 21:05:00,424 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0'])
2024-06-10 21:05:00,424 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1']
2024-06-10 21:05:00,446 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1'])
2024-06-10 21:05:00,446 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', 'A1&&A0']
2024-06-10 21:05:00,463 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', 'A1&&A0'])
2024-06-10 21:05:00,463 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:00,463 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:00,463 DEBUG:B with 4 elements = ['!(A0||A1)', '!A0', '!A1', 'A1&&A0']
2024-06-10 21:05:00,481 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '!A0', '!A1', 'A1&&A0'])
2024-06-10 21:05:00,481 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:05:00,481 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['!(A0||A1)', '!A0', '!A1', 'A1&&A0']
2024-06-10 21:05:00,481 INFO:Checking line: !(A0||A1) with index: 0
2024-06-10 21:05:00,481 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:05:00,481 DEBUG:B with 3 elements = ['!A0', '!A1', 'A1&&A0']
2024-06-10 21:05:00,498 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', 'A1&&A0'])
2024-06-10 21:05:00,498 INFO:SHRINK: CN = TRUE, removing: !(A0||A1)
2024-06-10 21:05:00,498 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A1', 'A1&&A0']
2024-06-10 21:05:00,498 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:00,498 DEBUG:Removing element: !A0
2024-06-10 21:05:00,499 DEBUG:B with 2 elements = ['!A1', 'A1&&A0']
2024-06-10 21:05:00,516 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', 'A1&&A0'])
2024-06-10 21:05:00,516 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:00,516 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A1', 'A1&&A0']
2024-06-10 21:05:00,516 INFO:Checking line: !A1 with index: 0
2024-06-10 21:05:00,516 DEBUG:Removing element: !A1
2024-06-10 21:05:00,516 DEBUG:B with 1 elements = ['A1&&A0']
2024-06-10 21:05:00,534 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1&&A0'])
2024-06-10 21:05:00,534 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:05:00,534 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['A1&&A0']
2024-06-10 21:05:00,534 INFO:Checking line: A1&&A0 with index: 0
2024-06-10 21:05:00,534 DEBUG:Removing element: A1&&A0
2024-06-10 21:05:00,534 DEBUG:B with 0 elements = []
2024-06-10 21:05:00,552 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:00,552 INFO:Kernel output with 1 elements: ['A1&&A0']
2024-06-10 21:05:00,552 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:00,552 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = A1&&A0, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:00,552 DEBUG:Adding node to priority queue with priority: 0, edge: A1&&A0
2024-06-10 21:05:00,553 DEBUG:Expanding node with bbvalue: 4.0, edge: (A1||(A1&&A0))||A2
2024-06-10 21:05:00,553 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 0.0, boundary = inf
2024-06-10 21:05:00,572 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:00,572 DEBUG:Finding kernel for 6 elements of dataset = ['!(A0||A1)', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:00,572 INFO:6 ELEMENTS: ['!(A0||A1)', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:00,572 DEBUG:B_PRIME with 1 elements: ['!(A0||A1)']
2024-06-10 21:05:00,590 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)'])
2024-06-10 21:05:00,590 DEBUG:B_PRIME with 2 elements: ['!(A0||A1)', '!A0']
2024-06-10 21:05:00,610 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '!A0'])
2024-06-10 21:05:00,610 DEBUG:B_PRIME with 3 elements: ['!(A0||A1)', '!A0', '!A2']
2024-06-10 21:05:00,631 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '!A0', '!A2'])
2024-06-10 21:05:00,631 DEBUG:B_PRIME with 4 elements: ['!(A0||A1)', '!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:00,649 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '!A0', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:00,650 INFO:Checking line: !(A0||A1) with index: 0
2024-06-10 21:05:00,650 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:05:00,650 DEBUG:B with 3 elements = ['!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:00,667 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:00,667 INFO:SHRINK: CN = TRUE, removing: !(A0||A1)
2024-06-10 21:05:00,667 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:00,667 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:00,667 DEBUG:Removing element: !A0
2024-06-10 21:05:00,667 DEBUG:B with 2 elements = ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:00,685 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:00,685 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:00,685 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:00,685 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:00,685 DEBUG:Removing element: !A2
2024-06-10 21:05:00,685 DEBUG:B with 1 elements = ['!A1&&(A2||A0)']
2024-06-10 21:05:00,703 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A1&&(A2||A0)'])
2024-06-10 21:05:00,703 INFO:Checking line: !A1&&(A2||A0) with index: 1
2024-06-10 21:05:00,703 DEBUG:Removing element: !A1&&(A2||A0)
2024-06-10 21:05:00,703 DEBUG:B with 1 elements = ['!A2']
2024-06-10 21:05:00,720 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A2'])
2024-06-10 21:05:00,721 INFO:Kernel output with 2 elements: ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:00,721 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:00,721 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:00,721 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = !A1&&(A2||A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:00,721 DEBUG:Adding node to priority queue with priority: -1, edge: !A2
2024-06-10 21:05:00,721 DEBUG:Adding node to priority queue with priority: 0, edge: !A1&&(A2||A0)
2024-06-10 21:05:00,721 DEBUG:Expanding node with bbvalue: 5.0, edge: !A2
2024-06-10 21:05:00,722 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 1.0, boundary = inf
2024-06-10 21:05:00,739 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '!A0', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:00,739 DEBUG:Finding kernel for 5 elements of dataset = ['!(A0||A1)', '!A0', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:00,739 INFO:5 ELEMENTS: ['!(A0||A1)', '!A0', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:00,740 DEBUG:B_PRIME with 1 elements: ['!(A0||A1)']
2024-06-10 21:05:00,757 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)'])
2024-06-10 21:05:00,758 DEBUG:B_PRIME with 2 elements: ['!(A0||A1)', '!A0']
2024-06-10 21:05:00,775 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '!A0'])
2024-06-10 21:05:00,775 DEBUG:B_PRIME with 3 elements: ['!(A0||A1)', '!A0', '!A1&&(A2||A0)']
2024-06-10 21:05:00,793 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '!A0', '!A1&&(A2||A0)'])
2024-06-10 21:05:00,793 DEBUG:B_PRIME with 4 elements: ['!(A0||A1)', '!A0', '!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:05:00,810 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '!A0', '!A1&&(A2||A0)', 'A1&&A0'])
2024-06-10 21:05:00,811 INFO:Checking line: !(A0||A1) with index: 0
2024-06-10 21:05:00,811 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:05:00,811 DEBUG:B with 3 elements = ['!A0', '!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:05:00,828 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1&&(A2||A0)', 'A1&&A0'])
2024-06-10 21:05:00,828 INFO:SHRINK: CN = TRUE, removing: !(A0||A1)
2024-06-10 21:05:00,828 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:05:00,828 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:00,828 DEBUG:Removing element: !A0
2024-06-10 21:05:00,828 DEBUG:B with 2 elements = ['!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:05:00,846 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1&&(A2||A0)', 'A1&&A0'])
2024-06-10 21:05:00,846 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:00,846 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A1&&(A2||A0)', 'A1&&A0']
2024-06-10 21:05:00,846 INFO:Checking line: !A1&&(A2||A0) with index: 0
2024-06-10 21:05:00,846 DEBUG:Removing element: !A1&&(A2||A0)
2024-06-10 21:05:00,846 DEBUG:B with 1 elements = ['A1&&A0']
2024-06-10 21:05:00,869 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1&&A0'])
2024-06-10 21:05:00,869 INFO:SHRINK: CN = TRUE, removing: !A1&&(A2||A0)
2024-06-10 21:05:00,869 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['A1&&A0']
2024-06-10 21:05:00,869 INFO:Checking line: A1&&A0 with index: 0
2024-06-10 21:05:00,869 DEBUG:Removing element: A1&&A0
2024-06-10 21:05:00,869 DEBUG:B with 0 elements = []
2024-06-10 21:05:00,886 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:00,886 INFO:Kernel output with 1 elements: ['A1&&A0']
2024-06-10 21:05:00,887 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:00,887 DEBUG:Calculating bbvalue: current_node bbvalue = 5.0, element = A1&&A0, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 6.0
2024-06-10 21:05:00,887 DEBUG:Adding node to priority queue with priority: 0, edge: A1&&A0
2024-06-10 21:05:00,888 DEBUG:Expanding node with bbvalue: 5.0, edge: A1&&A0
2024-06-10 21:05:00,888 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 1.0, boundary = inf
2024-06-10 21:05:00,905 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:00,906 DEBUG:Finding kernel for 5 elements of dataset = ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:00,906 INFO:5 ELEMENTS: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:00,906 DEBUG:B_PRIME with 1 elements: ['!(A0||A1)']
2024-06-10 21:05:00,923 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)'])
2024-06-10 21:05:00,923 DEBUG:B_PRIME with 2 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2']
2024-06-10 21:05:00,940 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:05:00,940 DEBUG:B_PRIME with 3 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:00,958 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:00,958 DEBUG:B_PRIME with 4 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)']
2024-06-10 21:05:00,976 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)'])
2024-06-10 21:05:00,976 DEBUG:B_PRIME with 5 elements: ['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:00,994 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:00,994 INFO:Checking line: !(A0||A1) with index: 0
2024-06-10 21:05:00,994 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:05:00,994 DEBUG:B with 4 elements = ['(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,012 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:01,012 INFO:SHRINK: CN = TRUE, removing: !(A0||A1)
2024-06-10 21:05:01,012 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,012 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:01,012 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:01,012 DEBUG:B with 3 elements = ['!A0', '!A1&&(A2||A0)', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,029 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1&&(A2||A0)', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:01,029 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:01,029 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A1&&(A2||A0)', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,029 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:01,029 DEBUG:Removing element: !A0
2024-06-10 21:05:01,029 DEBUG:B with 2 elements = ['!A1&&(A2||A0)', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,047 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1&&(A2||A0)', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:01,047 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:01,047 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A1&&(A2||A0)', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,047 INFO:Checking line: !A1&&(A2||A0) with index: 0
2024-06-10 21:05:01,047 DEBUG:Removing element: !A1&&(A2||A0)
2024-06-10 21:05:01,047 DEBUG:B with 1 elements = ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,064 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:01,064 INFO:SHRINK: CN = TRUE, removing: !A1&&(A2||A0)
2024-06-10 21:05:01,064 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,064 INFO:Checking line: (A1||A1)&&(A2&&A0) with index: 0
2024-06-10 21:05:01,064 DEBUG:Removing element: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:01,064 DEBUG:B with 0 elements = []
2024-06-10 21:05:01,082 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:01,082 INFO:Kernel output with 1 elements: ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,082 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:01,082 DEBUG:Calculating bbvalue: current_node bbvalue = 5.0, element = (A1||A1)&&(A2&&A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 6.0
2024-06-10 21:05:01,082 DEBUG:Adding node to priority queue with priority: -1, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:01,083 DEBUG:Expanding node with bbvalue: 6.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:01,083 DEBUG:Checking pruning: node bbvalue = 6.0, hitting_set_value = 2.0, boundary = inf
2024-06-10 21:05:01,100 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)'])
2024-06-10 21:05:01,100 DEBUG:Dataset does not entail A0&&!A0, kernel = empty
2024-06-10 21:05:01,100 DEBUG:Updated boundary: 2.0
2024-06-10 21:05:01,101 DEBUG:Expanding node with bbvalue: 5.0, edge: A1&&A0
2024-06-10 21:05:01,101 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 1.0, boundary = 2.0
2024-06-10 21:05:01,119 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:01,119 DEBUG:Finding kernel for 5 elements of dataset = ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,119 INFO:5 ELEMENTS: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,119 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:01,137 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:01,137 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '!(A0||A1)']
2024-06-10 21:05:01,154 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)'])
2024-06-10 21:05:01,154 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0']
2024-06-10 21:05:01,174 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0'])
2024-06-10 21:05:01,174 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1']
2024-06-10 21:05:01,192 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1'])
2024-06-10 21:05:01,192 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,210 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:01,210 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:01,210 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:01,211 DEBUG:B with 4 elements = ['!(A0||A1)', '!A0', '!A1', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,229 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '!A0', '!A1', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:01,229 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:05:01,229 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['!(A0||A1)', '!A0', '!A1', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,229 INFO:Checking line: !(A0||A1) with index: 0
2024-06-10 21:05:01,229 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:05:01,229 DEBUG:B with 3 elements = ['!A0', '!A1', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,248 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:01,248 INFO:SHRINK: CN = TRUE, removing: !(A0||A1)
2024-06-10 21:05:01,248 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A1', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,248 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:01,248 DEBUG:Removing element: !A0
2024-06-10 21:05:01,249 DEBUG:B with 2 elements = ['!A1', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,266 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:01,267 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:01,267 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A1', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,267 INFO:Checking line: !A1 with index: 0
2024-06-10 21:05:01,267 DEBUG:Removing element: !A1
2024-06-10 21:05:01,267 DEBUG:B with 1 elements = ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,284 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:01,284 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:05:01,284 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,284 INFO:Checking line: (A1||A1)&&(A2&&A0) with index: 0
2024-06-10 21:05:01,284 DEBUG:Removing element: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:01,284 DEBUG:B with 0 elements = []
2024-06-10 21:05:01,305 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:01,306 INFO:Kernel output with 1 elements: ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,306 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:01,307 DEBUG:Calculating bbvalue: current_node bbvalue = 5.0, element = (A1||A1)&&(A2&&A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 6.0
2024-06-10 21:05:01,307 DEBUG:Adding node to priority queue with priority: -1, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:01,313 DEBUG:Expanding node with bbvalue: 6.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:01,313 DEBUG:Checking pruning: node bbvalue = 6.0, hitting_set_value = 2.0, boundary = 2.0
2024-06-10 21:05:01,317 DEBUG:Pruning node with bbvalue: 6.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:01,317 DEBUG:Expanding node with bbvalue: 5.0, edge: !A1&&(A2||A0)
2024-06-10 21:05:01,317 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 0.0, boundary = 2.0
2024-06-10 21:05:01,337 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:01,338 DEBUG:Finding kernel for 5 elements of dataset = ['!(A0||A1)', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,338 INFO:5 ELEMENTS: ['!(A0||A1)', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,338 DEBUG:B_PRIME with 1 elements: ['!(A0||A1)']
2024-06-10 21:05:01,359 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)'])
2024-06-10 21:05:01,359 DEBUG:B_PRIME with 2 elements: ['!(A0||A1)', '!A0']
2024-06-10 21:05:01,380 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '!A0'])
2024-06-10 21:05:01,381 DEBUG:B_PRIME with 3 elements: ['!(A0||A1)', '!A0', '!A2']
2024-06-10 21:05:01,400 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '!A0', '!A2'])
2024-06-10 21:05:01,400 DEBUG:B_PRIME with 4 elements: ['!(A0||A1)', '!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:01,417 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '!A0', '!A2', 'A1&&A0'])
2024-06-10 21:05:01,418 INFO:Checking line: !(A0||A1) with index: 0
2024-06-10 21:05:01,418 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:05:01,418 DEBUG:B with 3 elements = ['!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:01,435 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', 'A1&&A0'])
2024-06-10 21:05:01,435 INFO:SHRINK: CN = TRUE, removing: !(A0||A1)
2024-06-10 21:05:01,435 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:01,435 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:01,435 DEBUG:Removing element: !A0
2024-06-10 21:05:01,435 DEBUG:B with 2 elements = ['!A2', 'A1&&A0']
2024-06-10 21:05:01,453 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', 'A1&&A0'])
2024-06-10 21:05:01,453 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:01,453 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', 'A1&&A0']
2024-06-10 21:05:01,453 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:01,453 DEBUG:Removing element: !A2
2024-06-10 21:05:01,453 DEBUG:B with 1 elements = ['A1&&A0']
2024-06-10 21:05:01,470 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1&&A0'])
2024-06-10 21:05:01,470 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:01,471 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['A1&&A0']
2024-06-10 21:05:01,471 INFO:Checking line: A1&&A0 with index: 0
2024-06-10 21:05:01,471 DEBUG:Removing element: A1&&A0
2024-06-10 21:05:01,471 DEBUG:B with 0 elements = []
2024-06-10 21:05:01,488 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:01,488 INFO:Kernel output with 1 elements: ['A1&&A0']
2024-06-10 21:05:01,488 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:01,488 DEBUG:Calculating bbvalue: current_node bbvalue = 5.0, element = A1&&A0, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 6.0
2024-06-10 21:05:01,488 DEBUG:Adding node to priority queue with priority: 0, edge: A1&&A0
2024-06-10 21:05:01,489 DEBUG:Expanding node with bbvalue: 3.0, edge: !A1
2024-06-10 21:05:01,489 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 0.0, boundary = 2.0
2024-06-10 21:05:01,507 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:01,507 DEBUG:Finding kernel for 7 elements of dataset = ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,507 INFO:7 ELEMENTS: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,507 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:01,525 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:01,525 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2']
2024-06-10 21:05:01,543 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:05:01,543 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:01,561 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:01,561 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:05:01,578 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:05:01,579 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:01,596 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:01,596 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:01,596 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:01,596 DEBUG:B with 4 elements = ['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:01,614 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:01,614 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:05:01,614 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:01,614 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:01,614 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:01,614 DEBUG:B with 3 elements = ['!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:01,638 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:01,638 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:01,638 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:01,638 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:01,638 DEBUG:Removing element: !A0
2024-06-10 21:05:01,638 DEBUG:B with 2 elements = ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:01,658 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:01,658 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:01,658 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:01,658 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:01,658 DEBUG:Removing element: !A2
2024-06-10 21:05:01,658 DEBUG:B with 1 elements = ['!A1&&(A2||A0)']
2024-06-10 21:05:01,676 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A1&&(A2||A0)'])
2024-06-10 21:05:01,676 INFO:Checking line: !A1&&(A2||A0) with index: 1
2024-06-10 21:05:01,677 DEBUG:Removing element: !A1&&(A2||A0)
2024-06-10 21:05:01,677 DEBUG:B with 1 elements = ['!A2']
2024-06-10 21:05:01,694 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A2'])
2024-06-10 21:05:01,694 INFO:Kernel output with 2 elements: ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:01,694 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:01,694 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:05:01,694 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = !A1&&(A2||A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:05:01,694 DEBUG:Adding node to priority queue with priority: -1, edge: !A2
2024-06-10 21:05:01,694 DEBUG:Adding node to priority queue with priority: 0, edge: !A1&&(A2||A0)
2024-06-10 21:05:01,696 DEBUG:Expanding node with bbvalue: 4.0, edge: !A2
2024-06-10 21:05:01,696 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 1.0, boundary = 2.0
2024-06-10 21:05:01,713 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:01,713 DEBUG:Finding kernel for 6 elements of dataset = ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,713 INFO:6 ELEMENTS: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,713 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:01,736 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:01,736 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2']
2024-06-10 21:05:01,753 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:05:01,754 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:01,772 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:01,772 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)']
2024-06-10 21:05:01,789 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)'])
2024-06-10 21:05:01,790 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:01,790 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:01,790 DEBUG:B with 3 elements = ['(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)']
2024-06-10 21:05:01,807 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A1&&(A2||A0)'])
2024-06-10 21:05:01,807 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 1
2024-06-10 21:05:01,807 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:01,807 DEBUG:B with 3 elements = ['!(!A1&&A2)', '!A0', '!A1&&(A2||A0)']
2024-06-10 21:05:01,825 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!A0', '!A1&&(A2||A0)'])
2024-06-10 21:05:01,825 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:01,825 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!(!A1&&A2)', '!A0', '!A1&&(A2||A0)']
2024-06-10 21:05:01,825 INFO:Checking line: !A0 with index: 1
2024-06-10 21:05:01,825 DEBUG:Removing element: !A0
2024-06-10 21:05:01,825 DEBUG:B with 2 elements = ['!(!A1&&A2)', '!A1&&(A2||A0)']
2024-06-10 21:05:01,843 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!A1&&(A2||A0)'])
2024-06-10 21:05:01,843 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:01,843 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!(!A1&&A2)', '!A1&&(A2||A0)']
2024-06-10 21:05:01,843 INFO:Checking line: !A1&&(A2||A0) with index: 1
2024-06-10 21:05:01,843 DEBUG:Removing element: !A1&&(A2||A0)
2024-06-10 21:05:01,843 DEBUG:B with 1 elements = ['!(!A1&&A2)']
2024-06-10 21:05:01,861 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:01,861 INFO:Kernel output with 2 elements: ['!(!A1&&A2)', '!A1&&(A2||A0)']
2024-06-10 21:05:01,861 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:01,861 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = !(!A1&&A2), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:01,861 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = !A1&&(A2||A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:01,861 DEBUG:Adding node to priority queue with priority: 0, edge: !(!A1&&A2)
2024-06-10 21:05:01,861 DEBUG:Adding node to priority queue with priority: 0, edge: !A1&&(A2||A0)
2024-06-10 21:05:01,862 DEBUG:Expanding node with bbvalue: 4.0, edge: A1&&A0
2024-06-10 21:05:01,862 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 0.0, boundary = 2.0
2024-06-10 21:05:01,880 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:01,880 DEBUG:Finding kernel for 6 elements of dataset = ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,880 INFO:6 ELEMENTS: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,880 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:01,898 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:01,898 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '!(A0||A1)']
2024-06-10 21:05:01,915 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)'])
2024-06-10 21:05:01,915 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0']
2024-06-10 21:05:01,933 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0'])
2024-06-10 21:05:01,933 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1']
2024-06-10 21:05:01,951 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1'])
2024-06-10 21:05:01,951 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2']
2024-06-10 21:05:01,968 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2'])
2024-06-10 21:05:01,968 DEBUG:B_PRIME with 6 elements: ['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:01,986 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:01,986 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:01,986 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:01,986 DEBUG:B with 5 elements = ['!(A0||A1)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,003 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:02,003 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:05:02,003 DEBUG:CONTINUE SHRINKING WITH 5 elements : ['!(A0||A1)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,003 INFO:Checking line: !(A0||A1) with index: 0
2024-06-10 21:05:02,003 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:05:02,003 DEBUG:B with 4 elements = ['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,021 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:02,021 INFO:SHRINK: CN = TRUE, removing: !(A0||A1)
2024-06-10 21:05:02,021 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,021 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:02,021 DEBUG:Removing element: !A0
2024-06-10 21:05:02,021 DEBUG:B with 3 elements = ['!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,039 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:02,039 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:02,039 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,039 INFO:Checking line: !A1 with index: 0
2024-06-10 21:05:02,039 DEBUG:Removing element: !A1
2024-06-10 21:05:02,039 DEBUG:B with 2 elements = ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,056 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:02,056 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:05:02,056 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,056 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:02,056 DEBUG:Removing element: !A2
2024-06-10 21:05:02,056 DEBUG:B with 1 elements = ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,074 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:02,074 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:02,074 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,074 INFO:Checking line: (A1||A1)&&(A2&&A0) with index: 0
2024-06-10 21:05:02,074 DEBUG:Removing element: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:02,074 DEBUG:B with 0 elements = []
2024-06-10 21:05:02,091 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:02,092 INFO:Kernel output with 1 elements: ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,092 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:02,092 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = (A1||A1)&&(A2&&A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:02,092 DEBUG:Adding node to priority queue with priority: -1, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:02,093 DEBUG:Expanding node with bbvalue: 5.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:02,093 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 1.0, boundary = 2.0
2024-06-10 21:05:02,111 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!(A0||A1)', '!A0', '!A1', '!A2'])
2024-06-10 21:05:02,111 DEBUG:Dataset does not entail A0&&!A0, kernel = empty
2024-06-10 21:05:02,111 DEBUG:Updated boundary: 1.0
2024-06-10 21:05:02,112 DEBUG:Expanding node with bbvalue: 6.0, edge: A1&&A0
2024-06-10 21:05:02,112 DEBUG:Checking pruning: node bbvalue = 6.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:02,134 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:02,135 DEBUG:Finding kernel for 4 elements of dataset = ['!(A0||A1)', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,135 INFO:4 ELEMENTS: ['!(A0||A1)', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,135 DEBUG:B_PRIME with 1 elements: ['!(A0||A1)']
2024-06-10 21:05:02,153 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)'])
2024-06-10 21:05:02,154 DEBUG:B_PRIME with 2 elements: ['!(A0||A1)', '!A0']
2024-06-10 21:05:02,171 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '!A0'])
2024-06-10 21:05:02,172 DEBUG:B_PRIME with 3 elements: ['!(A0||A1)', '!A0', '!A2']
2024-06-10 21:05:02,189 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '!A0', '!A2'])
2024-06-10 21:05:02,189 DEBUG:B_PRIME with 4 elements: ['!(A0||A1)', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,207 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:02,207 INFO:Checking line: !(A0||A1) with index: 0
2024-06-10 21:05:02,207 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:05:02,207 DEBUG:B with 3 elements = ['!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,224 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:02,224 INFO:SHRINK: CN = TRUE, removing: !(A0||A1)
2024-06-10 21:05:02,224 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,224 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:02,224 DEBUG:Removing element: !A0
2024-06-10 21:05:02,224 DEBUG:B with 2 elements = ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,242 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:02,242 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:02,242 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,242 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:02,242 DEBUG:Removing element: !A2
2024-06-10 21:05:02,242 DEBUG:B with 1 elements = ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,259 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:02,259 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:02,259 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,259 INFO:Checking line: (A1||A1)&&(A2&&A0) with index: 0
2024-06-10 21:05:02,259 DEBUG:Removing element: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:02,259 DEBUG:B with 0 elements = []
2024-06-10 21:05:02,277 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:02,277 INFO:Kernel output with 1 elements: ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,277 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:02,277 DEBUG:Calculating bbvalue: current_node bbvalue = 6.0, element = (A1||A1)&&(A2&&A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 7.0
2024-06-10 21:05:02,277 DEBUG:Adding node to priority queue with priority: -1, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:02,278 DEBUG:Expanding node with bbvalue: 7.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:02,278 DEBUG:Checking pruning: node bbvalue = 7.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:02,279 DEBUG:Pruning node with bbvalue: 7.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:02,279 DEBUG:Expanding node with bbvalue: 4.0, edge: !A1&&(A2||A0)
2024-06-10 21:05:02,279 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:02,296 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:02,296 DEBUG:Finding kernel for 6 elements of dataset = ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,296 INFO:6 ELEMENTS: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,296 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:02,314 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:02,314 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2']
2024-06-10 21:05:02,331 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:05:02,331 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:02,349 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:02,349 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:05:02,366 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:05:02,366 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:02,384 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0'])
2024-06-10 21:05:02,384 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:02,384 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:02,384 DEBUG:B with 4 elements = ['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:02,402 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0'])
2024-06-10 21:05:02,402 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:05:02,402 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:02,402 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:02,402 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:02,402 DEBUG:B with 3 elements = ['!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:02,419 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', 'A1&&A0'])
2024-06-10 21:05:02,419 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:02,419 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:02,419 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:02,419 DEBUG:Removing element: !A0
2024-06-10 21:05:02,419 DEBUG:B with 2 elements = ['!A2', 'A1&&A0']
2024-06-10 21:05:02,436 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', 'A1&&A0'])
2024-06-10 21:05:02,436 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:02,436 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', 'A1&&A0']
2024-06-10 21:05:02,436 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:02,436 DEBUG:Removing element: !A2
2024-06-10 21:05:02,436 DEBUG:B with 1 elements = ['A1&&A0']
2024-06-10 21:05:02,454 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1&&A0'])
2024-06-10 21:05:02,454 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:02,454 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['A1&&A0']
2024-06-10 21:05:02,454 INFO:Checking line: A1&&A0 with index: 0
2024-06-10 21:05:02,454 DEBUG:Removing element: A1&&A0
2024-06-10 21:05:02,454 DEBUG:B with 0 elements = []
2024-06-10 21:05:02,471 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:02,471 INFO:Kernel output with 1 elements: ['A1&&A0']
2024-06-10 21:05:02,471 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:02,471 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = A1&&A0, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:02,471 DEBUG:Adding node to priority queue with priority: 0, edge: A1&&A0
2024-06-10 21:05:02,473 DEBUG:Expanding node with bbvalue: 5.0, edge: !(!A1&&A2)
2024-06-10 21:05:02,473 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:02,473 DEBUG:Pruning node with bbvalue: 5.0, edge: !(!A1&&A2)
2024-06-10 21:05:02,473 DEBUG:Expanding node with bbvalue: 4.0, edge: !(A0||A1)
2024-06-10 21:05:02,473 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:02,490 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:02,490 DEBUG:Finding kernel for 6 elements of dataset = ['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,490 INFO:6 ELEMENTS: ['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,490 DEBUG:B_PRIME with 1 elements: ['(A1||(A1&&A0))||A2']
2024-06-10 21:05:02,508 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2'])
2024-06-10 21:05:02,508 DEBUG:B_PRIME with 2 elements: ['(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:02,530 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:02,530 DEBUG:B_PRIME with 3 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:05:02,548 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:05:02,548 DEBUG:B_PRIME with 4 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:02,565 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:02,565 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:02,565 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:02,565 DEBUG:B with 3 elements = ['!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:02,583 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:02,583 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:02,583 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:02,583 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:02,583 DEBUG:Removing element: !A0
2024-06-10 21:05:02,583 DEBUG:B with 2 elements = ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:02,601 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:02,601 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:02,601 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:02,601 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:02,601 DEBUG:Removing element: !A2
2024-06-10 21:05:02,601 DEBUG:B with 1 elements = ['!A1&&(A2||A0)']
2024-06-10 21:05:02,618 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A1&&(A2||A0)'])
2024-06-10 21:05:02,618 INFO:Checking line: !A1&&(A2||A0) with index: 1
2024-06-10 21:05:02,618 DEBUG:Removing element: !A1&&(A2||A0)
2024-06-10 21:05:02,618 DEBUG:B with 1 elements = ['!A2']
2024-06-10 21:05:02,636 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A2'])
2024-06-10 21:05:02,636 INFO:Kernel output with 2 elements: ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:02,636 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:02,636 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:02,636 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = !A1&&(A2||A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:02,636 DEBUG:Adding node to priority queue with priority: -1, edge: !A2
2024-06-10 21:05:02,636 DEBUG:Adding node to priority queue with priority: 0, edge: !A1&&(A2||A0)
2024-06-10 21:05:02,637 DEBUG:Expanding node with bbvalue: 5.0, edge: !A2
2024-06-10 21:05:02,637 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:02,637 DEBUG:Pruning node with bbvalue: 5.0, edge: !A2
2024-06-10 21:05:02,637 DEBUG:Expanding node with bbvalue: 5.0, edge: A1&&A0
2024-06-10 21:05:02,637 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:02,654 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:02,654 DEBUG:Finding kernel for 5 elements of dataset = ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,654 INFO:5 ELEMENTS: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,654 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:02,672 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:02,672 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2']
2024-06-10 21:05:02,689 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:05:02,689 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:02,707 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:02,707 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:05:02,724 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:05:02,724 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,742 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:02,743 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:02,743 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:02,743 DEBUG:B with 4 elements = ['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,770 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:02,770 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:05:02,770 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,770 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:02,770 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:02,770 DEBUG:B with 3 elements = ['!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,797 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:02,797 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:02,797 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,797 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:02,797 DEBUG:Removing element: !A0
2024-06-10 21:05:02,797 DEBUG:B with 2 elements = ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,814 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:02,814 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:02,814 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,814 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:02,814 DEBUG:Removing element: !A2
2024-06-10 21:05:02,815 DEBUG:B with 1 elements = ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,832 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:02,832 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:02,832 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,832 INFO:Checking line: (A1||A1)&&(A2&&A0) with index: 0
2024-06-10 21:05:02,832 DEBUG:Removing element: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:02,832 DEBUG:B with 0 elements = []
2024-06-10 21:05:02,849 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:02,850 INFO:Kernel output with 1 elements: ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,850 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:02,850 DEBUG:Calculating bbvalue: current_node bbvalue = 5.0, element = (A1||A1)&&(A2&&A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 6.0
2024-06-10 21:05:02,850 DEBUG:Adding node to priority queue with priority: -1, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:02,851 DEBUG:Expanding node with bbvalue: 6.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:02,851 DEBUG:Checking pruning: node bbvalue = 6.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:02,851 DEBUG:Pruning node with bbvalue: 6.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:02,851 DEBUG:Expanding node with bbvalue: 5.0, edge: !A1&&(A2||A0)
2024-06-10 21:05:02,851 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:02,869 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:02,869 DEBUG:Finding kernel for 5 elements of dataset = ['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,869 INFO:5 ELEMENTS: ['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:02,869 DEBUG:B_PRIME with 1 elements: ['(A1||(A1&&A0))||A2']
2024-06-10 21:05:02,886 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2'])
2024-06-10 21:05:02,886 DEBUG:B_PRIME with 2 elements: ['(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:02,903 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:02,904 DEBUG:B_PRIME with 3 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:05:02,921 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:05:02,921 DEBUG:B_PRIME with 4 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:02,942 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0'])
2024-06-10 21:05:02,943 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:02,943 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:02,943 DEBUG:B with 3 elements = ['!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:02,960 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', 'A1&&A0'])
2024-06-10 21:05:02,960 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:02,960 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:02,960 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:02,960 DEBUG:Removing element: !A0
2024-06-10 21:05:02,960 DEBUG:B with 2 elements = ['!A2', 'A1&&A0']
2024-06-10 21:05:02,978 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', 'A1&&A0'])
2024-06-10 21:05:02,978 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:02,978 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', 'A1&&A0']
2024-06-10 21:05:02,978 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:02,978 DEBUG:Removing element: !A2
2024-06-10 21:05:02,978 DEBUG:B with 1 elements = ['A1&&A0']
2024-06-10 21:05:02,995 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1&&A0'])
2024-06-10 21:05:02,995 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:02,995 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['A1&&A0']
2024-06-10 21:05:02,995 INFO:Checking line: A1&&A0 with index: 0
2024-06-10 21:05:02,995 DEBUG:Removing element: A1&&A0
2024-06-10 21:05:02,995 DEBUG:B with 0 elements = []
2024-06-10 21:05:03,013 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:03,013 INFO:Kernel output with 1 elements: ['A1&&A0']
2024-06-10 21:05:03,013 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:03,013 DEBUG:Calculating bbvalue: current_node bbvalue = 5.0, element = A1&&A0, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 6.0
2024-06-10 21:05:03,013 DEBUG:Adding node to priority queue with priority: 0, edge: A1&&A0
2024-06-10 21:05:03,014 DEBUG:Expanding node with bbvalue: 3.0, edge: (A1||(A1&&A0))||A2
2024-06-10 21:05:03,014 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:03,032 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:03,032 DEBUG:Finding kernel for 7 elements of dataset = ['!(!A1&&A2)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,032 INFO:7 ELEMENTS: ['!(!A1&&A2)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,032 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:03,049 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:03,050 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '!A0']
2024-06-10 21:05:03,067 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0'])
2024-06-10 21:05:03,067 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '!A0', '!A1']
2024-06-10 21:05:03,084 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0', '!A1'])
2024-06-10 21:05:03,084 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '!A0', '!A1', '!A2']
2024-06-10 21:05:03,101 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0', '!A1', '!A2'])
2024-06-10 21:05:03,101 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:03,119 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:03,119 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:03,119 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:03,119 DEBUG:B with 4 elements = ['!A0', '!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:03,136 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:03,136 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:05:03,136 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['!A0', '!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:03,136 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:03,136 DEBUG:Removing element: !A0
2024-06-10 21:05:03,136 DEBUG:B with 3 elements = ['!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:03,147 DEBUG:Sending global request "keepalive@lag.net"
2024-06-10 21:05:03,154 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:03,154 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:03,154 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:03,154 INFO:Checking line: !A1 with index: 0
2024-06-10 21:05:03,155 DEBUG:Removing element: !A1
2024-06-10 21:05:03,155 DEBUG:B with 2 elements = ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:03,172 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:03,172 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:05:03,172 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:03,172 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:03,172 DEBUG:Removing element: !A2
2024-06-10 21:05:03,172 DEBUG:B with 1 elements = ['!A1&&(A2||A0)']
2024-06-10 21:05:03,190 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A1&&(A2||A0)'])
2024-06-10 21:05:03,190 INFO:Checking line: !A1&&(A2||A0) with index: 1
2024-06-10 21:05:03,190 DEBUG:Removing element: !A1&&(A2||A0)
2024-06-10 21:05:03,190 DEBUG:B with 1 elements = ['!A2']
2024-06-10 21:05:03,207 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A2'])
2024-06-10 21:05:03,207 INFO:Kernel output with 2 elements: ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:03,207 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:03,207 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:05:03,207 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = !A1&&(A2||A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:05:03,207 DEBUG:Adding node to priority queue with priority: -1, edge: !A2
2024-06-10 21:05:03,207 DEBUG:Adding node to priority queue with priority: 0, edge: !A1&&(A2||A0)
2024-06-10 21:05:03,209 DEBUG:Expanding node with bbvalue: 4.0, edge: !A2
2024-06-10 21:05:03,209 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:03,209 DEBUG:Pruning node with bbvalue: 4.0, edge: !A2
2024-06-10 21:05:03,209 DEBUG:Expanding node with bbvalue: 4.0, edge: !(!A1&&A2)
2024-06-10 21:05:03,209 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:03,209 DEBUG:Pruning node with bbvalue: 4.0, edge: !(!A1&&A2)
2024-06-10 21:05:03,209 DEBUG:Expanding node with bbvalue: 6.0, edge: A1&&A0
2024-06-10 21:05:03,209 DEBUG:Checking pruning: node bbvalue = 6.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:03,226 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:03,226 DEBUG:Finding kernel for 4 elements of dataset = ['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,226 INFO:4 ELEMENTS: ['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,226 DEBUG:B_PRIME with 1 elements: ['(A1||(A1&&A0))||A2']
2024-06-10 21:05:03,243 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2'])
2024-06-10 21:05:03,244 DEBUG:B_PRIME with 2 elements: ['(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:03,260 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:03,260 DEBUG:B_PRIME with 3 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:05:03,277 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:05:03,278 DEBUG:B_PRIME with 4 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,295 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:03,295 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:03,295 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:03,295 DEBUG:B with 3 elements = ['!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,313 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:03,313 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:03,313 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,313 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:03,313 DEBUG:Removing element: !A0
2024-06-10 21:05:03,313 DEBUG:B with 2 elements = ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,339 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:03,339 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:03,339 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,339 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:03,339 DEBUG:Removing element: !A2
2024-06-10 21:05:03,339 DEBUG:B with 1 elements = ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,363 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:03,363 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:03,363 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,363 INFO:Checking line: (A1||A1)&&(A2&&A0) with index: 0
2024-06-10 21:05:03,363 DEBUG:Removing element: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:03,363 DEBUG:B with 0 elements = []
2024-06-10 21:05:03,381 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:03,381 INFO:Kernel output with 1 elements: ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,381 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:03,381 DEBUG:Calculating bbvalue: current_node bbvalue = 6.0, element = (A1||A1)&&(A2&&A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 7.0
2024-06-10 21:05:03,381 DEBUG:Adding node to priority queue with priority: -1, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:03,382 DEBUG:Expanding node with bbvalue: 7.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:03,382 DEBUG:Checking pruning: node bbvalue = 7.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:03,382 DEBUG:Pruning node with bbvalue: 7.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:03,382 DEBUG:Expanding node with bbvalue: 6.0, edge: A1&&A0
2024-06-10 21:05:03,382 DEBUG:Checking pruning: node bbvalue = 6.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:03,382 DEBUG:Pruning node with bbvalue: 6.0, edge: A1&&A0
2024-06-10 21:05:03,382 DEBUG:Expanding node with bbvalue: 2.0, edge: !(A0||A1)
2024-06-10 21:05:03,382 DEBUG:Checking pruning: node bbvalue = 2.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:03,401 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:03,401 DEBUG:Finding kernel for 8 elements of dataset = ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,401 INFO:8 ELEMENTS: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,401 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:03,418 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:03,419 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2']
2024-06-10 21:05:03,437 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:05:03,437 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:03,456 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:03,456 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A1']
2024-06-10 21:05:03,489 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A1'])
2024-06-10 21:05:03,489 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:03,489 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:03,489 DEBUG:B with 3 elements = ['(A1||(A1&&A0))||A2', '!A0', '!A1']
2024-06-10 21:05:03,509 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A1'])
2024-06-10 21:05:03,509 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 1
2024-06-10 21:05:03,509 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:03,509 DEBUG:B with 3 elements = ['!(!A1&&A2)', '!A0', '!A1']
2024-06-10 21:05:03,528 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0', '!A1'])
2024-06-10 21:05:03,528 INFO:Checking line: !A0 with index: 2
2024-06-10 21:05:03,528 DEBUG:Removing element: !A0
2024-06-10 21:05:03,528 DEBUG:B with 3 elements = ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A1']
2024-06-10 21:05:03,547 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A1'])
2024-06-10 21:05:03,547 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:03,547 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A1']
2024-06-10 21:05:03,547 INFO:Checking line: !A1 with index: 2
2024-06-10 21:05:03,547 DEBUG:Removing element: !A1
2024-06-10 21:05:03,548 DEBUG:B with 2 elements = ['!(!A1&&A2)', '(A1||(A1&&A0))||A2']
2024-06-10 21:05:03,567 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:05:03,567 INFO:Kernel output with 3 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A1']
2024-06-10 21:05:03,567 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:03,567 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = !(!A1&&A2), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-06-10 21:05:03,567 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = (A1||(A1&&A0))||A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-06-10 21:05:03,567 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-06-10 21:05:03,567 DEBUG:Adding node to priority queue with priority: 0, edge: !(!A1&&A2)
2024-06-10 21:05:03,567 DEBUG:Adding node to priority queue with priority: 0, edge: (A1||(A1&&A0))||A2
2024-06-10 21:05:03,567 DEBUG:Adding node to priority queue with priority: 0, edge: !A1
2024-06-10 21:05:03,569 DEBUG:Expanding node with bbvalue: 2.0, edge: !A1
2024-06-10 21:05:03,569 DEBUG:Checking pruning: node bbvalue = 2.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:03,588 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:03,588 DEBUG:Finding kernel for 8 elements of dataset = ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,588 INFO:8 ELEMENTS: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,588 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:03,608 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:03,608 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)']
2024-06-10 21:05:03,627 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)'])
2024-06-10 21:05:03,627 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2']
2024-06-10 21:05:03,647 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:05:03,648 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:03,666 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:03,666 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:05:03,684 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:05:03,684 DEBUG:B_PRIME with 6 elements: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:03,701 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:03,701 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:03,701 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:03,702 DEBUG:B with 5 elements = ['A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:03,719 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:03,719 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:05:03,719 DEBUG:CONTINUE SHRINKING WITH 5 elements : ['A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:03,719 INFO:Checking line: A1||((A2&&A0)&&A1) with index: 0
2024-06-10 21:05:03,719 DEBUG:Removing element: A1||((A2&&A0)&&A1)
2024-06-10 21:05:03,719 DEBUG:B with 4 elements = ['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:03,737 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:03,737 INFO:SHRINK: CN = TRUE, removing: A1||((A2&&A0)&&A1)
2024-06-10 21:05:03,737 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:03,737 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:03,737 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:03,737 DEBUG:B with 3 elements = ['!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:03,754 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:03,755 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:03,755 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:03,755 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:03,755 DEBUG:Removing element: !A0
2024-06-10 21:05:03,755 DEBUG:B with 2 elements = ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:03,772 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:03,772 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:03,772 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:03,772 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:03,772 DEBUG:Removing element: !A2
2024-06-10 21:05:03,772 DEBUG:B with 1 elements = ['!A1&&(A2||A0)']
2024-06-10 21:05:03,789 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A1&&(A2||A0)'])
2024-06-10 21:05:03,789 INFO:Checking line: !A1&&(A2||A0) with index: 1
2024-06-10 21:05:03,789 DEBUG:Removing element: !A1&&(A2||A0)
2024-06-10 21:05:03,790 DEBUG:B with 1 elements = ['!A2']
2024-06-10 21:05:03,806 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A2'])
2024-06-10 21:05:03,807 INFO:Kernel output with 2 elements: ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:03,807 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:03,807 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-06-10 21:05:03,807 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = !A1&&(A2||A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-06-10 21:05:03,807 DEBUG:Adding node to priority queue with priority: -1, edge: !A2
2024-06-10 21:05:03,807 DEBUG:Adding node to priority queue with priority: 0, edge: !A1&&(A2||A0)
2024-06-10 21:05:03,808 DEBUG:Expanding node with bbvalue: 3.0, edge: !A2
2024-06-10 21:05:03,808 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:03,808 DEBUG:Pruning node with bbvalue: 3.0, edge: !A2
2024-06-10 21:05:03,808 DEBUG:Expanding node with bbvalue: 3.0, edge: !(!A1&&A2)
2024-06-10 21:05:03,808 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:03,826 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:03,826 DEBUG:Finding kernel for 7 elements of dataset = ['(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,826 INFO:7 ELEMENTS: ['(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,826 DEBUG:B_PRIME with 1 elements: ['(A1||(A1&&A0))||A2']
2024-06-10 21:05:03,843 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2'])
2024-06-10 21:05:03,843 DEBUG:B_PRIME with 2 elements: ['(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:03,865 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:03,865 DEBUG:B_PRIME with 3 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A1']
2024-06-10 21:05:03,882 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A1'])
2024-06-10 21:05:03,882 DEBUG:B_PRIME with 4 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2']
2024-06-10 21:05:03,900 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2'])
2024-06-10 21:05:03,900 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:03,900 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:03,900 DEBUG:B with 3 elements = ['!A0', '!A1', '!A2']
2024-06-10 21:05:03,917 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0', '!A1', '!A2'])
2024-06-10 21:05:03,917 INFO:Checking line: !A0 with index: 1
2024-06-10 21:05:03,917 DEBUG:Removing element: !A0
2024-06-10 21:05:03,917 DEBUG:B with 3 elements = ['(A1||(A1&&A0))||A2', '!A1', '!A2']
2024-06-10 21:05:03,935 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A1', '!A2'])
2024-06-10 21:05:03,935 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:03,935 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['(A1||(A1&&A0))||A2', '!A1', '!A2']
2024-06-10 21:05:03,935 INFO:Checking line: !A1 with index: 1
2024-06-10 21:05:03,935 DEBUG:Removing element: !A1
2024-06-10 21:05:03,935 DEBUG:B with 2 elements = ['(A1||(A1&&A0))||A2', '!A2']
2024-06-10 21:05:03,952 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A2'])
2024-06-10 21:05:03,953 INFO:Checking line: !A2 with index: 2
2024-06-10 21:05:03,953 DEBUG:Removing element: !A2
2024-06-10 21:05:03,953 DEBUG:B with 2 elements = ['(A1||(A1&&A0))||A2', '!A1']
2024-06-10 21:05:03,970 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A1'])
2024-06-10 21:05:03,970 INFO:Kernel output with 3 elements: ['(A1||(A1&&A0))||A2', '!A1', '!A2']
2024-06-10 21:05:03,970 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:03,970 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = (A1||(A1&&A0))||A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:05:03,970 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:05:03,970 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:05:03,970 DEBUG:Adding node to priority queue with priority: -1, edge: !A2
2024-06-10 21:05:03,970 DEBUG:Adding node to priority queue with priority: 0, edge: (A1||(A1&&A0))||A2
2024-06-10 21:05:03,970 DEBUG:Adding node to priority queue with priority: 0, edge: !A1
2024-06-10 21:05:03,972 DEBUG:Expanding node with bbvalue: 4.0, edge: !A2
2024-06-10 21:05:03,972 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:03,972 DEBUG:Pruning node with bbvalue: 4.0, edge: !A2
2024-06-10 21:05:03,972 DEBUG:Expanding node with bbvalue: 3.0, edge: !A1&&(A2||A0)
2024-06-10 21:05:03,972 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:03,989 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:03,990 DEBUG:Finding kernel for 7 elements of dataset = ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,990 INFO:7 ELEMENTS: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:03,990 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:04,007 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:04,007 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)']
2024-06-10 21:05:04,024 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)'])
2024-06-10 21:05:04,025 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2']
2024-06-10 21:05:04,042 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:05:04,043 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:04,060 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:04,060 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:05:04,078 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:05:04,078 DEBUG:B_PRIME with 6 elements: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:04,095 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0'])
2024-06-10 21:05:04,095 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:04,095 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:04,095 DEBUG:B with 5 elements = ['A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:04,113 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0'])
2024-06-10 21:05:04,113 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:05:04,113 DEBUG:CONTINUE SHRINKING WITH 5 elements : ['A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:04,113 INFO:Checking line: A1||((A2&&A0)&&A1) with index: 0
2024-06-10 21:05:04,113 DEBUG:Removing element: A1||((A2&&A0)&&A1)
2024-06-10 21:05:04,113 DEBUG:B with 4 elements = ['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:04,130 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0'])
2024-06-10 21:05:04,130 INFO:SHRINK: CN = TRUE, removing: A1||((A2&&A0)&&A1)
2024-06-10 21:05:04,130 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:04,130 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:04,130 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:04,130 DEBUG:B with 3 elements = ['!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:04,147 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', 'A1&&A0'])
2024-06-10 21:05:04,147 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:04,147 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:04,148 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:04,148 DEBUG:Removing element: !A0
2024-06-10 21:05:04,148 DEBUG:B with 2 elements = ['!A2', 'A1&&A0']
2024-06-10 21:05:04,165 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', 'A1&&A0'])
2024-06-10 21:05:04,165 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:04,165 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', 'A1&&A0']
2024-06-10 21:05:04,165 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:04,165 DEBUG:Removing element: !A2
2024-06-10 21:05:04,165 DEBUG:B with 1 elements = ['A1&&A0']
2024-06-10 21:05:04,182 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1&&A0'])
2024-06-10 21:05:04,182 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:04,182 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['A1&&A0']
2024-06-10 21:05:04,182 INFO:Checking line: A1&&A0 with index: 0
2024-06-10 21:05:04,182 DEBUG:Removing element: A1&&A0
2024-06-10 21:05:04,182 DEBUG:B with 0 elements = []
2024-06-10 21:05:04,199 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:04,199 INFO:Kernel output with 1 elements: ['A1&&A0']
2024-06-10 21:05:04,199 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:04,199 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = A1&&A0, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:05:04,199 DEBUG:Adding node to priority queue with priority: 0, edge: A1&&A0
2024-06-10 21:05:04,201 DEBUG:Expanding node with bbvalue: 4.0, edge: A1&&A0
2024-06-10 21:05:04,201 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:04,201 DEBUG:Pruning node with bbvalue: 4.0, edge: A1&&A0
2024-06-10 21:05:04,201 DEBUG:Expanding node with bbvalue: 4.0, edge: !A1
2024-06-10 21:05:04,201 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:04,218 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:04,219 DEBUG:Finding kernel for 6 elements of dataset = ['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,219 INFO:6 ELEMENTS: ['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,219 DEBUG:B_PRIME with 1 elements: ['(A1||(A1&&A0))||A2']
2024-06-10 21:05:04,236 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2'])
2024-06-10 21:05:04,236 DEBUG:B_PRIME with 2 elements: ['(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:04,258 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:04,258 DEBUG:B_PRIME with 3 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:05:04,275 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:05:04,275 DEBUG:B_PRIME with 4 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:04,293 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:04,293 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:04,293 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:04,293 DEBUG:B with 3 elements = ['!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:04,311 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:04,311 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:04,311 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:04,311 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:04,311 DEBUG:Removing element: !A0
2024-06-10 21:05:04,311 DEBUG:B with 2 elements = ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:04,328 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:04,329 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:04,329 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:04,329 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:04,329 DEBUG:Removing element: !A2
2024-06-10 21:05:04,329 DEBUG:B with 1 elements = ['!A1&&(A2||A0)']
2024-06-10 21:05:04,346 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A1&&(A2||A0)'])
2024-06-10 21:05:04,346 INFO:Checking line: !A1&&(A2||A0) with index: 1
2024-06-10 21:05:04,346 DEBUG:Removing element: !A1&&(A2||A0)
2024-06-10 21:05:04,346 DEBUG:B with 1 elements = ['!A2']
2024-06-10 21:05:04,363 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A2'])
2024-06-10 21:05:04,363 INFO:Kernel output with 2 elements: ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:04,363 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:04,363 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:04,363 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = !A1&&(A2||A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:04,363 DEBUG:Adding node to priority queue with priority: -1, edge: !A2
2024-06-10 21:05:04,363 DEBUG:Adding node to priority queue with priority: 0, edge: !A1&&(A2||A0)
2024-06-10 21:05:04,365 DEBUG:Expanding node with bbvalue: 5.0, edge: !A2
2024-06-10 21:05:04,365 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:04,365 DEBUG:Pruning node with bbvalue: 5.0, edge: !A2
2024-06-10 21:05:04,365 DEBUG:Expanding node with bbvalue: 4.0, edge: A1&&A0
2024-06-10 21:05:04,365 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:04,383 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:04,383 DEBUG:Finding kernel for 6 elements of dataset = ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,383 INFO:6 ELEMENTS: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,383 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:04,400 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:04,401 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)']
2024-06-10 21:05:04,418 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)'])
2024-06-10 21:05:04,418 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2']
2024-06-10 21:05:04,436 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:05:04,436 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:04,453 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:04,453 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:05:04,471 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:05:04,471 DEBUG:B_PRIME with 6 elements: ['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,489 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', 'A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:04,489 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:04,489 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:04,489 DEBUG:B with 5 elements = ['A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,507 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:04,507 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:05:04,507 DEBUG:CONTINUE SHRINKING WITH 5 elements : ['A1||((A2&&A0)&&A1)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,507 INFO:Checking line: A1||((A2&&A0)&&A1) with index: 0
2024-06-10 21:05:04,508 DEBUG:Removing element: A1||((A2&&A0)&&A1)
2024-06-10 21:05:04,508 DEBUG:B with 4 elements = ['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,525 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:04,525 INFO:SHRINK: CN = TRUE, removing: A1||((A2&&A0)&&A1)
2024-06-10 21:05:04,525 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,525 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:04,525 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:04,525 DEBUG:B with 3 elements = ['!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,542 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:04,543 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:04,543 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,543 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:04,543 DEBUG:Removing element: !A0
2024-06-10 21:05:04,543 DEBUG:B with 2 elements = ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,560 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:04,560 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:04,560 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,560 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:04,560 DEBUG:Removing element: !A2
2024-06-10 21:05:04,560 DEBUG:B with 1 elements = ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,578 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:04,578 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:04,578 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,578 INFO:Checking line: (A1||A1)&&(A2&&A0) with index: 0
2024-06-10 21:05:04,578 DEBUG:Removing element: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:04,578 DEBUG:B with 0 elements = []
2024-06-10 21:05:04,595 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:04,595 INFO:Kernel output with 1 elements: ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,595 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:04,595 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = (A1||A1)&&(A2&&A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:04,595 DEBUG:Adding node to priority queue with priority: -1, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:04,597 DEBUG:Expanding node with bbvalue: 5.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:04,597 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:04,597 DEBUG:Pruning node with bbvalue: 5.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:04,597 DEBUG:Expanding node with bbvalue: 5.0, edge: !A1&&(A2||A0)
2024-06-10 21:05:04,597 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:04,615 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:04,615 DEBUG:Finding kernel for 5 elements of dataset = ['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,615 INFO:5 ELEMENTS: ['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,615 DEBUG:B_PRIME with 1 elements: ['(A1||(A1&&A0))||A2']
2024-06-10 21:05:04,632 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2'])
2024-06-10 21:05:04,632 DEBUG:B_PRIME with 2 elements: ['(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:04,654 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:04,654 DEBUG:B_PRIME with 3 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:05:04,671 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:05:04,671 DEBUG:B_PRIME with 4 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:04,689 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0'])
2024-06-10 21:05:04,689 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:04,689 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:04,689 DEBUG:B with 3 elements = ['!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:04,706 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', 'A1&&A0'])
2024-06-10 21:05:04,706 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:04,706 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:04,706 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:04,706 DEBUG:Removing element: !A0
2024-06-10 21:05:04,706 DEBUG:B with 2 elements = ['!A2', 'A1&&A0']
2024-06-10 21:05:04,723 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', 'A1&&A0'])
2024-06-10 21:05:04,723 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:04,723 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', 'A1&&A0']
2024-06-10 21:05:04,723 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:04,723 DEBUG:Removing element: !A2
2024-06-10 21:05:04,723 DEBUG:B with 1 elements = ['A1&&A0']
2024-06-10 21:05:04,741 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1&&A0'])
2024-06-10 21:05:04,741 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:04,741 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['A1&&A0']
2024-06-10 21:05:04,741 INFO:Checking line: A1&&A0 with index: 0
2024-06-10 21:05:04,741 DEBUG:Removing element: A1&&A0
2024-06-10 21:05:04,741 DEBUG:B with 0 elements = []
2024-06-10 21:05:04,758 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:04,758 INFO:Kernel output with 1 elements: ['A1&&A0']
2024-06-10 21:05:04,758 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:04,758 DEBUG:Calculating bbvalue: current_node bbvalue = 5.0, element = A1&&A0, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 6.0
2024-06-10 21:05:04,758 DEBUG:Adding node to priority queue with priority: 0, edge: A1&&A0
2024-06-10 21:05:04,760 DEBUG:Expanding node with bbvalue: 5.0, edge: !A1&&(A2||A0)
2024-06-10 21:05:04,760 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:04,760 DEBUG:Pruning node with bbvalue: 5.0, edge: !A1&&(A2||A0)
2024-06-10 21:05:04,760 DEBUG:Expanding node with bbvalue: 3.0, edge: !A1
2024-06-10 21:05:04,760 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:04,777 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:04,777 DEBUG:Finding kernel for 7 elements of dataset = ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,777 INFO:7 ELEMENTS: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,777 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:04,795 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:04,795 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2']
2024-06-10 21:05:04,813 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:05:04,813 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:04,831 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:04,831 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:05:04,848 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:05:04,848 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:04,873 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:04,873 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:04,873 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:04,873 DEBUG:B with 4 elements = ['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:04,891 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:04,891 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:05:04,891 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:04,892 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:04,892 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:04,892 DEBUG:B with 3 elements = ['!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:04,910 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:04,910 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:04,910 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:04,910 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:04,910 DEBUG:Removing element: !A0
2024-06-10 21:05:04,910 DEBUG:B with 2 elements = ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:04,927 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:04,927 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:04,927 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:04,927 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:04,928 DEBUG:Removing element: !A2
2024-06-10 21:05:04,928 DEBUG:B with 1 elements = ['!A1&&(A2||A0)']
2024-06-10 21:05:04,946 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A1&&(A2||A0)'])
2024-06-10 21:05:04,946 INFO:Checking line: !A1&&(A2||A0) with index: 1
2024-06-10 21:05:04,946 DEBUG:Removing element: !A1&&(A2||A0)
2024-06-10 21:05:04,946 DEBUG:B with 1 elements = ['!A2']
2024-06-10 21:05:04,963 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A2'])
2024-06-10 21:05:04,963 INFO:Kernel output with 2 elements: ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:04,963 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:04,963 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:05:04,963 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = !A1&&(A2||A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:05:04,963 DEBUG:Adding node to priority queue with priority: -1, edge: !A2
2024-06-10 21:05:04,963 DEBUG:Adding node to priority queue with priority: 0, edge: !A1&&(A2||A0)
2024-06-10 21:05:04,965 DEBUG:Expanding node with bbvalue: 4.0, edge: !A2
2024-06-10 21:05:04,965 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:04,965 DEBUG:Pruning node with bbvalue: 4.0, edge: !A2
2024-06-10 21:05:04,965 DEBUG:Expanding node with bbvalue: 3.0, edge: (A1||(A1&&A0))||A2
2024-06-10 21:05:04,965 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:04,983 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:04,983 DEBUG:Finding kernel for 7 elements of dataset = ['!(!A1&&A2)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,984 INFO:7 ELEMENTS: ['!(!A1&&A2)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:04,984 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:05,001 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:05,001 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '!A0']
2024-06-10 21:05:05,020 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0'])
2024-06-10 21:05:05,021 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '!A0', '!A1']
2024-06-10 21:05:05,038 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0', '!A1'])
2024-06-10 21:05:05,038 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '!A0', '!A1', '!A2']
2024-06-10 21:05:05,062 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0', '!A1', '!A2'])
2024-06-10 21:05:05,062 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:05,086 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:05,086 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:05,087 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:05,087 DEBUG:B with 4 elements = ['!A0', '!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:05,107 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:05,107 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:05:05,107 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['!A0', '!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:05,108 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:05,108 DEBUG:Removing element: !A0
2024-06-10 21:05:05,108 DEBUG:B with 3 elements = ['!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:05,125 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:05,125 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:05,125 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:05,126 INFO:Checking line: !A1 with index: 0
2024-06-10 21:05:05,126 DEBUG:Removing element: !A1
2024-06-10 21:05:05,126 DEBUG:B with 2 elements = ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:05,144 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:05,144 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:05:05,144 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:05,144 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:05,144 DEBUG:Removing element: !A2
2024-06-10 21:05:05,144 DEBUG:B with 1 elements = ['!A1&&(A2||A0)']
2024-06-10 21:05:05,163 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A1&&(A2||A0)'])
2024-06-10 21:05:05,163 INFO:Checking line: !A1&&(A2||A0) with index: 1
2024-06-10 21:05:05,163 DEBUG:Removing element: !A1&&(A2||A0)
2024-06-10 21:05:05,163 DEBUG:B with 1 elements = ['!A2']
2024-06-10 21:05:05,182 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A2'])
2024-06-10 21:05:05,182 INFO:Kernel output with 2 elements: ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:05,182 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:05,182 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:05:05,182 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = !A1&&(A2||A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:05:05,182 DEBUG:Adding node to priority queue with priority: -1, edge: !A2
2024-06-10 21:05:05,182 DEBUG:Adding node to priority queue with priority: 0, edge: !A1&&(A2||A0)
2024-06-10 21:05:05,184 DEBUG:Expanding node with bbvalue: 4.0, edge: !A2
2024-06-10 21:05:05,184 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:05,184 DEBUG:Pruning node with bbvalue: 4.0, edge: !A2
2024-06-10 21:05:05,184 DEBUG:Expanding node with bbvalue: 3.0, edge: (A1||(A1&&A0))||A2
2024-06-10 21:05:05,184 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:05,202 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:05,202 DEBUG:Finding kernel for 7 elements of dataset = ['!(A0||A1)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:05,203 INFO:7 ELEMENTS: ['!(A0||A1)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:05,203 DEBUG:B_PRIME with 1 elements: ['!(A0||A1)']
2024-06-10 21:05:05,221 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)'])
2024-06-10 21:05:05,221 DEBUG:B_PRIME with 2 elements: ['!(A0||A1)', '!A0']
2024-06-10 21:05:05,239 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '!A0'])
2024-06-10 21:05:05,239 DEBUG:B_PRIME with 3 elements: ['!(A0||A1)', '!A0', '!A1']
2024-06-10 21:05:05,257 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '!A0', '!A1'])
2024-06-10 21:05:05,257 DEBUG:B_PRIME with 4 elements: ['!(A0||A1)', '!A0', '!A1', '!A2']
2024-06-10 21:05:05,274 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '!A0', '!A1', '!A2'])
2024-06-10 21:05:05,274 DEBUG:B_PRIME with 5 elements: ['!(A0||A1)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:05,292 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '!A0', '!A1', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:05,292 INFO:Checking line: !(A0||A1) with index: 0
2024-06-10 21:05:05,292 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:05:05,292 DEBUG:B with 4 elements = ['!A0', '!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:05,309 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:05,310 INFO:SHRINK: CN = TRUE, removing: !(A0||A1)
2024-06-10 21:05:05,310 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['!A0', '!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:05,310 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:05,310 DEBUG:Removing element: !A0
2024-06-10 21:05:05,310 DEBUG:B with 3 elements = ['!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:05,327 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:05,328 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:05,328 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:05,328 INFO:Checking line: !A1 with index: 0
2024-06-10 21:05:05,328 DEBUG:Removing element: !A1
2024-06-10 21:05:05,328 DEBUG:B with 2 elements = ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:05,345 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:05,345 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:05:05,345 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:05,345 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:05,345 DEBUG:Removing element: !A2
2024-06-10 21:05:05,345 DEBUG:B with 1 elements = ['!A1&&(A2||A0)']
2024-06-10 21:05:05,363 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A1&&(A2||A0)'])
2024-06-10 21:05:05,363 INFO:Checking line: !A1&&(A2||A0) with index: 1
2024-06-10 21:05:05,363 DEBUG:Removing element: !A1&&(A2||A0)
2024-06-10 21:05:05,363 DEBUG:B with 1 elements = ['!A2']
2024-06-10 21:05:05,380 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A2'])
2024-06-10 21:05:05,380 INFO:Kernel output with 2 elements: ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:05,380 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:05,380 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:05:05,380 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = !A1&&(A2||A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:05:05,380 DEBUG:Adding node to priority queue with priority: -1, edge: !A2
2024-06-10 21:05:05,380 DEBUG:Adding node to priority queue with priority: 0, edge: !A1&&(A2||A0)
2024-06-10 21:05:05,382 DEBUG:Expanding node with bbvalue: 4.0, edge: !A2
2024-06-10 21:05:05,382 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:05,382 DEBUG:Pruning node with bbvalue: 4.0, edge: !A2
2024-06-10 21:05:05,382 DEBUG:Expanding node with bbvalue: 6.0, edge: A1&&A0
2024-06-10 21:05:05,382 DEBUG:Checking pruning: node bbvalue = 6.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:05,400 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:05,400 DEBUG:Finding kernel for 4 elements of dataset = ['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:05,400 INFO:4 ELEMENTS: ['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:05,400 DEBUG:B_PRIME with 1 elements: ['(A1||(A1&&A0))||A2']
2024-06-10 21:05:05,418 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2'])
2024-06-10 21:05:05,418 DEBUG:B_PRIME with 2 elements: ['(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:05,435 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:05,435 DEBUG:B_PRIME with 3 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:05:05,453 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:05:05,453 DEBUG:B_PRIME with 4 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:05,475 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:05,475 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:05,475 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:05,475 DEBUG:B with 3 elements = ['!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:05,492 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:05,492 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:05,492 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:05,492 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:05,492 DEBUG:Removing element: !A0
2024-06-10 21:05:05,492 DEBUG:B with 2 elements = ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:05,510 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:05,511 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:05,511 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:05,511 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:05,511 DEBUG:Removing element: !A2
2024-06-10 21:05:05,511 DEBUG:B with 1 elements = ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:05,528 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:05,528 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:05,528 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:05,528 INFO:Checking line: (A1||A1)&&(A2&&A0) with index: 0
2024-06-10 21:05:05,528 DEBUG:Removing element: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:05,528 DEBUG:B with 0 elements = []
2024-06-10 21:05:05,546 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:05,546 INFO:Kernel output with 1 elements: ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:05,546 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:05,546 DEBUG:Calculating bbvalue: current_node bbvalue = 6.0, element = (A1||A1)&&(A2&&A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 7.0
2024-06-10 21:05:05,547 DEBUG:Adding node to priority queue with priority: -1, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:05,548 DEBUG:Expanding node with bbvalue: 7.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:05,548 DEBUG:Checking pruning: node bbvalue = 7.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:05,548 DEBUG:Pruning node with bbvalue: 7.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:05,548 DEBUG:Expanding node with bbvalue: 4.0, edge: !A1&&(A2||A0)
2024-06-10 21:05:05,548 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:05,569 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:05,569 DEBUG:Finding kernel for 6 elements of dataset = ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:05,569 INFO:6 ELEMENTS: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:05,569 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:05,589 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:05,590 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2']
2024-06-10 21:05:05,608 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:05:05,609 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:05,648 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:05,648 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:05:05,689 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:05:05,689 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:05,718 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0'])
2024-06-10 21:05:05,718 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:05,718 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:05,718 DEBUG:B with 4 elements = ['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:05,738 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0'])
2024-06-10 21:05:05,739 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:05:05,739 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:05,739 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:05,739 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:05,739 DEBUG:B with 3 elements = ['!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:05,771 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', 'A1&&A0'])
2024-06-10 21:05:05,772 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:05,772 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:05,772 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:05,772 DEBUG:Removing element: !A0
2024-06-10 21:05:05,772 DEBUG:B with 2 elements = ['!A2', 'A1&&A0']
2024-06-10 21:05:05,792 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', 'A1&&A0'])
2024-06-10 21:05:05,792 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:05,792 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', 'A1&&A0']
2024-06-10 21:05:05,792 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:05,792 DEBUG:Removing element: !A2
2024-06-10 21:05:05,792 DEBUG:B with 1 elements = ['A1&&A0']
2024-06-10 21:05:05,812 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1&&A0'])
2024-06-10 21:05:05,812 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:05,812 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['A1&&A0']
2024-06-10 21:05:05,812 INFO:Checking line: A1&&A0 with index: 0
2024-06-10 21:05:05,812 DEBUG:Removing element: A1&&A0
2024-06-10 21:05:05,813 DEBUG:B with 0 elements = []
2024-06-10 21:05:05,832 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:05,832 INFO:Kernel output with 1 elements: ['A1&&A0']
2024-06-10 21:05:05,832 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:05,832 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = A1&&A0, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:05,832 DEBUG:Adding node to priority queue with priority: 0, edge: A1&&A0
2024-06-10 21:05:05,835 DEBUG:Expanding node with bbvalue: 4.0, edge: !A1&&(A2||A0)
2024-06-10 21:05:05,835 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:05,853 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '!A0', '!A1', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:05,853 DEBUG:Finding kernel for 6 elements of dataset = ['!(A0||A1)', '!A0', '!A1', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:05,853 INFO:6 ELEMENTS: ['!(A0||A1)', '!A0', '!A1', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:05,853 DEBUG:B_PRIME with 1 elements: ['!(A0||A1)']
2024-06-10 21:05:05,872 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)'])
2024-06-10 21:05:05,872 DEBUG:B_PRIME with 2 elements: ['!(A0||A1)', '!A0']
2024-06-10 21:05:05,891 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '!A0'])
2024-06-10 21:05:05,891 DEBUG:B_PRIME with 3 elements: ['!(A0||A1)', '!A0', '!A1']
2024-06-10 21:05:05,910 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '!A0', '!A1'])
2024-06-10 21:05:05,910 DEBUG:B_PRIME with 4 elements: ['!(A0||A1)', '!A0', '!A1', '!A2']
2024-06-10 21:05:05,928 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '!A0', '!A1', '!A2'])
2024-06-10 21:05:05,928 DEBUG:B_PRIME with 5 elements: ['!(A0||A1)', '!A0', '!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:05,952 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '!A0', '!A1', '!A2', 'A1&&A0'])
2024-06-10 21:05:05,952 INFO:Checking line: !(A0||A1) with index: 0
2024-06-10 21:05:05,952 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:05:05,952 DEBUG:B with 4 elements = ['!A0', '!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:06,021 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', 'A1&&A0'])
2024-06-10 21:05:06,021 INFO:SHRINK: CN = TRUE, removing: !(A0||A1)
2024-06-10 21:05:06,021 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['!A0', '!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:06,021 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:06,021 DEBUG:Removing element: !A0
2024-06-10 21:05:06,021 DEBUG:B with 3 elements = ['!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:06,055 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '!A2', 'A1&&A0'])
2024-06-10 21:05:06,055 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:06,055 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:06,055 INFO:Checking line: !A1 with index: 0
2024-06-10 21:05:06,055 DEBUG:Removing element: !A1
2024-06-10 21:05:06,055 DEBUG:B with 2 elements = ['!A2', 'A1&&A0']
2024-06-10 21:05:06,080 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', 'A1&&A0'])
2024-06-10 21:05:06,082 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:05:06,082 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', 'A1&&A0']
2024-06-10 21:05:06,082 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:06,082 DEBUG:Removing element: !A2
2024-06-10 21:05:06,082 DEBUG:B with 1 elements = ['A1&&A0']
2024-06-10 21:05:06,114 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1&&A0'])
2024-06-10 21:05:06,114 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:06,114 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['A1&&A0']
2024-06-10 21:05:06,114 INFO:Checking line: A1&&A0 with index: 0
2024-06-10 21:05:06,114 DEBUG:Removing element: A1&&A0
2024-06-10 21:05:06,114 DEBUG:B with 0 elements = []
2024-06-10 21:05:06,138 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:06,139 INFO:Kernel output with 1 elements: ['A1&&A0']
2024-06-10 21:05:06,139 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:06,139 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = A1&&A0, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:06,139 DEBUG:Adding node to priority queue with priority: 0, edge: A1&&A0
2024-06-10 21:05:06,141 DEBUG:Expanding node with bbvalue: 4.0, edge: !A1&&(A2||A0)
2024-06-10 21:05:06,141 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:06,163 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!A0', '!A1', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:06,163 DEBUG:Finding kernel for 6 elements of dataset = ['!(!A1&&A2)', '!A0', '!A1', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,163 INFO:6 ELEMENTS: ['!(!A1&&A2)', '!A0', '!A1', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,164 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:06,185 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:06,185 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '!A0']
2024-06-10 21:05:06,206 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0'])
2024-06-10 21:05:06,206 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '!A0', '!A1']
2024-06-10 21:05:06,228 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0', '!A1'])
2024-06-10 21:05:06,228 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '!A0', '!A1', '!A2']
2024-06-10 21:05:06,249 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0', '!A1', '!A2'])
2024-06-10 21:05:06,249 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', '!A0', '!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:06,268 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!A0', '!A1', '!A2', 'A1&&A0'])
2024-06-10 21:05:06,268 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:06,268 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:06,268 DEBUG:B with 4 elements = ['!A0', '!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:06,288 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', 'A1&&A0'])
2024-06-10 21:05:06,288 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:05:06,288 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['!A0', '!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:06,288 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:06,288 DEBUG:Removing element: !A0
2024-06-10 21:05:06,288 DEBUG:B with 3 elements = ['!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:06,307 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '!A2', 'A1&&A0'])
2024-06-10 21:05:06,307 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:06,307 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:06,307 INFO:Checking line: !A1 with index: 0
2024-06-10 21:05:06,307 DEBUG:Removing element: !A1
2024-06-10 21:05:06,307 DEBUG:B with 2 elements = ['!A2', 'A1&&A0']
2024-06-10 21:05:06,327 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', 'A1&&A0'])
2024-06-10 21:05:06,327 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:05:06,327 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', 'A1&&A0']
2024-06-10 21:05:06,327 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:06,327 DEBUG:Removing element: !A2
2024-06-10 21:05:06,327 DEBUG:B with 1 elements = ['A1&&A0']
2024-06-10 21:05:06,344 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1&&A0'])
2024-06-10 21:05:06,344 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:06,344 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['A1&&A0']
2024-06-10 21:05:06,344 INFO:Checking line: A1&&A0 with index: 0
2024-06-10 21:05:06,344 DEBUG:Removing element: A1&&A0
2024-06-10 21:05:06,344 DEBUG:B with 0 elements = []
2024-06-10 21:05:06,363 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:06,363 INFO:Kernel output with 1 elements: ['A1&&A0']
2024-06-10 21:05:06,363 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:06,363 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = A1&&A0, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:06,363 DEBUG:Adding node to priority queue with priority: 0, edge: A1&&A0
2024-06-10 21:05:06,365 DEBUG:Expanding node with bbvalue: 5.0, edge: A1&&A0
2024-06-10 21:05:06,365 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:06,383 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:06,384 DEBUG:Finding kernel for 5 elements of dataset = ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,384 INFO:5 ELEMENTS: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,384 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:06,406 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:06,407 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2']
2024-06-10 21:05:06,429 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2'])
2024-06-10 21:05:06,429 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:06,449 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:06,449 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:05:06,466 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:05:06,466 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,484 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:06,484 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:06,484 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:06,484 DEBUG:B with 4 elements = ['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,502 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:06,502 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:05:06,502 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,502 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:06,502 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:06,502 DEBUG:B with 3 elements = ['!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,520 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:06,520 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:06,520 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,520 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:06,520 DEBUG:Removing element: !A0
2024-06-10 21:05:06,520 DEBUG:B with 2 elements = ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,537 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:06,537 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:06,537 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,537 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:06,537 DEBUG:Removing element: !A2
2024-06-10 21:05:06,537 DEBUG:B with 1 elements = ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,555 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:06,555 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:06,555 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,555 INFO:Checking line: (A1||A1)&&(A2&&A0) with index: 0
2024-06-10 21:05:06,555 DEBUG:Removing element: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:06,555 DEBUG:B with 0 elements = []
2024-06-10 21:05:06,572 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:06,572 INFO:Kernel output with 1 elements: ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,572 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:06,572 DEBUG:Calculating bbvalue: current_node bbvalue = 5.0, element = (A1||A1)&&(A2&&A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 6.0
2024-06-10 21:05:06,572 DEBUG:Adding node to priority queue with priority: -1, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:06,574 DEBUG:Expanding node with bbvalue: 6.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:06,574 DEBUG:Checking pruning: node bbvalue = 6.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:06,574 DEBUG:Pruning node with bbvalue: 6.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:06,574 DEBUG:Expanding node with bbvalue: 5.0, edge: A1&&A0
2024-06-10 21:05:06,574 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:06,596 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:06,596 DEBUG:Finding kernel for 5 elements of dataset = ['!(A0||A1)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,596 INFO:5 ELEMENTS: ['!(A0||A1)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,596 DEBUG:B_PRIME with 1 elements: ['!(A0||A1)']
2024-06-10 21:05:06,613 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)'])
2024-06-10 21:05:06,613 DEBUG:B_PRIME with 2 elements: ['!(A0||A1)', '!A0']
2024-06-10 21:05:06,630 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '!A0'])
2024-06-10 21:05:06,630 DEBUG:B_PRIME with 3 elements: ['!(A0||A1)', '!A0', '!A1']
2024-06-10 21:05:06,648 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '!A0', '!A1'])
2024-06-10 21:05:06,648 DEBUG:B_PRIME with 4 elements: ['!(A0||A1)', '!A0', '!A1', '!A2']
2024-06-10 21:05:06,666 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(A0||A1)', '!A0', '!A1', '!A2'])
2024-06-10 21:05:06,666 DEBUG:B_PRIME with 5 elements: ['!(A0||A1)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,683 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(A0||A1)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:06,683 INFO:Checking line: !(A0||A1) with index: 0
2024-06-10 21:05:06,683 DEBUG:Removing element: !(A0||A1)
2024-06-10 21:05:06,683 DEBUG:B with 4 elements = ['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,701 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:06,701 INFO:SHRINK: CN = TRUE, removing: !(A0||A1)
2024-06-10 21:05:06,701 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,701 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:06,701 DEBUG:Removing element: !A0
2024-06-10 21:05:06,701 DEBUG:B with 3 elements = ['!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,718 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:06,719 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:06,719 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,719 INFO:Checking line: !A1 with index: 0
2024-06-10 21:05:06,719 DEBUG:Removing element: !A1
2024-06-10 21:05:06,719 DEBUG:B with 2 elements = ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,736 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:06,736 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:05:06,736 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,736 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:06,736 DEBUG:Removing element: !A2
2024-06-10 21:05:06,736 DEBUG:B with 1 elements = ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,753 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:06,754 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:06,754 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,754 INFO:Checking line: (A1||A1)&&(A2&&A0) with index: 0
2024-06-10 21:05:06,754 DEBUG:Removing element: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:06,754 DEBUG:B with 0 elements = []
2024-06-10 21:05:06,771 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:06,771 INFO:Kernel output with 1 elements: ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,771 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:06,771 DEBUG:Calculating bbvalue: current_node bbvalue = 5.0, element = (A1||A1)&&(A2&&A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 6.0
2024-06-10 21:05:06,771 DEBUG:Adding node to priority queue with priority: -1, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:06,773 DEBUG:Expanding node with bbvalue: 6.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:06,773 DEBUG:Checking pruning: node bbvalue = 6.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:06,773 DEBUG:Pruning node with bbvalue: 6.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:06,773 DEBUG:Expanding node with bbvalue: 3.0, edge: !(!A1&&A2)
2024-06-10 21:05:06,773 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:06,791 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:06,791 DEBUG:Finding kernel for 7 elements of dataset = ['(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,791 INFO:7 ELEMENTS: ['(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,791 DEBUG:B_PRIME with 1 elements: ['(A1||(A1&&A0))||A2']
2024-06-10 21:05:06,808 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2'])
2024-06-10 21:05:06,809 DEBUG:B_PRIME with 2 elements: ['(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:06,838 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:06,839 DEBUG:B_PRIME with 3 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A1']
2024-06-10 21:05:06,861 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A1'])
2024-06-10 21:05:06,861 DEBUG:B_PRIME with 4 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2']
2024-06-10 21:05:06,880 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A1', '!A2'])
2024-06-10 21:05:06,881 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:06,881 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:06,881 DEBUG:B with 3 elements = ['!A0', '!A1', '!A2']
2024-06-10 21:05:06,899 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0', '!A1', '!A2'])
2024-06-10 21:05:06,899 INFO:Checking line: !A0 with index: 1
2024-06-10 21:05:06,899 DEBUG:Removing element: !A0
2024-06-10 21:05:06,899 DEBUG:B with 3 elements = ['(A1||(A1&&A0))||A2', '!A1', '!A2']
2024-06-10 21:05:06,917 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A1', '!A2'])
2024-06-10 21:05:06,917 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:06,917 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['(A1||(A1&&A0))||A2', '!A1', '!A2']
2024-06-10 21:05:06,917 INFO:Checking line: !A1 with index: 1
2024-06-10 21:05:06,917 DEBUG:Removing element: !A1
2024-06-10 21:05:06,917 DEBUG:B with 2 elements = ['(A1||(A1&&A0))||A2', '!A2']
2024-06-10 21:05:06,935 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A2'])
2024-06-10 21:05:06,935 INFO:Checking line: !A2 with index: 2
2024-06-10 21:05:06,935 DEBUG:Removing element: !A2
2024-06-10 21:05:06,935 DEBUG:B with 2 elements = ['(A1||(A1&&A0))||A2', '!A1']
2024-06-10 21:05:06,952 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A1'])
2024-06-10 21:05:06,952 INFO:Kernel output with 3 elements: ['(A1||(A1&&A0))||A2', '!A1', '!A2']
2024-06-10 21:05:06,952 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:06,953 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = (A1||(A1&&A0))||A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:05:06,953 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:05:06,953 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-06-10 21:05:06,953 DEBUG:Adding node to priority queue with priority: -1, edge: !A2
2024-06-10 21:05:06,953 DEBUG:Adding node to priority queue with priority: 0, edge: (A1||(A1&&A0))||A2
2024-06-10 21:05:06,953 DEBUG:Adding node to priority queue with priority: 0, edge: !A1
2024-06-10 21:05:06,955 DEBUG:Expanding node with bbvalue: 4.0, edge: !A2
2024-06-10 21:05:06,955 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:06,955 DEBUG:Pruning node with bbvalue: 4.0, edge: !A2
2024-06-10 21:05:06,955 DEBUG:Expanding node with bbvalue: 4.0, edge: (A1||(A1&&A0))||A2
2024-06-10 21:05:06,955 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:06,973 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:06,973 DEBUG:Finding kernel for 6 elements of dataset = ['!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,973 INFO:6 ELEMENTS: ['!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:06,973 DEBUG:B_PRIME with 1 elements: ['!A0']
2024-06-10 21:05:06,990 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0'])
2024-06-10 21:05:06,990 DEBUG:B_PRIME with 2 elements: ['!A0', '!A1']
2024-06-10 21:05:07,012 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0', '!A1'])
2024-06-10 21:05:07,012 DEBUG:B_PRIME with 3 elements: ['!A0', '!A1', '!A2']
2024-06-10 21:05:07,030 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0', '!A1', '!A2'])
2024-06-10 21:05:07,030 DEBUG:B_PRIME with 4 elements: ['!A0', '!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:07,047 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:07,047 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:07,047 DEBUG:Removing element: !A0
2024-06-10 21:05:07,047 DEBUG:B with 3 elements = ['!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:07,065 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:07,065 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:07,065 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:07,065 INFO:Checking line: !A1 with index: 0
2024-06-10 21:05:07,065 DEBUG:Removing element: !A1
2024-06-10 21:05:07,065 DEBUG:B with 2 elements = ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:07,082 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:07,082 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:05:07,082 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:07,082 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:07,082 DEBUG:Removing element: !A2
2024-06-10 21:05:07,082 DEBUG:B with 1 elements = ['!A1&&(A2||A0)']
2024-06-10 21:05:07,100 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A1&&(A2||A0)'])
2024-06-10 21:05:07,100 INFO:Checking line: !A1&&(A2||A0) with index: 1
2024-06-10 21:05:07,100 DEBUG:Removing element: !A1&&(A2||A0)
2024-06-10 21:05:07,100 DEBUG:B with 1 elements = ['!A2']
2024-06-10 21:05:07,117 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A2'])
2024-06-10 21:05:07,118 INFO:Kernel output with 2 elements: ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:07,118 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:07,118 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:07,118 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = !A1&&(A2||A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:07,118 DEBUG:Adding node to priority queue with priority: -1, edge: !A2
2024-06-10 21:05:07,118 DEBUG:Adding node to priority queue with priority: 0, edge: !A1&&(A2||A0)
2024-06-10 21:05:07,120 DEBUG:Expanding node with bbvalue: 5.0, edge: !A2
2024-06-10 21:05:07,120 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:07,120 DEBUG:Pruning node with bbvalue: 5.0, edge: !A2
2024-06-10 21:05:07,120 DEBUG:Expanding node with bbvalue: 4.0, edge: (A1||(A1&&A0))||A2
2024-06-10 21:05:07,120 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:07,137 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:07,137 DEBUG:Finding kernel for 6 elements of dataset = ['!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:07,137 INFO:6 ELEMENTS: ['!A0', '!A1', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:07,138 DEBUG:B_PRIME with 1 elements: ['!A0']
2024-06-10 21:05:07,155 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0'])
2024-06-10 21:05:07,155 DEBUG:B_PRIME with 2 elements: ['!A0', '!A1']
2024-06-10 21:05:07,172 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0', '!A1'])
2024-06-10 21:05:07,172 DEBUG:B_PRIME with 3 elements: ['!A0', '!A1', '!A2']
2024-06-10 21:05:07,189 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0', '!A1', '!A2'])
2024-06-10 21:05:07,189 DEBUG:B_PRIME with 4 elements: ['!A0', '!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:07,207 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:07,207 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:07,207 DEBUG:Removing element: !A0
2024-06-10 21:05:07,207 DEBUG:B with 3 elements = ['!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:07,224 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:07,224 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:07,224 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:07,224 INFO:Checking line: !A1 with index: 0
2024-06-10 21:05:07,224 DEBUG:Removing element: !A1
2024-06-10 21:05:07,224 DEBUG:B with 2 elements = ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:07,242 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:07,242 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:05:07,242 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:07,242 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:07,242 DEBUG:Removing element: !A2
2024-06-10 21:05:07,242 DEBUG:B with 1 elements = ['!A1&&(A2||A0)']
2024-06-10 21:05:07,261 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A1&&(A2||A0)'])
2024-06-10 21:05:07,261 INFO:Checking line: !A1&&(A2||A0) with index: 1
2024-06-10 21:05:07,261 DEBUG:Removing element: !A1&&(A2||A0)
2024-06-10 21:05:07,261 DEBUG:B with 1 elements = ['!A2']
2024-06-10 21:05:07,279 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A2'])
2024-06-10 21:05:07,280 INFO:Kernel output with 2 elements: ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:07,280 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:07,280 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:07,280 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = !A1&&(A2||A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:07,280 DEBUG:Adding node to priority queue with priority: -1, edge: !A2
2024-06-10 21:05:07,280 DEBUG:Adding node to priority queue with priority: 0, edge: !A1&&(A2||A0)
2024-06-10 21:05:07,282 DEBUG:Expanding node with bbvalue: 5.0, edge: !A2
2024-06-10 21:05:07,282 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:07,282 DEBUG:Pruning node with bbvalue: 5.0, edge: !A2
2024-06-10 21:05:07,282 DEBUG:Expanding node with bbvalue: 4.0, edge: !A1&&(A2||A0)
2024-06-10 21:05:07,282 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:07,307 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!A0', '!A1', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:07,307 DEBUG:Finding kernel for 6 elements of dataset = ['!(!A1&&A2)', '!A0', '!A1', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:07,307 INFO:6 ELEMENTS: ['!(!A1&&A2)', '!A0', '!A1', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:07,307 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:07,342 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:07,342 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '!A0']
2024-06-10 21:05:07,363 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0'])
2024-06-10 21:05:07,363 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '!A0', '!A1']
2024-06-10 21:05:07,381 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0', '!A1'])
2024-06-10 21:05:07,381 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '!A0', '!A1', '!A2']
2024-06-10 21:05:07,401 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0', '!A1', '!A2'])
2024-06-10 21:05:07,401 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', '!A0', '!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:07,419 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!A0', '!A1', '!A2', 'A1&&A0'])
2024-06-10 21:05:07,420 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:07,420 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:07,420 DEBUG:B with 4 elements = ['!A0', '!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:07,443 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', 'A1&&A0'])
2024-06-10 21:05:07,443 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:05:07,443 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['!A0', '!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:07,443 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:07,443 DEBUG:Removing element: !A0
2024-06-10 21:05:07,443 DEBUG:B with 3 elements = ['!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:07,461 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '!A2', 'A1&&A0'])
2024-06-10 21:05:07,461 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:07,461 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:07,461 INFO:Checking line: !A1 with index: 0
2024-06-10 21:05:07,461 DEBUG:Removing element: !A1
2024-06-10 21:05:07,461 DEBUG:B with 2 elements = ['!A2', 'A1&&A0']
2024-06-10 21:05:07,479 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', 'A1&&A0'])
2024-06-10 21:05:07,479 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:05:07,479 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', 'A1&&A0']
2024-06-10 21:05:07,479 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:07,479 DEBUG:Removing element: !A2
2024-06-10 21:05:07,479 DEBUG:B with 1 elements = ['A1&&A0']
2024-06-10 21:05:07,497 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1&&A0'])
2024-06-10 21:05:07,497 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:07,497 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['A1&&A0']
2024-06-10 21:05:07,497 INFO:Checking line: A1&&A0 with index: 0
2024-06-10 21:05:07,497 DEBUG:Removing element: A1&&A0
2024-06-10 21:05:07,497 DEBUG:B with 0 elements = []
2024-06-10 21:05:07,515 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:07,515 INFO:Kernel output with 1 elements: ['A1&&A0']
2024-06-10 21:05:07,515 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:07,515 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = A1&&A0, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:07,515 DEBUG:Adding node to priority queue with priority: 0, edge: A1&&A0
2024-06-10 21:05:07,517 DEBUG:Expanding node with bbvalue: 5.0, edge: !A1&&(A2||A0)
2024-06-10 21:05:07,517 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:07,548 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:07,549 DEBUG:Finding kernel for 5 elements of dataset = ['!A0', '!A1', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:07,549 INFO:5 ELEMENTS: ['!A0', '!A1', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:07,549 DEBUG:B_PRIME with 1 elements: ['!A0']
2024-06-10 21:05:07,567 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0'])
2024-06-10 21:05:07,567 DEBUG:B_PRIME with 2 elements: ['!A0', '!A1']
2024-06-10 21:05:07,586 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0', '!A1'])
2024-06-10 21:05:07,586 DEBUG:B_PRIME with 3 elements: ['!A0', '!A1', '!A2']
2024-06-10 21:05:07,605 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0', '!A1', '!A2'])
2024-06-10 21:05:07,605 DEBUG:B_PRIME with 4 elements: ['!A0', '!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:07,623 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', 'A1&&A0'])
2024-06-10 21:05:07,623 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:07,623 DEBUG:Removing element: !A0
2024-06-10 21:05:07,623 DEBUG:B with 3 elements = ['!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:07,641 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '!A2', 'A1&&A0'])
2024-06-10 21:05:07,641 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:07,641 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:07,641 INFO:Checking line: !A1 with index: 0
2024-06-10 21:05:07,641 DEBUG:Removing element: !A1
2024-06-10 21:05:07,641 DEBUG:B with 2 elements = ['!A2', 'A1&&A0']
2024-06-10 21:05:07,659 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', 'A1&&A0'])
2024-06-10 21:05:07,659 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:05:07,659 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', 'A1&&A0']
2024-06-10 21:05:07,659 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:07,659 DEBUG:Removing element: !A2
2024-06-10 21:05:07,659 DEBUG:B with 1 elements = ['A1&&A0']
2024-06-10 21:05:07,676 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1&&A0'])
2024-06-10 21:05:07,676 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:07,676 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['A1&&A0']
2024-06-10 21:05:07,676 INFO:Checking line: A1&&A0 with index: 0
2024-06-10 21:05:07,676 DEBUG:Removing element: A1&&A0
2024-06-10 21:05:07,676 DEBUG:B with 0 elements = []
2024-06-10 21:05:07,694 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:07,694 INFO:Kernel output with 1 elements: ['A1&&A0']
2024-06-10 21:05:07,694 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:07,694 DEBUG:Calculating bbvalue: current_node bbvalue = 5.0, element = A1&&A0, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 6.0
2024-06-10 21:05:07,694 DEBUG:Adding node to priority queue with priority: 0, edge: A1&&A0
2024-06-10 21:05:07,697 DEBUG:Expanding node with bbvalue: 4.0, edge: !A1
2024-06-10 21:05:07,697 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:07,715 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:07,715 DEBUG:Finding kernel for 6 elements of dataset = ['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:07,715 INFO:6 ELEMENTS: ['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:07,715 DEBUG:B_PRIME with 1 elements: ['(A1||(A1&&A0))||A2']
2024-06-10 21:05:07,733 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2'])
2024-06-10 21:05:07,733 DEBUG:B_PRIME with 2 elements: ['(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:07,751 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:07,751 DEBUG:B_PRIME with 3 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:05:07,781 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:05:07,781 DEBUG:B_PRIME with 4 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:07,801 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:07,801 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:07,801 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:07,801 DEBUG:B with 3 elements = ['!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:07,819 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:07,819 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:07,819 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:07,820 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:07,820 DEBUG:Removing element: !A0
2024-06-10 21:05:07,820 DEBUG:B with 2 elements = ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:07,837 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '!A1&&(A2||A0)'])
2024-06-10 21:05:07,837 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:07,837 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:07,837 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:07,837 DEBUG:Removing element: !A2
2024-06-10 21:05:07,837 DEBUG:B with 1 elements = ['!A1&&(A2||A0)']
2024-06-10 21:05:07,854 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A1&&(A2||A0)'])
2024-06-10 21:05:07,855 INFO:Checking line: !A1&&(A2||A0) with index: 1
2024-06-10 21:05:07,855 DEBUG:Removing element: !A1&&(A2||A0)
2024-06-10 21:05:07,855 DEBUG:B with 1 elements = ['!A2']
2024-06-10 21:05:07,876 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A2'])
2024-06-10 21:05:07,876 INFO:Kernel output with 2 elements: ['!A2', '!A1&&(A2||A0)']
2024-06-10 21:05:07,876 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:07,877 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:07,877 DEBUG:Calculating bbvalue: current_node bbvalue = 4.0, element = !A1&&(A2||A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 5.0
2024-06-10 21:05:07,877 DEBUG:Adding node to priority queue with priority: -1, edge: !A2
2024-06-10 21:05:07,877 DEBUG:Adding node to priority queue with priority: 0, edge: !A1&&(A2||A0)
2024-06-10 21:05:07,879 DEBUG:Expanding node with bbvalue: 5.0, edge: !A2
2024-06-10 21:05:07,879 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:07,879 DEBUG:Pruning node with bbvalue: 5.0, edge: !A2
2024-06-10 21:05:07,879 DEBUG:Expanding node with bbvalue: 6.0, edge: A1&&A0
2024-06-10 21:05:07,879 DEBUG:Checking pruning: node bbvalue = 6.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:07,897 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:07,897 DEBUG:Finding kernel for 4 elements of dataset = ['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:07,897 INFO:4 ELEMENTS: ['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:07,897 DEBUG:B_PRIME with 1 elements: ['!A0']
2024-06-10 21:05:07,915 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0'])
2024-06-10 21:05:07,915 DEBUG:B_PRIME with 2 elements: ['!A0', '!A1']
2024-06-10 21:05:07,933 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0', '!A1'])
2024-06-10 21:05:07,933 DEBUG:B_PRIME with 3 elements: ['!A0', '!A1', '!A2']
2024-06-10 21:05:07,951 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0', '!A1', '!A2'])
2024-06-10 21:05:07,951 DEBUG:B_PRIME with 4 elements: ['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:07,969 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:07,969 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:07,969 DEBUG:Removing element: !A0
2024-06-10 21:05:07,969 DEBUG:B with 3 elements = ['!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:07,988 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:07,988 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:07,988 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:07,988 INFO:Checking line: !A1 with index: 0
2024-06-10 21:05:07,988 DEBUG:Removing element: !A1
2024-06-10 21:05:07,988 DEBUG:B with 2 elements = ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,006 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,006 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:05:08,006 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,006 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:08,006 DEBUG:Removing element: !A2
2024-06-10 21:05:08,006 DEBUG:B with 1 elements = ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,024 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,024 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:08,024 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,024 INFO:Checking line: (A1||A1)&&(A2&&A0) with index: 0
2024-06-10 21:05:08,024 DEBUG:Removing element: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:08,024 DEBUG:B with 0 elements = []
2024-06-10 21:05:08,041 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:08,041 INFO:Kernel output with 1 elements: ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,041 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:08,042 DEBUG:Calculating bbvalue: current_node bbvalue = 6.0, element = (A1||A1)&&(A2&&A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 7.0
2024-06-10 21:05:08,042 DEBUG:Adding node to priority queue with priority: -1, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:08,044 DEBUG:Expanding node with bbvalue: 7.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:08,044 DEBUG:Checking pruning: node bbvalue = 7.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:08,044 DEBUG:Pruning node with bbvalue: 7.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:08,044 DEBUG:Expanding node with bbvalue: 5.0, edge: !A1&&(A2||A0)
2024-06-10 21:05:08,044 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:08,062 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,062 DEBUG:Finding kernel for 5 elements of dataset = ['!A0', '!A1', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,062 INFO:5 ELEMENTS: ['!A0', '!A1', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,062 DEBUG:B_PRIME with 1 elements: ['!A0']
2024-06-10 21:05:08,079 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0'])
2024-06-10 21:05:08,080 DEBUG:B_PRIME with 2 elements: ['!A0', '!A1']
2024-06-10 21:05:08,097 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0', '!A1'])
2024-06-10 21:05:08,097 DEBUG:B_PRIME with 3 elements: ['!A0', '!A1', '!A2']
2024-06-10 21:05:08,114 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0', '!A1', '!A2'])
2024-06-10 21:05:08,114 DEBUG:B_PRIME with 4 elements: ['!A0', '!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:08,132 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', 'A1&&A0'])
2024-06-10 21:05:08,132 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:08,132 DEBUG:Removing element: !A0
2024-06-10 21:05:08,132 DEBUG:B with 3 elements = ['!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:08,149 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '!A2', 'A1&&A0'])
2024-06-10 21:05:08,149 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:08,149 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1', '!A2', 'A1&&A0']
2024-06-10 21:05:08,149 INFO:Checking line: !A1 with index: 0
2024-06-10 21:05:08,149 DEBUG:Removing element: !A1
2024-06-10 21:05:08,149 DEBUG:B with 2 elements = ['!A2', 'A1&&A0']
2024-06-10 21:05:08,166 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', 'A1&&A0'])
2024-06-10 21:05:08,167 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:05:08,167 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', 'A1&&A0']
2024-06-10 21:05:08,167 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:08,167 DEBUG:Removing element: !A2
2024-06-10 21:05:08,167 DEBUG:B with 1 elements = ['A1&&A0']
2024-06-10 21:05:08,184 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1&&A0'])
2024-06-10 21:05:08,184 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:08,184 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['A1&&A0']
2024-06-10 21:05:08,184 INFO:Checking line: A1&&A0 with index: 0
2024-06-10 21:05:08,184 DEBUG:Removing element: A1&&A0
2024-06-10 21:05:08,184 DEBUG:B with 0 elements = []
2024-06-10 21:05:08,201 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:08,201 INFO:Kernel output with 1 elements: ['A1&&A0']
2024-06-10 21:05:08,201 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:08,201 DEBUG:Calculating bbvalue: current_node bbvalue = 5.0, element = A1&&A0, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 6.0
2024-06-10 21:05:08,201 DEBUG:Adding node to priority queue with priority: 0, edge: A1&&A0
2024-06-10 21:05:08,204 DEBUG:Expanding node with bbvalue: 5.0, edge: A1&&A0
2024-06-10 21:05:08,204 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:08,213 DEBUG:Sending global request "keepalive@lag.net"
2024-06-10 21:05:08,222 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,222 DEBUG:Finding kernel for 5 elements of dataset = ['!(!A1&&A2)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,222 INFO:5 ELEMENTS: ['!(!A1&&A2)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,222 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:08,239 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:08,240 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '!A0']
2024-06-10 21:05:08,257 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0'])
2024-06-10 21:05:08,257 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '!A0', '!A1']
2024-06-10 21:05:08,279 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0', '!A1'])
2024-06-10 21:05:08,279 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '!A0', '!A1', '!A2']
2024-06-10 21:05:08,297 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0', '!A1', '!A2'])
2024-06-10 21:05:08,297 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,315 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,316 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:08,316 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:08,316 DEBUG:B with 4 elements = ['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,337 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,337 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:05:08,337 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,337 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:08,337 DEBUG:Removing element: !A0
2024-06-10 21:05:08,337 DEBUG:B with 3 elements = ['!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,357 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,357 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:08,357 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,357 INFO:Checking line: !A1 with index: 0
2024-06-10 21:05:08,357 DEBUG:Removing element: !A1
2024-06-10 21:05:08,357 DEBUG:B with 2 elements = ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,375 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,376 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:05:08,376 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,376 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:08,376 DEBUG:Removing element: !A2
2024-06-10 21:05:08,376 DEBUG:B with 1 elements = ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,393 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,394 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:08,394 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,394 INFO:Checking line: (A1||A1)&&(A2&&A0) with index: 0
2024-06-10 21:05:08,394 DEBUG:Removing element: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:08,394 DEBUG:B with 0 elements = []
2024-06-10 21:05:08,411 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:08,411 INFO:Kernel output with 1 elements: ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,411 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:08,411 DEBUG:Calculating bbvalue: current_node bbvalue = 5.0, element = (A1||A1)&&(A2&&A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 6.0
2024-06-10 21:05:08,411 DEBUG:Adding node to priority queue with priority: -1, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:08,413 DEBUG:Expanding node with bbvalue: 6.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:08,413 DEBUG:Checking pruning: node bbvalue = 6.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:08,413 DEBUG:Pruning node with bbvalue: 6.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:08,413 DEBUG:Expanding node with bbvalue: 6.0, edge: A1&&A0
2024-06-10 21:05:08,413 DEBUG:Checking pruning: node bbvalue = 6.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:08,432 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,432 DEBUG:Finding kernel for 4 elements of dataset = ['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,432 INFO:4 ELEMENTS: ['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,432 DEBUG:B_PRIME with 1 elements: ['!A0']
2024-06-10 21:05:08,450 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0'])
2024-06-10 21:05:08,450 DEBUG:B_PRIME with 2 elements: ['!A0', '!A1']
2024-06-10 21:05:08,468 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0', '!A1'])
2024-06-10 21:05:08,468 DEBUG:B_PRIME with 3 elements: ['!A0', '!A1', '!A2']
2024-06-10 21:05:08,486 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0', '!A1', '!A2'])
2024-06-10 21:05:08,486 DEBUG:B_PRIME with 4 elements: ['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,504 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,504 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:08,504 DEBUG:Removing element: !A0
2024-06-10 21:05:08,505 DEBUG:B with 3 elements = ['!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,523 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,523 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:08,523 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,523 INFO:Checking line: !A1 with index: 0
2024-06-10 21:05:08,523 DEBUG:Removing element: !A1
2024-06-10 21:05:08,523 DEBUG:B with 2 elements = ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,541 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,541 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:05:08,541 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,541 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:08,541 DEBUG:Removing element: !A2
2024-06-10 21:05:08,541 DEBUG:B with 1 elements = ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,558 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,559 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:08,559 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,559 INFO:Checking line: (A1||A1)&&(A2&&A0) with index: 0
2024-06-10 21:05:08,559 DEBUG:Removing element: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:08,559 DEBUG:B with 0 elements = []
2024-06-10 21:05:08,576 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:08,577 INFO:Kernel output with 1 elements: ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,577 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:08,577 DEBUG:Calculating bbvalue: current_node bbvalue = 6.0, element = (A1||A1)&&(A2&&A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 7.0
2024-06-10 21:05:08,577 DEBUG:Adding node to priority queue with priority: -1, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:08,584 DEBUG:Expanding node with bbvalue: 7.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:08,584 DEBUG:Checking pruning: node bbvalue = 7.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:08,584 DEBUG:Pruning node with bbvalue: 7.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:08,584 DEBUG:Expanding node with bbvalue: 5.0, edge: !A1&&(A2||A0)
2024-06-10 21:05:08,584 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:08,603 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,603 DEBUG:Finding kernel for 5 elements of dataset = ['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,603 INFO:5 ELEMENTS: ['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,603 DEBUG:B_PRIME with 1 elements: ['(A1||(A1&&A0))||A2']
2024-06-10 21:05:08,622 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2'])
2024-06-10 21:05:08,622 DEBUG:B_PRIME with 2 elements: ['(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:08,640 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:08,640 DEBUG:B_PRIME with 3 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:05:08,658 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:05:08,658 DEBUG:B_PRIME with 4 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:08,676 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', 'A1&&A0'])
2024-06-10 21:05:08,676 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:08,676 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:08,676 DEBUG:B with 3 elements = ['!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:08,694 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', 'A1&&A0'])
2024-06-10 21:05:08,694 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:08,695 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', 'A1&&A0']
2024-06-10 21:05:08,695 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:08,695 DEBUG:Removing element: !A0
2024-06-10 21:05:08,695 DEBUG:B with 2 elements = ['!A2', 'A1&&A0']
2024-06-10 21:05:08,717 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', 'A1&&A0'])
2024-06-10 21:05:08,717 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:08,717 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', 'A1&&A0']
2024-06-10 21:05:08,717 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:08,717 DEBUG:Removing element: !A2
2024-06-10 21:05:08,717 DEBUG:B with 1 elements = ['A1&&A0']
2024-06-10 21:05:08,735 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1&&A0'])
2024-06-10 21:05:08,736 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:08,736 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['A1&&A0']
2024-06-10 21:05:08,736 INFO:Checking line: A1&&A0 with index: 0
2024-06-10 21:05:08,736 DEBUG:Removing element: A1&&A0
2024-06-10 21:05:08,736 DEBUG:B with 0 elements = []
2024-06-10 21:05:08,753 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:08,753 INFO:Kernel output with 1 elements: ['A1&&A0']
2024-06-10 21:05:08,754 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:08,754 DEBUG:Calculating bbvalue: current_node bbvalue = 5.0, element = A1&&A0, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 6.0
2024-06-10 21:05:08,754 DEBUG:Adding node to priority queue with priority: 0, edge: A1&&A0
2024-06-10 21:05:08,756 DEBUG:Expanding node with bbvalue: 5.0, edge: A1&&A0
2024-06-10 21:05:08,756 DEBUG:Checking pruning: node bbvalue = 5.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:08,774 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,774 DEBUG:Finding kernel for 5 elements of dataset = ['!(!A1&&A2)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,774 INFO:5 ELEMENTS: ['!(!A1&&A2)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,774 DEBUG:B_PRIME with 1 elements: ['!(!A1&&A2)']
2024-06-10 21:05:08,792 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)'])
2024-06-10 21:05:08,792 DEBUG:B_PRIME with 2 elements: ['!(!A1&&A2)', '!A0']
2024-06-10 21:05:08,809 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0'])
2024-06-10 21:05:08,809 DEBUG:B_PRIME with 3 elements: ['!(!A1&&A2)', '!A0', '!A1']
2024-06-10 21:05:08,826 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0', '!A1'])
2024-06-10 21:05:08,826 DEBUG:B_PRIME with 4 elements: ['!(!A1&&A2)', '!A0', '!A1', '!A2']
2024-06-10 21:05:08,844 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!(!A1&&A2)', '!A0', '!A1', '!A2'])
2024-06-10 21:05:08,844 DEBUG:B_PRIME with 5 elements: ['!(!A1&&A2)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,861 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!(!A1&&A2)', '!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,861 INFO:Checking line: !(!A1&&A2) with index: 0
2024-06-10 21:05:08,861 DEBUG:Removing element: !(!A1&&A2)
2024-06-10 21:05:08,861 DEBUG:B with 4 elements = ['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,879 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,879 INFO:SHRINK: CN = TRUE, removing: !(!A1&&A2)
2024-06-10 21:05:08,879 DEBUG:CONTINUE SHRINKING WITH 4 elements : ['!A0', '!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,879 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:08,879 DEBUG:Removing element: !A0
2024-06-10 21:05:08,879 DEBUG:B with 3 elements = ['!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,903 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,903 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:08,903 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,903 INFO:Checking line: !A1 with index: 0
2024-06-10 21:05:08,903 DEBUG:Removing element: !A1
2024-06-10 21:05:08,903 DEBUG:B with 2 elements = ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,922 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,922 INFO:SHRINK: CN = TRUE, removing: !A1
2024-06-10 21:05:08,922 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,922 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:08,922 DEBUG:Removing element: !A2
2024-06-10 21:05:08,922 DEBUG:B with 1 elements = ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,941 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,941 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:08,941 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,941 INFO:Checking line: (A1||A1)&&(A2&&A0) with index: 0
2024-06-10 21:05:08,941 DEBUG:Removing element: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:08,941 DEBUG:B with 0 elements = []
2024-06-10 21:05:08,958 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:08,959 INFO:Kernel output with 1 elements: ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,959 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:08,959 DEBUG:Calculating bbvalue: current_node bbvalue = 5.0, element = (A1||A1)&&(A2&&A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 6.0
2024-06-10 21:05:08,959 DEBUG:Adding node to priority queue with priority: -1, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:08,961 DEBUG:Expanding node with bbvalue: 6.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:08,961 DEBUG:Checking pruning: node bbvalue = 6.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:08,961 DEBUG:Pruning node with bbvalue: 6.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:08,961 DEBUG:Expanding node with bbvalue: 6.0, edge: A1&&A0
2024-06-10 21:05:08,961 DEBUG:Checking pruning: node bbvalue = 6.0, hitting_set_value = 0.0, boundary = 1.0
2024-06-10 21:05:08,979 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:08,979 DEBUG:Finding kernel for 4 elements of dataset = ['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,979 INFO:4 ELEMENTS: ['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:08,979 DEBUG:B_PRIME with 1 elements: ['(A1||(A1&&A0))||A2']
2024-06-10 21:05:08,997 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2'])
2024-06-10 21:05:08,997 DEBUG:B_PRIME with 2 elements: ['(A1||(A1&&A0))||A2', '!A0']
2024-06-10 21:05:09,015 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0'])
2024-06-10 21:05:09,015 DEBUG:B_PRIME with 3 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A2']
2024-06-10 21:05:09,032 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2'])
2024-06-10 21:05:09,033 DEBUG:B_PRIME with 4 elements: ['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:09,050 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||(A1&&A0))||A2', '!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:09,050 INFO:Checking line: (A1||(A1&&A0))||A2 with index: 0
2024-06-10 21:05:09,050 DEBUG:Removing element: (A1||(A1&&A0))||A2
2024-06-10 21:05:09,050 DEBUG:B with 3 elements = ['!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:09,068 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0', '!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:09,068 INFO:SHRINK: CN = TRUE, removing: (A1||(A1&&A0))||A2
2024-06-10 21:05:09,068 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A0', '!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:09,068 INFO:Checking line: !A0 with index: 0
2024-06-10 21:05:09,068 DEBUG:Removing element: !A0
2024-06-10 21:05:09,068 DEBUG:B with 2 elements = ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:09,086 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A2', '(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:09,086 INFO:SHRINK: CN = TRUE, removing: !A0
2024-06-10 21:05:09,086 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A2', '(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:09,086 INFO:Checking line: !A2 with index: 0
2024-06-10 21:05:09,086 DEBUG:Removing element: !A2
2024-06-10 21:05:09,086 DEBUG:B with 1 elements = ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:09,103 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['(A1||A1)&&(A2&&A0)'])
2024-06-10 21:05:09,103 INFO:SHRINK: CN = TRUE, removing: !A2
2024-06-10 21:05:09,103 DEBUG:CONTINUE SHRINKING WITH 1 elements : ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:09,103 INFO:Checking line: (A1||A1)&&(A2&&A0) with index: 0
2024-06-10 21:05:09,103 DEBUG:Removing element: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:09,104 DEBUG:B with 0 elements = []
2024-06-10 21:05:09,121 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-06-10 21:05:09,121 INFO:Kernel output with 1 elements: ['(A1||A1)&&(A2&&A0)']
2024-06-10 21:05:09,121 INFO:KERNEL BLACKBOX FINISHED
2024-06-10 21:05:09,121 DEBUG:Calculating bbvalue: current_node bbvalue = 6.0, element = (A1||A1)&&(A2&&A0), assigned_value = 1, transformed_value = 1.0, new_bbvalue = 7.0
2024-06-10 21:05:09,121 DEBUG:Adding node to priority queue with priority: -1, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:09,124 DEBUG:Expanding node with bbvalue: 7.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:09,124 DEBUG:Checking pruning: node bbvalue = 7.0, hitting_set_value = 1.0, boundary = 1.0
2024-06-10 21:05:09,124 DEBUG:Pruning node with bbvalue: 7.0, edge: (A1||A1)&&(A2&&A0)
2024-06-10 21:05:09,171 INFO:Execution time: 11.017657995223999s, Memory Used: 37470208 KB, Strategy: 3, Kernel_Remainder: kernel, Sliding Window size: 1, Divide and conquer: False, Kernels: 58, Branches: 87, Tree depth: 7, Pruned branches: 30, Boundary: 1.0
2024-06-10 21:05:09,171 INFO:Optimal hitting set: ['(A1||A1)&&(A2&&A0)', 'A1&&A0', '!A1&&(A2||A0)', '(A1||(A1&&A0))||A2', 'A1||((A2&&A0)&&A1)'], Alpha: A0&&!A0
