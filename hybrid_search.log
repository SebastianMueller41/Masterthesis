2024-05-20 16:30:50,185 DEBUG:starting thread (client mode): 0x6e65370
2024-05-20 16:30:50,186 DEBUG:Local version/idstring: SSH-2.0-paramiko_3.4.0
2024-05-20 16:30:50,231 DEBUG:Remote version/idstring: SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.11
2024-05-20 16:30:50,231 INFO:Connected (version 2.0, client OpenSSH_8.2p1)
2024-05-20 16:30:50,258 DEBUG:=== Key exchange possibilities ===
2024-05-20 16:30:50,258 DEBUG:kex algos: curve25519-sha256, curve25519-sha256@libssh.org, ecdh-sha2-nistp256, ecdh-sha2-nistp384, ecdh-sha2-nistp521, diffie-hellman-group-exchange-sha256, diffie-hellman-group16-sha512, diffie-hellman-group18-sha512, diffie-hellman-group14-sha256, kex-strict-s-v00@openssh.com
2024-05-20 16:30:50,258 DEBUG:server key: rsa-sha2-512, rsa-sha2-256, ssh-rsa, ecdsa-sha2-nistp256, ssh-ed25519
2024-05-20 16:30:50,258 DEBUG:client encrypt: chacha20-poly1305@openssh.com, aes128-ctr, aes192-ctr, aes256-ctr, aes128-gcm@openssh.com, aes256-gcm@openssh.com
2024-05-20 16:30:50,258 DEBUG:server encrypt: chacha20-poly1305@openssh.com, aes128-ctr, aes192-ctr, aes256-ctr, aes128-gcm@openssh.com, aes256-gcm@openssh.com
2024-05-20 16:30:50,258 DEBUG:client mac: umac-64-etm@openssh.com, umac-128-etm@openssh.com, hmac-sha2-256-etm@openssh.com, hmac-sha2-512-etm@openssh.com, hmac-sha1-etm@openssh.com, umac-64@openssh.com, umac-128@openssh.com, hmac-sha2-256, hmac-sha2-512, hmac-sha1
2024-05-20 16:30:50,258 DEBUG:server mac: umac-64-etm@openssh.com, umac-128-etm@openssh.com, hmac-sha2-256-etm@openssh.com, hmac-sha2-512-etm@openssh.com, hmac-sha1-etm@openssh.com, umac-64@openssh.com, umac-128@openssh.com, hmac-sha2-256, hmac-sha2-512, hmac-sha1
2024-05-20 16:30:50,258 DEBUG:client compress: none, zlib@openssh.com
2024-05-20 16:30:50,258 DEBUG:server compress: none, zlib@openssh.com
2024-05-20 16:30:50,258 DEBUG:client lang: <none>
2024-05-20 16:30:50,258 DEBUG:server lang: <none>
2024-05-20 16:30:50,258 DEBUG:kex follows: False
2024-05-20 16:30:50,258 DEBUG:=== Key exchange agreements ===
2024-05-20 16:30:50,258 DEBUG:Strict kex mode: True
2024-05-20 16:30:50,259 DEBUG:Kex: curve25519-sha256@libssh.org
2024-05-20 16:30:50,259 DEBUG:HostKey: ssh-ed25519
2024-05-20 16:30:50,259 DEBUG:Cipher: aes128-ctr
2024-05-20 16:30:50,259 DEBUG:MAC: hmac-sha2-256
2024-05-20 16:30:50,259 DEBUG:Compression: none
2024-05-20 16:30:50,259 DEBUG:=== End of kex handshake ===
2024-05-20 16:30:50,306 DEBUG:Resetting outbound seqno after NEWKEYS due to strict mode
2024-05-20 16:30:50,306 DEBUG:kex engine KexCurve25519 specified hash_algo <built-in function openssl_sha256>
2024-05-20 16:30:50,306 DEBUG:Switch to new keys ...
2024-05-20 16:30:50,306 DEBUG:Resetting inbound seqno after NEWKEYS due to strict mode
2024-05-20 16:30:50,306 DEBUG:Attempting public-key auth...
2024-05-20 16:30:50,307 DEBUG:Got EXT_INFO: {'server-sig-algs': b'ssh-ed25519,sk-ssh-ed25519@openssh.com,ssh-rsa,rsa-sha2-256,rsa-sha2-512,ssh-dss,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,sk-ecdsa-sha2-nistp256@openssh.com'}
2024-05-20 16:30:50,371 DEBUG:userauth is OK
2024-05-20 16:30:50,372 DEBUG:Finalizing pubkey algorithm for key of type 'ssh-rsa'
2024-05-20 16:30:50,372 DEBUG:Our pubkey algorithm list: ['rsa-sha2-512', 'rsa-sha2-256', 'ssh-rsa']
2024-05-20 16:30:50,372 DEBUG:Server-side algorithm list: ['ssh-ed25519', 'sk-ssh-ed25519@openssh.com', 'ssh-rsa', 'rsa-sha2-256', 'rsa-sha2-512', 'ssh-dss', 'ecdsa-sha2-nistp256', 'ecdsa-sha2-nistp384', 'ecdsa-sha2-nistp521', 'sk-ecdsa-sha2-nistp256@openssh.com']
2024-05-20 16:30:50,372 DEBUG:Agreed upon 'rsa-sha2-512' pubkey algorithm
2024-05-20 16:30:50,432 INFO:Authentication (publickey) successful!
2024-05-20 16:30:50,446 DEBUG:[chan 0] Max packet in: 32768 bytes
2024-05-20 16:30:50,902 DEBUG:Received global request "hostkeys-00@openssh.com"
2024-05-20 16:30:50,902 DEBUG:Rejecting "hostkeys-00@openssh.com" global request from server.
2024-05-20 16:30:50,903 DEBUG:Debug msg: b'/home/smueller/.ssh/authorized_keys:1: key options: agent-forwarding port-forwarding pty user-rc x11-forwarding'
2024-05-20 16:30:50,949 DEBUG:[chan 0] Max packet out: 32768 bytes
2024-05-20 16:30:50,949 DEBUG:Secsh channel 0 opened.
2024-05-20 16:30:50,950 DEBUG:Building SSL context
2024-05-20 16:30:50,969 DEBUG:Switching to SSL
2024-05-20 16:30:51,110 DEBUG:SSL has been enabled
2024-05-20 16:30:51,110 DEBUG:Starting authorization phase
2024-05-20 16:30:51,110 DEBUG:The provided initial strategy is caching_sha2_password
2024-05-20 16:30:51,110 INFO:package: mysql.connector.plugins
2024-05-20 16:30:51,110 INFO:plugin_name: caching_sha2_password
2024-05-20 16:30:51,110 INFO:AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin
2024-05-20 16:30:51,148 DEBUG:Exchanging further packets
2024-05-20 16:30:51,182 DEBUG:caching_sha2_password completed succesfully
2024-05-20 16:30:51,451 DEBUG:[chan 0] EOF sent (0)
2024-05-20 16:30:51,492 DEBUG:[chan 0] EOF received (0)
2024-05-20 16:30:51,923 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A0 && !A1', '!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:30:51,924 DEBUG:Finding kernel for 8 elements of dataset = ['A0 && !A1', '!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:30:51,924 INFO:8 ELEMENTS: ['A0 && !A1', '!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:30:51,924 DEBUG:B_PRIME with 1 elements: ['A0 && !A1']
2024-05-20 16:30:51,942 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A0 && !A1'])
2024-05-20 16:30:51,942 INFO:Checking line: A0 && !A1 with index: 0
2024-05-20 16:30:51,942 DEBUG:Removing element: A0 && !A1
2024-05-20 16:30:51,942 DEBUG:B with 0 elements = []
2024-05-20 16:30:51,961 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn([])
2024-05-20 16:30:51,961 INFO:Kernel output with 1 elements: ['A0 && !A1']
2024-05-20 16:30:51,961 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:30:51,961 DEBUG:Adding node to priority queue with priority: 0, edge: None
2024-05-20 16:30:51,961 DEBUG:Expanding node with bbvalue: 0, edge: None
2024-05-20 16:30:51,961 DEBUG:Checking pruning: node bbvalue = 0, hitting_set_value = 0.0, boundary = inf
2024-05-20 16:30:51,962 DEBUG:Calculating bbvalue: current_node bbvalue = 0, element = A0 && !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 1.0
2024-05-20 16:30:51,962 DEBUG:Adding node to priority queue with priority: -1, edge: A0 && !A1
2024-05-20 16:30:51,962 DEBUG:Expanding node with bbvalue: 1.0, edge: A0 && !A1
2024-05-20 16:30:51,962 DEBUG:Checking pruning: node bbvalue = 1.0, hitting_set_value = 1.0, boundary = inf
2024-05-20 16:30:51,982 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:30:51,982 DEBUG:Finding kernel for 7 elements of dataset = ['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:30:51,982 INFO:7 ELEMENTS: ['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:30:51,982 DEBUG:B_PRIME with 1 elements: ['!A0 || A1']
2024-05-20 16:30:52,001 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1'])
2024-05-20 16:30:52,001 DEBUG:B_PRIME with 2 elements: ['!A0 || A1', '!A1 || A2']
2024-05-20 16:30:52,019 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2'])
2024-05-20 16:30:52,020 DEBUG:B_PRIME with 3 elements: ['!A0 || A1', '!A1 || A2', '!A0 && !A1']
2024-05-20 16:30:52,037 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1'])
2024-05-20 16:30:52,037 DEBUG:B_PRIME with 4 elements: ['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2']
2024-05-20 16:30:52,060 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1', 'A1 && !A2'])
2024-05-20 16:30:52,060 INFO:Checking line: !A0 || A1 with index: 0
2024-05-20 16:30:52,060 DEBUG:Removing element: !A0 || A1
2024-05-20 16:30:52,060 DEBUG:B with 3 elements = ['!A1 || A2', '!A0 && !A1', 'A1 && !A2']
2024-05-20 16:30:52,078 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1 || A2', '!A0 && !A1', 'A1 && !A2'])
2024-05-20 16:30:52,078 INFO:SHRINK: CN = TRUE, removing: !A0 || A1
2024-05-20 16:30:52,078 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['!A1 || A2', '!A0 && !A1', 'A1 && !A2']
2024-05-20 16:30:52,078 INFO:Checking line: !A1 || A2 with index: 0
2024-05-20 16:30:52,078 DEBUG:Removing element: !A1 || A2
2024-05-20 16:30:52,078 DEBUG:B with 2 elements = ['!A0 && !A1', 'A1 && !A2']
2024-05-20 16:30:52,095 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 && !A1', 'A1 && !A2'])
2024-05-20 16:30:52,096 INFO:SHRINK: CN = TRUE, removing: !A1 || A2
2024-05-20 16:30:52,096 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A0 && !A1', 'A1 && !A2']
2024-05-20 16:30:52,096 INFO:Checking line: !A0 && !A1 with index: 0
2024-05-20 16:30:52,096 DEBUG:Removing element: !A0 && !A1
2024-05-20 16:30:52,096 DEBUG:B with 1 elements = ['A1 && !A2']
2024-05-20 16:30:52,113 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['A1 && !A2'])
2024-05-20 16:30:52,113 INFO:Checking line: A1 && !A2 with index: 1
2024-05-20 16:30:52,113 DEBUG:Removing element: A1 && !A2
2024-05-20 16:30:52,113 DEBUG:B with 1 elements = ['!A0 && !A1']
2024-05-20 16:30:52,131 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 && !A1'])
2024-05-20 16:30:52,131 INFO:Kernel output with 2 elements: ['!A0 && !A1', 'A1 && !A2']
2024-05-20 16:30:52,131 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:30:52,131 DEBUG:Calculating bbvalue: current_node bbvalue = 1.0, element = !A0 && !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 2.0
2024-05-20 16:30:52,131 DEBUG:Calculating bbvalue: current_node bbvalue = 1.0, element = A1 && !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 2.0
2024-05-20 16:30:52,131 DEBUG:Adding node to priority queue with priority: -2, edge: A1 && !A2
2024-05-20 16:30:52,131 DEBUG:Adding node to priority queue with priority: 0, edge: !A0 && !A1
2024-05-20 16:30:52,131 DEBUG:Expanding node with bbvalue: 2.0, edge: A1 && !A2
2024-05-20 16:30:52,131 DEBUG:Checking pruning: node bbvalue = 2.0, hitting_set_value = 1.5, boundary = inf
2024-05-20 16:30:52,149 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2', '!A0 && !A1', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:30:52,149 DEBUG:Dataset does not entail A0&&!A0, kernel = empty
2024-05-20 16:30:52,149 DEBUG:Updated boundary: 1.5
2024-05-20 16:30:52,150 DEBUG:Expanding node with bbvalue: 2.0, edge: !A0 && !A1
2024-05-20 16:30:52,150 DEBUG:Checking pruning: node bbvalue = 2.0, hitting_set_value = 1.0, boundary = 1.5
2024-05-20 16:30:52,167 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:30:52,167 DEBUG:Finding kernel for 6 elements of dataset = ['!A0 || A1', '!A1 || A2', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:30:52,167 INFO:6 ELEMENTS: ['!A0 || A1', '!A1 || A2', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:30:52,167 DEBUG:B_PRIME with 1 elements: ['!A0 || A1']
2024-05-20 16:30:52,184 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1'])
2024-05-20 16:30:52,185 DEBUG:B_PRIME with 2 elements: ['!A0 || A1', '!A1 || A2']
2024-05-20 16:30:52,202 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', '!A1 || A2'])
2024-05-20 16:30:52,202 DEBUG:B_PRIME with 3 elements: ['!A0 || A1', '!A1 || A2', 'A1 && !A2']
2024-05-20 16:30:52,219 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', '!A1 || A2', 'A1 && !A2'])
2024-05-20 16:30:52,219 INFO:Checking line: !A0 || A1 with index: 0
2024-05-20 16:30:52,219 DEBUG:Removing element: !A0 || A1
2024-05-20 16:30:52,219 DEBUG:B with 2 elements = ['!A1 || A2', 'A1 && !A2']
2024-05-20 16:30:52,236 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A1 || A2', 'A1 && !A2'])
2024-05-20 16:30:52,236 INFO:SHRINK: CN = TRUE, removing: !A0 || A1
2024-05-20 16:30:52,236 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['!A1 || A2', 'A1 && !A2']
2024-05-20 16:30:52,236 INFO:Checking line: !A1 || A2 with index: 0
2024-05-20 16:30:52,236 DEBUG:Removing element: !A1 || A2
2024-05-20 16:30:52,236 DEBUG:B with 1 elements = ['A1 && !A2']
2024-05-20 16:30:52,254 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['A1 && !A2'])
2024-05-20 16:30:52,254 INFO:Checking line: A1 && !A2 with index: 1
2024-05-20 16:30:52,254 DEBUG:Removing element: A1 && !A2
2024-05-20 16:30:52,254 DEBUG:B with 1 elements = ['!A1 || A2']
2024-05-20 16:30:52,271 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A1 || A2'])
2024-05-20 16:30:52,271 INFO:Kernel output with 2 elements: ['!A1 || A2', 'A1 && !A2']
2024-05-20 16:30:52,271 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:30:52,271 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = !A1 || A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-05-20 16:30:52,271 DEBUG:Calculating bbvalue: current_node bbvalue = 2.0, element = A1 && !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 3.0
2024-05-20 16:30:52,271 DEBUG:Adding node to priority queue with priority: -2, edge: A1 && !A2
2024-05-20 16:30:52,271 DEBUG:Adding node to priority queue with priority: 0, edge: !A1 || A2
2024-05-20 16:30:52,272 DEBUG:Expanding node with bbvalue: 3.0, edge: A1 && !A2
2024-05-20 16:30:52,272 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 1.5, boundary = 1.5
2024-05-20 16:30:52,272 DEBUG:Pruning node with bbvalue: 3.0, edge: A1 && !A2
2024-05-20 16:30:52,272 DEBUG:Expanding node with bbvalue: 3.0, edge: !A1 || A2
2024-05-20 16:30:52,272 DEBUG:Checking pruning: node bbvalue = 3.0, hitting_set_value = 1.0, boundary = 1.5
2024-05-20 16:30:52,289 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0'])
2024-05-20 16:30:52,289 DEBUG:Finding kernel for 5 elements of dataset = ['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:30:52,289 INFO:5 ELEMENTS: ['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1', '!A0']
2024-05-20 16:30:52,289 DEBUG:B_PRIME with 1 elements: ['!A0 || A1']
2024-05-20 16:30:52,307 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1'])
2024-05-20 16:30:52,307 DEBUG:B_PRIME with 2 elements: ['!A0 || A1', 'A1 && !A2']
2024-05-20 16:30:52,324 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', 'A1 && !A2'])
2024-05-20 16:30:52,324 DEBUG:B_PRIME with 3 elements: ['!A0 || A1', 'A1 && !A2', '!A0 || !A1']
2024-05-20 16:30:52,342 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || A1', 'A1 && !A2', '!A0 || !A1'])
2024-05-20 16:30:52,342 DEBUG:B_PRIME with 4 elements: ['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1']
2024-05-20 16:30:52,359 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['!A0 || A1', 'A1 && !A2', '!A0 || !A1', 'A2 && !A1'])
2024-05-20 16:30:52,360 INFO:Checking line: !A0 || A1 with index: 0
2024-05-20 16:30:52,360 DEBUG:Removing element: !A0 || A1
2024-05-20 16:30:52,360 DEBUG:B with 3 elements = ['A1 && !A2', '!A0 || !A1', 'A2 && !A1']
2024-05-20 16:30:52,377 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1 && !A2', '!A0 || !A1', 'A2 && !A1'])
2024-05-20 16:30:52,377 INFO:SHRINK: CN = TRUE, removing: !A0 || A1
2024-05-20 16:30:52,377 DEBUG:CONTINUE SHRINKING WITH 3 elements : ['A1 && !A2', '!A0 || !A1', 'A2 && !A1']
2024-05-20 16:30:52,377 INFO:Checking line: A1 && !A2 with index: 0
2024-05-20 16:30:52,377 DEBUG:Removing element: A1 && !A2
2024-05-20 16:30:52,377 DEBUG:B with 2 elements = ['!A0 || !A1', 'A2 && !A1']
2024-05-20 16:30:52,394 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['!A0 || !A1', 'A2 && !A1'])
2024-05-20 16:30:52,395 INFO:Checking line: !A0 || !A1 with index: 1
2024-05-20 16:30:52,395 DEBUG:Removing element: !A0 || !A1
2024-05-20 16:30:52,395 DEBUG:B with 2 elements = ['A1 && !A2', 'A2 && !A1']
2024-05-20 16:30:52,413 DEBUG:MiniSat result: UNSAT. Therefore, A0&&!A0 is in Cn(['A1 && !A2', 'A2 && !A1'])
2024-05-20 16:30:52,413 INFO:SHRINK: CN = TRUE, removing: !A0 || !A1
2024-05-20 16:30:52,413 DEBUG:CONTINUE SHRINKING WITH 2 elements : ['A1 && !A2', 'A2 && !A1']
2024-05-20 16:30:52,413 INFO:Checking line: A2 && !A1 with index: 1
2024-05-20 16:30:52,413 DEBUG:Removing element: A2 && !A1
2024-05-20 16:30:52,413 DEBUG:B with 1 elements = ['A1 && !A2']
2024-05-20 16:30:52,438 DEBUG:MiniSat result: SAT. Therefore, A0&&!A0 is not in Cn(['A1 && !A2'])
2024-05-20 16:30:52,438 INFO:Kernel output with 2 elements: ['A1 && !A2', 'A2 && !A1']
2024-05-20 16:30:52,438 INFO:KERNEL BLACKBOX FINISHED
2024-05-20 16:30:52,438 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = A1 && !A2, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-05-20 16:30:52,438 DEBUG:Calculating bbvalue: current_node bbvalue = 3.0, element = A2 && !A1, assigned_value = 1, transformed_value = 1.0, new_bbvalue = 4.0
2024-05-20 16:30:52,438 DEBUG:Adding node to priority queue with priority: -2, edge: A1 && !A2
2024-05-20 16:30:52,438 DEBUG:Adding node to priority queue with priority: -1, edge: A2 && !A1
2024-05-20 16:30:52,439 DEBUG:Expanding node with bbvalue: 4.0, edge: A1 && !A2
2024-05-20 16:30:52,439 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 1.5, boundary = 1.5
2024-05-20 16:30:52,439 DEBUG:Pruning node with bbvalue: 4.0, edge: A1 && !A2
2024-05-20 16:30:52,439 DEBUG:Expanding node with bbvalue: 4.0, edge: A2 && !A1
2024-05-20 16:30:52,439 DEBUG:Checking pruning: node bbvalue = 4.0, hitting_set_value = 2.0, boundary = 1.5
2024-05-20 16:30:52,439 DEBUG:Pruning node with bbvalue: 4.0, edge: A2 && !A1
